import {
  ClientType,
  FieldType,
  FormDependency,
  FormField,
  FormMetadata,
  FormModule,
  FormPermission,
  FormSection,
  ValidationRuleType,
} from "../types";
import { formRegistry } from "../registry";

/**
 * Initial Assessment Form Metadata
 *
 * This form is used for the initial assessment of a beneficiary's home
 * to determine eligibility and requirements for home modifications.
 */
export const initialAssessmentFormMetadata: FormMetadata = {
  id: "initial-assessment-form",
  title: "Initial Home Assessment",
  description:
    "Initial assessment of beneficiary's home to determine eligibility and requirements",
  module: FormModule.ASSESSMENT,
  version: "1.0.0",
  permissions: {
    [FormPermission.VIEW]: ["assessor", "supervisor", "admin"],
    [FormPermission.CREATE]: ["assessor", "admin"],
    [FormPermission.EDIT]: ["assessor", "admin"],
    [FormPermission.DELETE]: ["admin"],
    [FormPermission.APPROVE]: ["supervisor", "admin"],
    [FormPermission.REJECT]: ["supervisor", "admin"],
    [FormPermission.SUBMIT]: ["assessor", "admin"],
    [FormPermission.PRINT]: ["assessor", "supervisor", "admin"],
    [FormPermission.EXPORT]: ["supervisor", "admin"],
  },
  clientTypes: [ClientType.FDF, ClientType.ADHA, ClientType.CASH],
  sections: [
    {
      id: "beneficiary-info",
      title: "Beneficiary Information",
      description: "Personal details of the beneficiary",
      order: 1,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "home-overview",
      title: "Home Overview",
      description: "General information about the beneficiary's home",
      order: 2,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "accessibility-needs",
      title: "Accessibility Needs",
      description: "Assessment of beneficiary's accessibility requirements",
      order: 3,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "room-inventory",
      title: "Room Inventory",
      description: "List of rooms to be assessed in detail",
      order: 4,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "fdf-specific",
      title: "FDF Requirements",
      description: "FDF-specific assessment criteria",
      order: 5,
      collapsible: true,
      collapsed: false,
      clientTypes: [ClientType.FDF],
      conditional: {
        field: "clientType",
        operator: "equals",
        value: ClientType.FDF,
      },
    },
    {
      id: "adha-specific",
      title: "ADHA Requirements",
      description: "ADHA-specific assessment criteria",
      order: 6,
      collapsible: true,
      collapsed: false,
      clientTypes: [ClientType.ADHA],
      conditional: {
        field: "clientType",
        operator: "equals",
        value: ClientType.ADHA,
      },
    },
  ],
  fields: [
    // Beneficiary Information Section
    {
      id: "clientType",
      name: "clientType",
      label: "Client Type",
      type: FieldType.SELECT,
      section: "beneficiary-info",
      required: true,
      options: [
        { value: ClientType.FDF, label: "FDF" },
        { value: ClientType.ADHA, label: "ADHA" },
        { value: ClientType.CASH, label: "Cash Client" },
      ],
      order: 1,
      width: "half",
    },
    {
      id: "beneficiaryId",
      name: "beneficiaryId",
      label: "Beneficiary ID",
      type: FieldType.TEXT,
      section: "beneficiary-info",
      required: true,
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Beneficiary ID is required",
        },
      ],
      order: 2,
      width: "half",
      dataSource: {
        type: "api",
        source: "/api/beneficiaries/lookup",
        valueField: "id",
        labelField: "fullName",
        filters: { active: true },
      },
    },
    {
      id: "assessmentDate",
      name: "assessmentDate",
      label: "Assessment Date",
      type: FieldType.DATE,
      section: "beneficiary-info",
      required: true,
      defaultValue: new Date().toISOString().split("T")[0],
      order: 3,
      width: "half",
    },
    {
      id: "assessorId",
      name: "assessorId",
      label: "Assessor",
      type: FieldType.SELECT,
      section: "beneficiary-info",
      required: true,
      order: 4,
      width: "half",
      dataSource: {
        type: "api",
        source: "/api/users/assessors",
        valueField: "id",
        labelField: "fullName",
        filters: { active: true },
      },
    },

    // Home Overview Section
    {
      id: "propertyType",
      name: "propertyType",
      label: "Property Type",
      type: FieldType.SELECT,
      section: "home-overview",
      required: true,
      options: [
        { value: "apartment", label: "Apartment" },
        { value: "house", label: "House" },
        { value: "villa", label: "Villa" },
      ],
      order: 1,
      width: "half",
    },
    {
      id: "constructionYear",
      name: "constructionYear",
      label: "Year of Construction",
      type: FieldType.NUMBER,
      section: "home-overview",
      required: false,
      order: 2,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 1900,
          message: "Construction year must be after 1900",
        },
        {
          type: ValidationRuleType.MAX_VALUE,
          value: new Date().getFullYear(),
          message: "Construction year cannot be in the future",
        },
      ],
    },
    {
      id: "floorCount",
      name: "floorCount",
      label: "Number of Floors",
      type: FieldType.NUMBER,
      section: "home-overview",
      required: true,
      defaultValue: 1,
      order: 3,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 1,
          message: "Must have at least 1 floor",
        },
      ],
    },
    {
      id: "totalArea",
      name: "totalArea",
      label: "Total Area (sq m)",
      type: FieldType.NUMBER,
      section: "home-overview",
      required: true,
      order: 4,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 10,
          message: "Area must be at least 10 sq m",
        },
      ],
    },
    {
      id: "hasElevator",
      name: "hasElevator",
      label: "Has Elevator",
      type: FieldType.CHECKBOX,
      section: "home-overview",
      required: false,
      order: 5,
      width: "half",
      conditional: {
        field: "propertyType",
        operator: "equals",
        value: "apartment",
      },
    },

    // Accessibility Needs Section
    {
      id: "mobilityAids",
      name: "mobilityAids",
      label: "Mobility Aids Used",
      type: FieldType.MULTISELECT,
      section: "accessibility-needs",
      required: true,
      options: [
        { value: "wheelchair", label: "Wheelchair" },
        { value: "walker", label: "Walker" },
        { value: "cane", label: "Cane" },
        { value: "crutches", label: "Crutches" },
        { value: "none", label: "None" },
      ],
      order: 1,
      width: "full",
    },
    {
      id: "primaryConcerns",
      name: "primaryConcerns",
      label: "Primary Accessibility Concerns",
      type: FieldType.MULTISELECT,
      section: "accessibility-needs",
      required: true,
      options: [
        { value: "bathroom", label: "Bathroom Access" },
        { value: "stairs", label: "Stairs/Level Changes" },
        { value: "doorways", label: "Narrow Doorways" },
        { value: "kitchen", label: "Kitchen Access" },
        { value: "bedroom", label: "Bedroom Access" },
      ],
      order: 2,
      width: "full",
    },
    {
      id: "urgencyLevel",
      name: "urgencyLevel",
      label: "Urgency Level",
      type: FieldType.SELECT,
      section: "accessibility-needs",
      required: true,
      options: [
        { value: "critical", label: "Critical - Immediate action required" },
        { value: "high", label: "High - Action required within 1 month" },
        { value: "medium", label: "Medium - Action required within 3 months" },
        { value: "low", label: "Low - Action can be scheduled later" },
      ],
      order: 3,
      width: "half",
    },

    // Room Inventory Section
    {
      id: "roomsToAssess",
      name: "roomsToAssess",
      label: "Rooms to Assess",
      type: FieldType.MULTISELECT,
      section: "room-inventory",
      required: true,
      options: [
        { value: "bathroom", label: "Bathroom" },
        { value: "kitchen", label: "Kitchen" },
        { value: "bedroom", label: "Bedroom" },
        { value: "livingRoom", label: "Living Room" },
        { value: "entrance", label: "Entrance/Hallway" },
        { value: "stairs", label: "Stairs" },
      ],
      order: 1,
      width: "full",
    },
    {
      id: "bathroomCount",
      name: "bathroomCount",
      label: "Number of Bathrooms",
      type: FieldType.NUMBER,
      section: "room-inventory",
      required: true,
      defaultValue: 1,
      order: 2,
      width: "third",
      conditional: {
        field: "roomsToAssess",
        operator: "contains",
        value: "bathroom",
      },
    },
    {
      id: "bedroomCount",
      name: "bedroomCount",
      label: "Number of Bedrooms",
      type: FieldType.NUMBER,
      section: "room-inventory",
      required: true,
      defaultValue: 1,
      order: 3,
      width: "third",
      conditional: {
        field: "roomsToAssess",
        operator: "contains",
        value: "bedroom",
      },
    },

    // FDF-specific Section
    {
      id: "fdfCaseNumber",
      name: "fdfCaseNumber",
      label: "FDF Case Number",
      type: FieldType.TEXT,
      section: "fdf-specific",
      required: true,
      order: 1,
      width: "half",
      clientTypes: [ClientType.FDF],
      validation: [
        {
          type: ValidationRuleType.PATTERN,
          value: "^FDF-\\d{6}$",
          message: "FDF Case Number must be in format FDF-XXXXXX",
          clientTypes: [ClientType.FDF],
        },
      ],
    },
    {
      id: "fdfPriorityCategory",
      name: "fdfPriorityCategory",
      label: "FDF Priority Category",
      type: FieldType.SELECT,
      section: "fdf-specific",
      required: true,
      options: [
        { value: "category1", label: "Category 1 - Highest Priority" },
        { value: "category2", label: "Category 2 - High Priority" },
        { value: "category3", label: "Category 3 - Medium Priority" },
        { value: "category4", label: "Category 4 - Standard Priority" },
      ],
      order: 2,
      width: "half",
      clientTypes: [ClientType.FDF],
    },

    // ADHA-specific Section
    {
      id: "adhaReferenceNumber",
      name: "adhaReferenceNumber",
      label: "ADHA Reference Number",
      type: FieldType.TEXT,
      section: "adha-specific",
      required: true,
      order: 1,
      width: "half",
      clientTypes: [ClientType.ADHA],
      validation: [
        {
          type: ValidationRuleType.PATTERN,
          value: "^ADHA-\\d{8}$",
          message: "ADHA Reference Number must be in format ADHA-XXXXXXXX",
          clientTypes: [ClientType.ADHA],
        },
      ],
    },
    {
      id: "adhaApprovalDate",
      name: "adhaApprovalDate",
      label: "ADHA Approval Date",
      type: FieldType.DATE,
      section: "adha-specific",
      required: true,
      order: 2,
      width: "half",
      clientTypes: [ClientType.ADHA],
    },
  ],
  dependencies: [],
  submitEndpoint: "/api/assessments/initial",
  fetchDataEndpoint: "/api/assessments/initial/{id}",
  clientTypeOverrides: {
    [ClientType.FDF]: {
      title: "FDF Initial Home Assessment",
      submitEndpoint: "/api/assessments/initial/fdf",
    },
    [ClientType.ADHA]: {
      title: "ADHA Initial Home Assessment",
      submitEndpoint: "/api/assessments/initial/adha",
    },
    [ClientType.CASH]: {
      title: "Cash Client Initial Home Assessment",
      submitEndpoint: "/api/assessments/initial/cash",
    },
  },
  createdAt: new Date(),
  updatedAt: new Date(),
  isActive: true,
};

/**
 * Room Assessment Form Metadata
 *
 * This form is used for detailed assessment of individual rooms
 * in a beneficiary's home to determine specific modifications needed.
 */
export const roomAssessmentFormMetadata: FormMetadata = {
  id: "room-assessment-form",
  title: "Room Assessment",
  description: "Detailed assessment of a specific room in beneficiary's home",
  module: FormModule.ASSESSMENT,
  version: "1.0.0",
  permissions: {
    [FormPermission.VIEW]: ["assessor", "supervisor", "admin"],
    [FormPermission.CREATE]: ["assessor", "admin"],
    [FormPermission.EDIT]: ["assessor", "admin"],
    [FormPermission.DELETE]: ["admin"],
    [FormPermission.APPROVE]: ["supervisor", "admin"],
    [FormPermission.REJECT]: ["supervisor", "admin"],
    [FormPermission.SUBMIT]: ["assessor", "admin"],
    [FormPermission.PRINT]: ["assessor", "supervisor", "admin"],
    [FormPermission.EXPORT]: ["supervisor", "admin"],
  },
  clientTypes: [ClientType.FDF, ClientType.ADHA, ClientType.CASH],
  sections: [
    {
      id: "room-info",
      title: "Room Information",
      description: "Basic information about the room",
      order: 1,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "measurements",
      title: "Measurements",
      description: "Detailed measurements of the room",
      order: 2,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "accessibility-issues",
      title: "Accessibility Issues",
      description: "Identified accessibility issues in the room",
      order: 3,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "recommendations",
      title: "Recommendations",
      description: "Recommended modifications for the room",
      order: 4,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "photos",
      title: "Photos",
      description: "Photos of the room and specific areas",
      order: 5,
      collapsible: true,
      collapsed: false,
    },
  ],
  fields: [
    // Room Information Section
    {
      id: "initialAssessmentId",
      name: "initialAssessmentId",
      label: "Initial Assessment Reference",
      type: FieldType.REFERENCE,
      section: "room-info",
      required: true,
      order: 1,
      width: "full",
      dataSource: {
        type: "api",
        source: "/api/assessments/initial/list",
        valueField: "id",
        labelField: "title",
        filters: { status: "approved" },
      },
    },
    {
      id: "roomType",
      name: "roomType",
      label: "Room Type",
      type: FieldType.SELECT,
      section: "room-info",
      required: true,
      options: [
        { value: "bathroom", label: "Bathroom" },
        { value: "kitchen", label: "Kitchen" },
        { value: "bedroom", label: "Bedroom" },
        { value: "livingRoom", label: "Living Room" },
        { value: "entrance", label: "Entrance/Hallway" },
        { value: "stairs", label: "Stairs" },
      ],
      order: 2,
      width: "half",
    },
    {
      id: "roomName",
      name: "roomName",
      label: "Room Name/Identifier",
      type: FieldType.TEXT,
      section: "room-info",
      required: true,
      order: 3,
      width: "half",
      placeholder: "e.g., Master Bathroom, Kitchen 1",
    },
    {
      id: "floorLevel",
      name: "floorLevel",
      label: "Floor Level",
      type: FieldType.NUMBER,
      section: "room-info",
      required: true,
      defaultValue: 1,
      order: 4,
      width: "half",
    },

    // Measurements Section
    {
      id: "roomLength",
      name: "roomLength",
      label: "Room Length (cm)",
      type: FieldType.NUMBER,
      section: "measurements",
      required: true,
      order: 1,
      width: "third",
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 50,
          message: "Length must be at least 50 cm",
        },
      ],
    },
    {
      id: "roomWidth",
      name: "roomWidth",
      label: "Room Width (cm)",
      type: FieldType.NUMBER,
      section: "measurements",
      required: true,
      order: 2,
      width: "third",
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 50,
          message: "Width must be at least 50 cm",
        },
      ],
    },
    {
      id: "roomHeight",
      name: "roomHeight",
      label: "Room Height (cm)",
      type: FieldType.NUMBER,
      section: "measurements",
      required: true,
      order: 3,
      width: "third",
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 200,
          message: "Height must be at least 200 cm",
        },
      ],
    },
    {
      id: "doorWidth",
      name: "doorWidth",
      label: "Door Width (cm)",
      type: FieldType.NUMBER,
      section: "measurements",
      required: true,
      order: 4,
      width: "third",
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 30,
          message: "Door width must be at least 30 cm",
        },
      ],
    },
    {
      id: "doorThreshold",
      name: "doorThreshold",
      label: "Door Threshold Height (cm)",
      type: FieldType.NUMBER,
      section: "measurements",
      required: true,
      defaultValue: 0,
      order: 5,
      width: "third",
    },

    // Accessibility Issues Section
    {
      id: "identifiedIssues",
      name: "identifiedIssues",
      label: "Identified Accessibility Issues",
      type: FieldType.MULTISELECT,
      section: "accessibility-issues",
      required: true,
      options: [
        { value: "narrowDoorway", label: "Narrow Doorway" },
        { value: "highThreshold", label: "High Threshold" },
        { value: "inadequateSpace", label: "Inadequate Maneuvering Space" },
        { value: "poorLighting", label: "Poor Lighting" },
        { value: "slipperyFloor", label: "Slippery Floor" },
        { value: "noGrabBars", label: "No Grab Bars" },
        { value: "inaccessibleFixtures", label: "Inaccessible Fixtures" },
        { value: "inaccessibleStorage", label: "Inaccessible Storage" },
      ],
      order: 1,
      width: "full",
    },
    {
      id: "issueDetails",
      name: "issueDetails",
      label: "Issue Details",
      type: FieldType.TEXTAREA,
      section: "accessibility-issues",
      required: true,
      order: 2,
      width: "full",
      placeholder: "Provide detailed description of accessibility issues...",
    },
    {
      id: "priorityLevel",
      name: "priorityLevel",
      label: "Priority Level",
      type: FieldType.SELECT,
      section: "accessibility-issues",
      required: true,
      options: [
        { value: "critical", label: "Critical - Safety hazard" },
        { value: "high", label: "High - Severely limits accessibility" },
        { value: "medium", label: "Medium - Moderately limits accessibility" },
        { value: "low", label: "Low - Minor inconvenience" },
      ],
      order: 3,
      width: "half",
    },

    // Recommendations Section
    {
      id: "recommendedModifications",
      name: "recommendedModifications",
      label: "Recommended Modifications",
      type: FieldType.MULTISELECT,
      section: "recommendations",
      required: true,
      options: [
        { value: "widenDoorway", label: "Widen Doorway" },
        { value: "removeThreshold", label: "Remove/Reduce Threshold" },
        { value: "installRamp", label: "Install Ramp" },
        { value: "installGrabBars", label: "Install Grab Bars" },
        { value: "adjustFixtureHeight", label: "Adjust Fixture Height" },
        { value: "improveFlooring", label: "Improve Flooring" },
        { value: "improveLighting", label: "Improve Lighting" },
        { value: "installLift", label: "Install Lift" },
      ],
      order: 1,
      width: "full",
      dependencies: [
        {
          type: "options",
          sourceField: "identifiedIssues",
          condition: "value.includes('narrowDoorway')",
          action:
            "options.find(o => o.value === 'widenDoorway').highlighted = true",
        },
        {
          type: "options",
          sourceField: "identifiedIssues",
          condition: "value.includes('highThreshold')",
          action:
            "options.find(o => o.value === 'removeThreshold').highlighted = true",
        },
        {
          type: "options",
          sourceField: "identifiedIssues",
          condition: "value.includes('noGrabBars')",
          action:
            "options.find(o => o.value === 'installGrabBars').highlighted = true",
        },
      ],
    },
    {
      id: "modificationDetails",
      name: "modificationDetails",
      label: "Modification Details",
      type: FieldType.TEXTAREA,
      section: "recommendations",
      required: true,
      order: 2,
      width: "full",
      placeholder:
        "Provide detailed specifications for recommended modifications...",
    },
    {
      id: "estimatedCost",
      name: "estimatedCost",
      label: "Estimated Cost (SAR)",
      type: FieldType.NUMBER,
      section: "recommendations",
      required: true,
      order: 3,
      width: "half",
    },

    // Photos Section
    {
      id: "roomPhotos",
      name: "roomPhotos",
      label: "Room Photos",
      type: FieldType.FILE,
      section: "photos",
      required: true,
      order: 1,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.MIN_LENGTH,
          value: 1,
          message: "At least one photo is required",
        },
      ],
    },
    {
      id: "photoNotes",
      name: "photoNotes",
      label: "Photo Notes",
      type: FieldType.TEXTAREA,
      section: "photos",
      required: false,
      order: 2,
      width: "full",
      placeholder: "Add notes about the photos...",
    },
  ],
  dependencies: [
    {
      formId: "initial-assessment-form",
      description: "Room assessment requires an initial assessment",
      type: "prerequisite",
      required: true,
    },
  ],
  submitEndpoint: "/api/assessments/room",
  fetchDataEndpoint: "/api/assessments/room/{id}",
  clientTypeOverrides: {
    [ClientType.FDF]: {
      title: "FDF Room Assessment",
      submitEndpoint: "/api/assessments/room/fdf",
    },
    [ClientType.ADHA]: {
      title: "ADHA Room Assessment",
      submitEndpoint: "/api/assessments/room/adha",
    },
  },
  createdAt: new Date(),
  updatedAt: new Date(),
  isActive: true,
};

// Register the forms
formRegistry.registerForm(
  {
    id: initialAssessmentFormMetadata.id,
    title: initialAssessmentFormMetadata.title,
    description: initialAssessmentFormMetadata.description,
    module: initialAssessmentFormMetadata.module,
    clientTypes: initialAssessmentFormMetadata.clientTypes,
    permissions: initialAssessmentFormMetadata.permissions,
    dependencies: initialAssessmentFormMetadata.dependencies,
    version: initialAssessmentFormMetadata.version,
    path: "/assessments/initial",
    icon: "clipboard-check",
    isActive: initialAssessmentFormMetadata.isActive,
  },
  initialAssessmentFormMetadata,
);

formRegistry.registerForm(
  {
    id: roomAssessmentFormMetadata.id,
    title: roomAssessmentFormMetadata.title,
    description: roomAssessmentFormMetadata.description,
    module: roomAssessmentFormMetadata.module,
    clientTypes: roomAssessmentFormMetadata.clientTypes,
    permissions: roomAssessmentFormMetadata.permissions,
    dependencies: roomAssessmentFormMetadata.dependencies,
    version: roomAssessmentFormMetadata.version,
    path: "/assessments/room",
    icon: "layout-dashboard",
    isActive: roomAssessmentFormMetadata.isActive,
  },
  roomAssessmentFormMetadata,
);
