import {
  ClientType,
  FieldType,
  FormMetadata,
  FormModule,
  FormPermission,
  ValidationRuleType,
} from "../types";
import { formRegistry } from "../registry";

/**
 * Functional Assessment Form (F03.4)
 * Used to evaluate physical functioning and mobility status of beneficiaries
 */
export const functionalAssessmentForm: FormMetadata = {
  id: "functional-assessment-form",
  title: "Functional Assessment",
  description:
    "Evaluate physical functioning and mobility status of beneficiaries",
  module: FormModule.ASSESSMENT,
  version: "1.0.0",
  permissions: {
    [FormPermission.VIEW]: [
      "admin",
      "manager",
      "assessment-specialist",
      "case-manager",
      "physical-therapist",
    ],
    [FormPermission.CREATE]: [
      "admin",
      "manager",
      "assessment-specialist",
      "physical-therapist",
    ],
    [FormPermission.EDIT]: [
      "admin",
      "manager",
      "assessment-specialist",
      "physical-therapist",
    ],
    [FormPermission.DELETE]: ["admin"],
    [FormPermission.APPROVE]: ["admin", "manager"],
    [FormPermission.REJECT]: ["admin", "manager"],
    [FormPermission.SUBMIT]: [
      "admin",
      "manager",
      "assessment-specialist",
      "physical-therapist",
    ],
    [FormPermission.PRINT]: [
      "admin",
      "manager",
      "assessment-specialist",
      "case-manager",
      "physical-therapist",
    ],
    [FormPermission.EXPORT]: ["admin", "manager"],
  },
  clientTypes: [
    ClientType.FDF,
    ClientType.ADHA,
    ClientType.CASH,
    ClientType.OTHER,
  ],
  sections: [
    {
      id: "beneficiary-information",
      title: "Beneficiary Information",
      description: "Basic information about the beneficiary",
      order: 1,
      collapsible: false,
    },
    {
      id: "mobility-assessment",
      title: "Mobility Assessment",
      description: "Assessment of mobility capabilities and limitations",
      order: 2,
      collapsible: false,
    },
    {
      id: "adl-assessment",
      title: "Activities of Daily Living",
      description: "Assessment of ability to perform daily activities",
      order: 3,
      collapsible: false,
    },
    {
      id: "iadl-assessment",
      title: "Instrumental Activities of Daily Living",
      description: "Assessment of ability to perform instrumental activities",
      order: 4,
      collapsible: false,
    },
    {
      id: "balance-assessment",
      title: "Balance Assessment",
      description: "Assessment of balance and fall risk",
      order: 5,
      collapsible: true,
    },
    {
      id: "strength-assessment",
      title: "Strength Assessment",
      description: "Assessment of muscle strength",
      order: 6,
      collapsible: true,
    },
    {
      id: "pain-assessment",
      title: "Pain Assessment",
      description: "Assessment of pain levels and locations",
      order: 7,
      collapsible: true,
    },
    {
      id: "recommendations",
      title: "Recommendations",
      description: "Support recommendations and interventions",
      order: 8,
      collapsible: false,
    },
    {
      id: "assessment-details",
      title: "Assessment Details",
      description: "Details about the assessment process",
      order: 9,
      collapsible: true,
    },
  ],
  fields: [
    {
      id: "assessment-id",
      name: "assessmentId",
      label: "Assessment ID",
      type: FieldType.TEXT,
      readOnly: true,
      required: false,
      section: "beneficiary-information",
      order: 1,
      width: "full",
      helpText: "Auto-generated unique identifier (Format: FA-YYYY-NNNNN)",
      defaultValue: "",
    },
    {
      id: "beneficiary-id",
      name: "beneficiaryId",
      label: "Beneficiary",
      type: FieldType.LOOKUP,
      required: true,
      section: "beneficiary-information",
      order: 2,
      width: "full",
      dataSource: {
        type: "api",
        source: "/api/v1/beneficiaries",
        valueField: "id",
        labelField: "fullName",
        filters: { status: "active" },
      },
    },
    {
      id: "beneficiary-name",
      name: "beneficiaryName",
      label: "Beneficiary Name",
      type: FieldType.TEXT,
      readOnly: true,
      required: false,
      section: "beneficiary-information",
      order: 3,
      width: "half",
      dependencies: [
        {
          type: "value",
          sourceField: "beneficiaryId",
          condition: "!!value",
          action: "fetchBeneficiaryName(value)",
        },
      ],
    },
    {
      id: "assessment-date",
      name: "assessmentDate",
      label: "Assessment Date",
      type: FieldType.DATE,
      required: true,
      section: "beneficiary-information",
      order: 4,
      width: "half",
      defaultValue: new Date().toISOString().split("T")[0],
      validation: [
        {
          type: ValidationRuleType.CUSTOM,
          value: (value: string) => {
            const assessDate = new Date(value);
            const today = new Date();
            return assessDate <= today;
          },
          message: "Assessment date cannot be in the future",
        },
      ],
    },
    {
      id: "case-id",
      name: "caseId",
      label: "Case Reference",
      type: FieldType.TEXT,
      readOnly: true,
      required: false,
      section: "beneficiary-information",
      order: 5,
      width: "half",
      dependencies: [
        {
          type: "value",
          sourceField: "beneficiaryId",
          condition: "!!value",
          action: "fetchCaseId(value)",
        },
      ],
    },
    {
      id: "assessment-type",
      name: "assessmentType",
      label: "Assessment Type",
      type: FieldType.SELECT,
      required: true,
      section: "beneficiary-information",
      order: 6,
      width: "half",
      options: [
        { value: "Initial", label: "Initial" },
        { value: "Follow-up", label: "Follow-up" },
        { value: "Reassessment", label: "Reassessment" },
      ],
      defaultValue: "Initial",
    },
    {
      id: "mobility-status",
      name: "mobilityStatus",
      label: "Mobility Status",
      type: FieldType.SELECT,
      required: true,
      section: "mobility-assessment",
      order: 1,
      width: "half",
      options: [
        { value: "Independent", label: "Independent" },
        { value: "Uses Assistive Device", label: "Uses Assistive Device" },
        { value: "Requires Assistance", label: "Requires Assistance" },
        { value: "Dependent", label: "Dependent" },
        { value: "Bedbound", label: "Bedbound" },
      ],
    },
    {
      id: "assistive-devices",
      name: "assistiveDevices",
      label: "Assistive Devices Used",
      type: FieldType.MULTISELECT,
      required: false,
      section: "mobility-assessment",
      order: 2,
      width: "half",
      options: [
        { value: "None", label: "None" },
        { value: "Cane", label: "Cane" },
        { value: "Walker", label: "Walker" },
        { value: "Wheelchair", label: "Wheelchair" },
        { value: "Crutches", label: "Crutches" },
        { value: "Prosthesis", label: "Prosthesis" },
        { value: "Other", label: "Other" },
      ],
      dependencies: [
        {
          type: "visibility",
          sourceField: "mobilityStatus",
          condition:
            "value === 'Uses Assistive Device' || value === 'Requires Assistance'",
          action: "visible = true",
        },
      ],
    },
    {
      id: "other-assistive-device",
      name: "otherAssistiveDevice",
      label: "Other Assistive Device",
      type: FieldType.TEXT,
      required: false,
      section: "mobility-assessment",
      order: 3,
      width: "half",
      dependencies: [
        {
          type: "visibility",
          sourceField: "assistiveDevices",
          condition: "value && value.includes('Other')",
          action: "visible = true",
        },
      ],
    },
    {
      id: "gait-assessment",
      name: "gaitAssessment",
      label: "Gait Assessment",
      type: FieldType.SELECT,
      required: true,
      section: "mobility-assessment",
      order: 4,
      width: "half",
      options: [
        { value: "Normal", label: "Normal" },
        { value: "Mild Impairment", label: "Mild Impairment" },
        { value: "Moderate Impairment", label: "Moderate Impairment" },
        { value: "Severe Impairment", label: "Severe Impairment" },
        { value: "Unable to Assess", label: "Unable to Assess" },
      ],
      dependencies: [
        {
          type: "visibility",
          sourceField: "mobilityStatus",
          condition: "value !== 'Bedbound'",
          action: "visible = true",
        },
      ],
    },
    {
      id: "mobility-notes",
      name: "mobilityNotes",
      label: "Mobility Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about mobility assessment",
      required: false,
      section: "mobility-assessment",
      order: 5,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 500,
          message: "Notes cannot exceed 500 characters",
        },
      ],
    },
    {
      id: "transfer-ability",
      name: "transferAbility",
      label: "Transfer Ability",
      type: FieldType.SELECT,
      required: true,
      section: "mobility-assessment",
      order: 6,
      width: "half",
      options: [
        { value: "Independent", label: "Independent" },
        { value: "Minimal Assistance", label: "Minimal Assistance" },
        { value: "Moderate Assistance", label: "Moderate Assistance" },
        { value: "Maximum Assistance", label: "Maximum Assistance" },
        { value: "Dependent", label: "Dependent" },
      ],
    },
    {
      id: "bathing",
      name: "bathing",
      label: "Bathing",
      type: FieldType.SELECT,
      required: true,
      section: "adl-assessment",
      order: 1,
      width: "half",
      options: [
        { value: "Independent", label: "Independent" },
        { value: "Minimal Assistance", label: "Minimal Assistance" },
        { value: "Moderate Assistance", label: "Moderate Assistance" },
        { value: "Maximum Assistance", label: "Maximum Assistance" },
        { value: "Dependent", label: "Dependent" },
      ],
    },
    {
      id: "dressing",
      name: "dressing",
      label: "Dressing",
      type: FieldType.SELECT,
      required: true,
      section: "adl-assessment",
      order: 2,
      width: "half",
      options: [
        { value: "Independent", label: "Independent" },
        { value: "Minimal Assistance", label: "Minimal Assistance" },
        { value: "Moderate Assistance", label: "Moderate Assistance" },
        { value: "Maximum Assistance", label: "Maximum Assistance" },
        { value: "Dependent", label: "Dependent" },
      ],
    },
    {
      id: "toileting",
      name: "toileting",
      label: "Toileting",
      type: FieldType.SELECT,
      required: true,
      section: "adl-assessment",
      order: 3,
      width: "half",
      options: [
        { value: "Independent", label: "Independent" },
        { value: "Minimal Assistance", label: "Minimal Assistance" },
        { value: "Moderate Assistance", label: "Moderate Assistance" },
        { value: "Maximum Assistance", label: "Maximum Assistance" },
        { value: "Dependent", label: "Dependent" },
      ],
    },
    {
      id: "feeding",
      name: "feeding",
      label: "Feeding",
      type: FieldType.SELECT,
      required: true,
      section: "adl-assessment",
      order: 4,
      width: "half",
      options: [
        { value: "Independent", label: "Independent" },
        { value: "Minimal Assistance", label: "Minimal Assistance" },
        { value: "Moderate Assistance", label: "Moderate Assistance" },
        { value: "Maximum Assistance", label: "Maximum Assistance" },
        { value: "Dependent", label: "Dependent" },
      ],
    },
    {
      id: "grooming",
      name: "grooming",
      label: "Grooming",
      type: FieldType.SELECT,
      required: true,
      section: "adl-assessment",
      order: 5,
      width: "half",
      options: [
        { value: "Independent", label: "Independent" },
        { value: "Minimal Assistance", label: "Minimal Assistance" },
        { value: "Moderate Assistance", label: "Moderate Assistance" },
        { value: "Maximum Assistance", label: "Maximum Assistance" },
        { value: "Dependent", label: "Dependent" },
      ],
    },
    {
      id: "adl-notes",
      name: "adlNotes",
      label: "ADL Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about activities of daily living",
      required: false,
      section: "adl-assessment",
      order: 6,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 500,
          message: "Notes cannot exceed 500 characters",
        },
      ],
    },
    {
      id: "meal-preparation",
      name: "mealPreparation",
      label: "Meal Preparation",
      type: FieldType.SELECT,
      required: true,
      section: "iadl-assessment",
      order: 1,
      width: "half",
      options: [
        { value: "Independent", label: "Independent" },
        { value: "Minimal Assistance", label: "Minimal Assistance" },
        { value: "Moderate Assistance", label: "Moderate Assistance" },
        { value: "Maximum Assistance", label: "Maximum Assistance" },
        { value: "Dependent", label: "Dependent" },
      ],
    },
    {
      id: "housework",
      name: "housework",
      label: "Housework",
      type: FieldType.SELECT,
      required: true,
      section: "iadl-assessment",
      order: 2,
      width: "half",
      options: [
        { value: "Independent", label: "Independent" },
        { value: "Minimal Assistance", label: "Minimal Assistance" },
        { value: "Moderate Assistance", label: "Moderate Assistance" },
        { value: "Maximum Assistance", label: "Maximum Assistance" },
        { value: "Dependent", label: "Dependent" },
      ],
    },
    {
      id: "laundry",
      name: "laundry",
      label: "Laundry",
      type: FieldType.SELECT,
      required: true,
      section: "iadl-assessment",
      order: 3,
      width: "half",
      options: [
        { value: "Independent", label: "Independent" },
        { value: "Minimal Assistance", label: "Minimal Assistance" },
        { value: "Moderate Assistance", label: "Moderate Assistance" },
        { value: "Maximum Assistance", label: "Maximum Assistance" },
        { value: "Dependent", label: "Dependent" },
      ],
    },
    {
      id: "shopping",
      name: "shopping",
      label: "Shopping",
      type: FieldType.SELECT,
      required: true,
      section: "iadl-assessment",
      order: 4,
      width: "half",
      options: [
        { value: "Independent", label: "Independent" },
        { value: "Minimal Assistance", label: "Minimal Assistance" },
        { value: "Moderate Assistance", label: "Moderate Assistance" },
        { value: "Maximum Assistance", label: "Maximum Assistance" },
        { value: "Dependent", label: "Dependent" },
      ],
    },
    {
      id: "medication-management",
      name: "medicationManagement",
      label: "Medication Management",
      type: FieldType.SELECT,
      required: true,
      section: "iadl-assessment",
      order: 5,
      width: "half",
      options: [
        { value: "Independent", label: "Independent" },
        { value: "Minimal Assistance", label: "Minimal Assistance" },
        { value: "Moderate Assistance", label: "Moderate Assistance" },
        { value: "Maximum Assistance", label: "Maximum Assistance" },
        { value: "Dependent", label: "Dependent" },
      ],
    },
    {
      id: "iadl-notes",
      name: "iadlNotes",
      label: "IADL Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about instrumental activities of daily living",
      required: false,
      section: "iadl-assessment",
      order: 6,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 500,
          message: "Notes cannot exceed 500 characters",
        },
      ],
    },
    {
      id: "static-balance",
      name: "staticBalance",
      label: "Static Balance",
      type: FieldType.SELECT,
      required: true,
      section: "balance-assessment",
      order: 1,
      width: "half",
      options: [
        { value: "Good", label: "Good" },
        { value: "Fair", label: "Fair" },
        { value: "Poor", label: "Poor" },
        { value: "Unable to Assess", label: "Unable to Assess" },
      ],
    },
    {
      id: "dynamic-balance",
      name: "dynamicBalance",
      label: "Dynamic Balance",
      type: FieldType.SELECT,
      required: true,
      section: "balance-assessment",
      order: 2,
      width: "half",
      options: [
        { value: "Good", label: "Good" },
        { value: "Fair", label: "Fair" },
        { value: "Poor", label: "Poor" },
        { value: "Unable to Assess", label: "Unable to Assess" },
      ],
    },
    {
      id: "fall-risk",
      name: "fallRisk",
      label: "Fall Risk",
      type: FieldType.SELECT,
      required: true,
      section: "balance-assessment",
      order: 3,
      width: "half",
      options: [
        { value: "Low", label: "Low" },
        { value: "Moderate", label: "Moderate" },
        { value: "High", label: "High" },
      ],
    },
    {
      id: "fall-history",
      name: "fallHistory",
      label: "Fall History (Past 3 Months)",
      type: FieldType.SELECT,
      required: true,
      section: "balance-assessment",
      order: 4,
      width: "half",
      options: [
        { value: "None", label: "None" },
        { value: "1 Fall", label: "1 Fall" },
        { value: "2 Falls", label: "2 Falls" },
        { value: "3+ Falls", label: "3+ Falls" },
      ],
    },
    {
      id: "balance-notes",
      name: "balanceNotes",
      label: "Balance Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about balance assessment",
      required: false,
      section: "balance-assessment",
      order: 5,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 500,
          message: "Notes cannot exceed 500 characters",
        },
      ],
    },
    {
      id: "upper-extremity-strength",
      name: "upperExtremityStrength",
      label: "Upper Extremity Strength",
      type: FieldType.SELECT,
      required: true,
      section: "strength-assessment",
      order: 1,
      width: "half",
      options: [
        { value: "Normal", label: "Normal (5/5)" },
        { value: "Good", label: "Good (4/5)" },
        { value: "Fair", label: "Fair (3/5)" },
        { value: "Poor", label: "Poor (2/5)" },
        { value: "Trace", label: "Trace (1/5)" },
        { value: "Zero", label: "Zero (0/5)" },
      ],
    },
    {
      id: "lower-extremity-strength",
      name: "lowerExtremityStrength",
      label: "Lower Extremity Strength",
      type: FieldType.SELECT,
      required: true,
      section: "strength-assessment",
      order: 2,
      width: "half",
      options: [
        { value: "Normal", label: "Normal (5/5)" },
        { value: "Good", label: "Good (4/5)" },
        { value: "Fair", label: "Fair (3/5)" },
        { value: "Poor", label: "Poor (2/5)" },
        { value: "Trace", label: "Trace (1/5)" },
        { value: "Zero", label: "Zero (0/5)" },
      ],
    },
    {
      id: "grip-strength",
      name: "gripStrength",
      label: "Grip Strength",
      type: FieldType.SELECT,
      required: true,
      section: "strength-assessment",
      order: 3,
      width: "half",
      options: [
        { value: "Normal", label: "Normal (5/5)" },
        { value: "Good", label: "Good (4/5)" },
        { value: "Fair", label: "Fair (3/5)" },
        { value: "Poor", label: "Poor (2/5)" },
        { value: "Trace", label: "Trace (1/5)" },
        { value: "Zero", label: "Zero (0/5)" },
      ],
    },
    {
      id: "strength-asymmetry",
      name: "strengthAsymmetry",
      label: "Strength Asymmetry",
      type: FieldType.SELECT,
      required: true,
      section: "strength-assessment",
      order: 4,
      width: "half",
      options: [
        { value: "None", label: "None" },
        { value: "Mild", label: "Mild" },
        { value: "Moderate", label: "Moderate" },
        { value: "Severe", label: "Severe" },
      ],
    },
    {
      id: "strength-notes",
      name: "strengthNotes",
      label: "Strength Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about strength assessment",
      required: false,
      section: "strength-assessment",
      order: 5,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 500,
          message: "Notes cannot exceed 500 characters",
        },
      ],
    },
    {
      id: "pain-present",
      name: "painPresent",
      label: "Pain Present",
      type: FieldType.SELECT,
      required: true,
      section: "pain-assessment",
      order: 1,
      width: "half",
      options: [
        { value: "Yes", label: "Yes" },
        { value: "No", label: "No" },
      ],
    },
    {
      id: "pain-level",
      name: "painLevel",
      label: "Pain Level (0-10)",
      type: FieldType.SELECT,
      required: false,
      section: "pain-assessment",
      order: 2,
      width: "half",
      options: [
        { value: "0", label: "0 - No Pain" },
        { value: "1", label: "1" },
        { value: "2", label: "2" },
        { value: "3", label: "3" },
        { value: "4", label: "4" },
        { value: "5", label: "5" },
        { value: "6", label: "6" },
        { value: "7", label: "7" },
        { value: "8", label: "8" },
        { value: "9", label: "9" },
        { value: "10", label: "10 - Worst Pain" },
      ],
      dependencies: [
        {
          type: "visibility",
          sourceField: "painPresent",
          condition: "value === 'Yes'",
          action: "visible = true",
        },
        {
          type: "requirement",
          sourceField: "painPresent",
          condition: "value === 'Yes'",
          action: "required = true",
        },
      ],
    },
    {
      id: "pain-location",
      name: "painLocation",
      label: "Pain Location",
      type: FieldType.MULTISELECT,
      required: false,
      section: "pain-assessment",
      order: 3,
      width: "half",
      options: [
        { value: "Head", label: "Head" },
        { value: "Neck", label: "Neck" },
        { value: "Shoulder", label: "Shoulder" },
        { value: "Back", label: "Back" },
        { value: "Arm", label: "Arm" },
        { value: "Hand", label: "Hand" },
        { value: "Hip", label: "Hip" },
        { value: "Leg", label: "Leg" },
        { value: "Knee", label: "Knee" },
        { value: "Foot", label: "Foot" },
        { value: "Other", label: "Other" },
      ],
      dependencies: [
        {
          type: "visibility",
          sourceField: "painPresent",
          condition: "value === 'Yes'",
          action: "visible = true",
        },
        {
          type: "requirement",
          sourceField: "painPresent",
          condition: "value === 'Yes'",
          action: "required = true",
        },
      ],
    },
    {
      id: "pain-characteristics",
      name: "painCharacteristics",
      label: "Pain Characteristics",
      type: FieldType.MULTISELECT,
      required: false,
      section: "pain-assessment",
      order: 4,
      width: "half",
      options: [
        { value: "Sharp", label: "Sharp" },
        { value: "Dull", label: "Dull" },
        { value: "Aching", label: "Aching" },
        { value: "Throbbing", label: "Throbbing" },
        { value: "Burning", label: "Burning" },
        { value: "Shooting", label: "Shooting" },
        { value: "Tingling", label: "Tingling" },
        { value: "Numbness", label: "Numbness" },
      ],
      dependencies: [
        {
          type: "visibility",
          sourceField: "painPresent",
          condition: "value === 'Yes'",
          action: "visible = true",
        },
      ],
    },
    {
      id: "pain-notes",
      name: "painNotes",
      label: "Pain Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about pain assessment",
      required: false,
      section: "pain-assessment",
      order: 5,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 500,
          message: "Notes cannot exceed 500 characters",
        },
      ],
    },
    {
      id: "priority-functional-concerns",
      name: "priorityFunctionalConcerns",
      label: "Priority Functional Concerns",
      type: FieldType.MULTISELECT,
      required: true,
      section: "recommendations",
      order: 1,
      width: "full",
      options: [
        { value: "Mobility", label: "Mobility" },
        { value: "Transfers", label: "Transfers" },
        { value: "Balance", label: "Balance" },
        { value: "Fall Risk", label: "Fall Risk" },
        { value: "ADL Independence", label: "ADL Independence" },
        { value: "IADL Independence", label: "IADL Independence" },
        { value: "Pain Management", label: "Pain Management" },
        { value: "Strength", label: "Strength" },
        { value: "Endurance", label: "Endurance" },
        { value: "Other", label: "Other" },
      ],
    },
    {
      id: "intervention-urgency",
      name: "interventionUrgency",
      label: "Intervention Urgency",
      type: FieldType.SELECT,
      required: true,
      section: "recommendations",
      order: 2,
      width: "half",
      options: [
        { value: "Immediate", label: "Immediate" },
        { value: "High", label: "High" },
        { value: "Medium", label: "Medium" },
        { value: "Low", label: "Low" },
      ],
    },
    {
      id: "overall-functional-status",
      name: "overallFunctionalStatus",
      label: "Overall Functional Status",
      type: FieldType.SELECT,
      required: true,
      section: "recommendations",
      order: 3,
      width: "half",
      options: [
        { value: "Independent", label: "Independent" },
        { value: "Modified Independent", label: "Modified Independent" },
        { value: "Minimal Assistance", label: "Minimal Assistance" },
        { value: "Moderate Assistance", label: "Moderate Assistance" },
        { value: "Maximum Assistance", label: "Maximum Assistance" },
        { value: "Dependent", label: "Dependent" },
      ],
    },
    {
      id: "recommended-interventions",
      name: "recommendedInterventions",
      label: "Recommended Interventions",
      type: FieldType.TEXTAREA,
      placeholder: "Enter detailed recommendations for functional support",
      required: true,
      section: "recommendations",
      order: 4,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Recommended interventions are required",
        },
        {
          type: ValidationRuleType.MIN_LENGTH,
          value: 50,
          message: "Recommendations must be at least 50 characters",
        },
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 1000,
          message: "Recommendations cannot exceed 1000 characters",
        },
      ],
    },
    {
      id: "equipment-recommendations",
      name: "equipmentRecommendations",
      label: "Equipment Recommendations",
      type: FieldType.MULTISELECT,
      required: true,
      section: "recommendations",
      order: 5,
      width: "full",
      options: [
        { value: "None", label: "None" },
        { value: "Cane", label: "Cane" },
        { value: "Walker", label: "Walker" },
        { value: "Wheelchair", label: "Wheelchair" },
        { value: "Shower Chair", label: "Shower Chair" },
        { value: "Commode", label: "Commode" },
        { value: "Hospital Bed", label: "Hospital Bed" },
        { value: "Grab Bars", label: "Grab Bars" },
        { value: "Raised Toilet Seat", label: "Raised Toilet Seat" },
        { value: "Transfer Board", label: "Transfer Board" },
        { value: "Other", label: "Other" },
      ],
    },
    {
      id: "referrals-needed",
      name: "referralsNeeded",
      label: "Referrals Needed",
      type: FieldType.MULTISELECT,
      required: true,
      section: "recommendations",
      order: 6,
      width: "full",
      options: [
        { value: "None", label: "None" },
        { value: "Physical Therapy", label: "Physical Therapy" },
        { value: "Occupational Therapy", label: "Occupational Therapy" },
        { value: "Home Health", label: "Home Health" },
        { value: "Pain Management", label: "Pain Management" },
        { value: "Orthopedics", label: "Orthopedics" },
        { value: "Neurology", label: "Neurology" },
        { value: "Other", label: "Other" },
      ],
    },
    {
      id: "assessor-name",
      name: "assessorName",
      label: "Assessor Name",
      type: FieldType.TEXT,
      required: true,
      section: "assessment-details",
      order: 1,
      width: "half",
      defaultValue: "", // Will be populated with current user name
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Assessor name is required",
        },
        {
          type: ValidationRuleType.MIN_LENGTH,
          value: 3,
          message: "Assessor name must be at least 3 characters",
        },
      ],
    },
    {
      id: "assessor-position",
      name: "assessorPosition",
      label: "Assessor Position",
      type: FieldType.TEXT,
      required: true,
      section: "assessment-details",
      order: 2,
      width: "half",
      defaultValue: "", // Will be populated with current user position
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Assessor position is required",
        },
        {
          type: ValidationRuleType.MIN_LENGTH,
          value: 3,
          message: "Assessor position must be at least 3 characters",
        },
      ],
    },
    {
      id: "assessment-duration",
      name: "assessmentDuration",
      label: "Assessment Duration (minutes)",
      type: FieldType.NUMBER,
      required: true,
      section: "assessment-details",
      order: 3,
      width: "half",
      defaultValue: 60,
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 1,
          message: "Assessment duration must be at least 1 minute",
        },
      ],
    },
    {
      id: "follow-up-required",
      name: "followUpRequired",
      label: "Follow-up Required",
      type: FieldType.CHECKBOX,
      required: true,
      section: "assessment-details",
      order: 4,
      width: "half",
      defaultValue: false,
    },
    {
      id: "follow-up-date",
      name: "followUpDate",
      label: "Follow-up Date",
      type: FieldType.DATE,
      required: false,
      section: "assessment-details",
      order: 5,
      width: "half",
      dependencies: [
        {
          type: "requirement",
          sourceField: "followUpRequired",
          condition: "value === true",
          action: "required = true",
        },
        {
          type: "visibility",
          sourceField: "followUpRequired",
          condition: "value === true",
          action: "visible = true",
        },
      ],
      validation: [
        {
          type: ValidationRuleType.CUSTOM,
          value: (value: string) => {
            if (!value) return true;
            const followUpDate = new Date(value);
            const today = new Date();
            return followUpDate > today;
          },
          message: "Follow-up date must be in the future",
        },
      ],
    },
    {
      id: "additional-notes",
      name: "additionalNotes",
      label: "Additional Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter any additional notes about the assessment",
      required: false,
      section: "assessment-details",
      order: 6,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 1000,
          message: "Additional notes cannot exceed 1000 characters",
        },
      ],
    },
  ],
  dependencies: [
    {
      formId: "beneficiary-assessment-eligibility-form",
      description:
        "Functional assessment must be linked to an eligible beneficiary",
      type: "prerequisite",
      required: true,
    },
  ],
  createdAt: new Date(),
  updatedAt: new Date(),
  isActive: true,
};

// Register form with the form registry
formRegistry.registerForm(
  {
    id: functionalAssessmentForm.id,
    title: functionalAssessmentForm.title,
    description: functionalAssessmentForm.description,
    module: FormModule.ASSESSMENT,
    clientTypes: functionalAssessmentForm.clientTypes,
    permissions: functionalAssessmentForm.permissions,
    dependencies: functionalAssessmentForm.dependencies,
    version: functionalAssessmentForm.version,
    path: "/assessment/functional",
    icon: "activity",
    isActive: true,
  },
  functionalAssessmentForm,
);
