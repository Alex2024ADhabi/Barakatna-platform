import { ClientType, FieldType, FormMetadata, FormModule } from "../types";
import { formRegistry } from "../registry";

/**
 * Beneficiary Registration Form
 * Used for registering new beneficiaries in the system
 */
export const beneficiaryRegistrationForm: FormMetadata = {
  id: "beneficiary-registration-form",
  title: "Beneficiary Registration",
  description: "Register a new beneficiary in the system",
  module: FormModule.CLIENT,
  version: "1.0.0",
  permissions: {
    view: ["admin", "manager", "assessor", "case-worker"],
    create: ["admin", "manager", "assessor", "case-worker"],
    edit: ["admin", "manager", "assessor", "case-worker"],
    delete: ["admin"],
    approve: ["admin", "manager"],
    reject: ["admin", "manager"],
    submit: ["admin", "manager", "assessor", "case-worker"],
    print: ["admin", "manager", "assessor", "case-worker"],
    export: ["admin", "manager"],
  },
  clientTypes: [
    ClientType.FDF,
    ClientType.ADHA,
    ClientType.CASH,
    ClientType.OTHER,
  ],
  sections: [
    {
      id: "personal-info",
      title: "Personal Information",
      description: "Enter the personal details of the beneficiary",
      order: 1,
      collapsible: false,
    },
    {
      id: "contact-info",
      title: "Contact Information",
      description: "Enter contact details for the beneficiary",
      order: 2,
      collapsible: false,
    },
    {
      id: "health-info",
      title: "Health Information",
      description: "Enter health-related information",
      order: 3,
      collapsible: true,
    },
    {
      id: "housing-info",
      title: "Housing Information",
      description: "Enter housing-related information",
      order: 4,
      collapsible: true,
    },
    {
      id: "documents",
      title: "Documents",
      description: "Upload required documents",
      order: 5,
      collapsible: true,
    },
  ],
  fields: [
    {
      id: "client-type",
      name: "clientType",
      label: "Client Type",
      type: FieldType.SELECT,
      required: true,
      section: "personal-info",
      order: 1,
      width: "half",
      options: [
        { value: ClientType.FDF, label: "Family Development Foundation" },
        { value: ClientType.ADHA, label: "Abu Dhabi Housing Authority" },
        { value: ClientType.CASH, label: "Cash Client" },
        { value: ClientType.OTHER, label: "Other" },
      ],
      validation: [
        {
          type: "required",
          message: "Client type is required",
        },
      ],
    },
    {
      id: "beneficiary-id",
      name: "beneficiaryId",
      label: "Beneficiary ID",
      type: FieldType.TEXT,
      placeholder: "Auto-generated",
      helpText: "System-generated unique identifier",
      readOnly: true,
      section: "personal-info",
      order: 2,
      width: "half",
    },
    {
      id: "first-name",
      name: "firstName",
      label: "First Name",
      type: FieldType.TEXT,
      placeholder: "Enter first name",
      required: true,
      section: "personal-info",
      order: 3,
      width: "half",
      validation: [
        {
          type: "required",
          message: "First name is required",
        },
      ],
    },
    {
      id: "last-name",
      name: "lastName",
      label: "Last Name",
      type: FieldType.TEXT,
      placeholder: "Enter last name",
      required: true,
      section: "personal-info",
      order: 4,
      width: "half",
      validation: [
        {
          type: "required",
          message: "Last name is required",
        },
      ],
    },
    {
      id: "date-of-birth",
      name: "dateOfBirth",
      label: "Date of Birth",
      type: FieldType.DATE,
      required: true,
      section: "personal-info",
      order: 5,
      width: "half",
      validation: [
        {
          type: "required",
          message: "Date of birth is required",
        },
      ],
    },
    {
      id: "gender",
      name: "gender",
      label: "Gender",
      type: FieldType.SELECT,
      required: true,
      section: "personal-info",
      order: 6,
      width: "half",
      options: [
        { value: "male", label: "Male" },
        { value: "female", label: "Female" },
        { value: "other", label: "Other" },
        { value: "prefer-not-to-say", label: "Prefer not to say" },
      ],
      validation: [
        {
          type: "required",
          message: "Gender is required",
        },
      ],
    },
    {
      id: "nationality",
      name: "nationality",
      label: "Nationality",
      type: FieldType.SELECT,
      required: true,
      section: "personal-info",
      order: 7,
      width: "half",
      options: [
        { value: "uae", label: "United Arab Emirates" },
        { value: "other", label: "Other" },
      ],
      validation: [
        {
          type: "required",
          message: "Nationality is required",
        },
      ],
    },
    {
      id: "emirates-id",
      name: "emiratesId",
      label: "Emirates ID",
      type: FieldType.TEXT,
      placeholder: "XXX-XXXX-XXXXXXX-X",
      required: true,
      section: "personal-info",
      order: 8,
      width: "half",
      validation: [
        {
          type: "required",
          message: "Emirates ID is required",
        },
        {
          type: "pattern",
          value: "^\\d{3}-\\d{4}-\\d{7}-\\d{1}$",
          message:
            "Please enter a valid Emirates ID format (XXX-XXXX-XXXXXXX-X)",
        },
      ],
    },
    {
      id: "phone",
      name: "phone",
      label: "Phone Number",
      type: FieldType.PHONE,
      placeholder: "+971 XX XXX XXXX",
      required: true,
      section: "contact-info",
      order: 1,
      width: "half",
      validation: [
        {
          type: "required",
          message: "Phone number is required",
        },
        {
          type: "pattern",
          value: "^\\+?[0-9\\s-]{10,15}$",
          message: "Please enter a valid phone number",
        },
      ],
    },
    {
      id: "alternative-phone",
      name: "alternativePhone",
      label: "Alternative Phone",
      type: FieldType.PHONE,
      placeholder: "+971 XX XXX XXXX",
      required: false,
      section: "contact-info",
      order: 2,
      width: "half",
      validation: [
        {
          type: "pattern",
          value: "^\\+?[0-9\\s-]{10,15}$",
          message: "Please enter a valid phone number",
        },
      ],
    },
    {
      id: "email",
      name: "email",
      label: "Email Address",
      type: FieldType.EMAIL,
      placeholder: "Enter email address",
      required: false,
      section: "contact-info",
      order: 3,
      width: "half",
      validation: [
        {
          type: "email",
          message: "Please enter a valid email address",
        },
      ],
    },
    {
      id: "address",
      name: "address",
      label: "Address",
      type: FieldType.TEXTAREA,
      placeholder: "Enter full address",
      required: true,
      section: "contact-info",
      order: 4,
      width: "full",
      validation: [
        {
          type: "required",
          message: "Address is required",
        },
      ],
    },
    {
      id: "city",
      name: "city",
      label: "City",
      type: FieldType.TEXT,
      placeholder: "Enter city",
      required: true,
      section: "contact-info",
      order: 5,
      width: "half",
      validation: [
        {
          type: "required",
          message: "City is required",
        },
      ],
    },
    {
      id: "emirate",
      name: "emirate",
      label: "Emirate",
      type: FieldType.SELECT,
      required: true,
      section: "contact-info",
      order: 6,
      width: "half",
      options: [
        { value: "abu-dhabi", label: "Abu Dhabi" },
        { value: "dubai", label: "Dubai" },
        { value: "sharjah", label: "Sharjah" },
        { value: "ajman", label: "Ajman" },
        { value: "umm-al-quwain", label: "Umm Al Quwain" },
        { value: "fujairah", label: "Fujairah" },
        { value: "ras-al-khaimah", label: "Ras Al Khaimah" },
      ],
      validation: [
        {
          type: "required",
          message: "Emirate is required",
        },
      ],
    },
    {
      id: "has-disability",
      name: "hasDisability",
      label: "Has Disability",
      type: FieldType.SWITCH,
      required: true,
      section: "health-info",
      order: 1,
      width: "half",
    },
    {
      id: "disability-type",
      name: "disabilityType",
      label: "Disability Type",
      type: FieldType.SELECT,
      required: false,
      section: "health-info",
      order: 2,
      width: "half",
      conditional: { field: "hasDisability", operator: "equals", value: true },
      options: [
        { value: "mobility", label: "Mobility Impairment" },
        { value: "visual", label: "Visual Impairment" },
        { value: "hearing", label: "Hearing Impairment" },
        { value: "cognitive", label: "Cognitive Impairment" },
        { value: "multiple", label: "Multiple Disabilities" },
        { value: "other", label: "Other" },
      ],
      validation: [
        {
          type: "required",
          message: "Disability type is required when disability is selected",
          condition: "formValues.hasDisability === true",
        },
      ],
    },
    {
      id: "disability-details",
      name: "disabilityDetails",
      label: "Disability Details",
      type: FieldType.TEXTAREA,
      placeholder: "Enter details about the disability",
      required: false,
      section: "health-info",
      order: 3,
      width: "full",
      conditional: { field: "hasDisability", operator: "equals", value: true },
    },
    {
      id: "medical-conditions",
      name: "medicalConditions",
      label: "Medical Conditions",
      type: FieldType.TEXTAREA,
      placeholder: "Enter any relevant medical conditions",
      required: false,
      section: "health-info",
      order: 4,
      width: "full",
    },
    {
      id: "mobility-aid",
      name: "mobilityAid",
      label: "Mobility Aid Used",
      type: FieldType.MULTISELECT,
      required: false,
      section: "health-info",
      order: 5,
      width: "full",
      options: [
        { value: "wheelchair", label: "Wheelchair" },
        { value: "walker", label: "Walker" },
        { value: "cane", label: "Cane" },
        { value: "crutches", label: "Crutches" },
        { value: "prosthetic", label: "Prosthetic Limb" },
        { value: "none", label: "None" },
        { value: "other", label: "Other" },
      ],
    },
    {
      id: "housing-type",
      name: "housingType",
      label: "Housing Type",
      type: FieldType.SELECT,
      required: true,
      section: "housing-info",
      order: 1,
      width: "half",
      options: [
        { value: "apartment", label: "Apartment" },
        { value: "villa", label: "Villa" },
        { value: "townhouse", label: "Townhouse" },
        { value: "other", label: "Other" },
      ],
      validation: [
        {
          type: "required",
          message: "Housing type is required",
        },
      ],
    },
    {
      id: "ownership-status",
      name: "ownershipStatus",
      label: "Ownership Status",
      type: FieldType.SELECT,
      required: true,
      section: "housing-info",
      order: 2,
      width: "half",
      options: [
        { value: "owned", label: "Owned" },
        { value: "rented", label: "Rented" },
        { value: "government-provided", label: "Government Provided" },
        { value: "family-owned", label: "Family Owned" },
        { value: "other", label: "Other" },
      ],
      validation: [
        {
          type: "required",
          message: "Ownership status is required",
        },
      ],
    },
    {
      id: "number-of-rooms",
      name: "numberOfRooms",
      label: "Number of Rooms",
      type: FieldType.NUMBER,
      required: true,
      section: "housing-info",
      order: 3,
      width: "half",
      validation: [
        {
          type: "required",
          message: "Number of rooms is required",
        },
        {
          type: "minValue",
          value: 1,
          message: "Number of rooms must be at least 1",
        },
      ],
    },
    {
      id: "number-of-bathrooms",
      name: "numberOfBathrooms",
      label: "Number of Bathrooms",
      type: FieldType.NUMBER,
      required: true,
      section: "housing-info",
      order: 4,
      width: "half",
      validation: [
        {
          type: "required",
          message: "Number of bathrooms is required",
        },
        {
          type: "minValue",
          value: 1,
          message: "Number of bathrooms must be at least 1",
        },
      ],
    },
    {
      id: "housing-notes",
      name: "housingNotes",
      label: "Housing Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter any additional notes about the housing",
      required: false,
      section: "housing-info",
      order: 5,
      width: "full",
    },
    {
      id: "id-document",
      name: "idDocument",
      label: "ID Document",
      type: FieldType.FILE,
      helpText:
        "Upload Emirates ID or passport (PDF, JPG, PNG formats, max 5MB)",
      required: true,
      section: "documents",
      order: 1,
      width: "full",
      validation: [
        {
          type: "required",
          message: "ID document is required",
        },
      ],
    },
    {
      id: "medical-report",
      name: "medicalReport",
      label: "Medical Report",
      type: FieldType.FILE,
      helpText: "Upload medical report if applicable (PDF format, max 10MB)",
      required: false,
      section: "documents",
      order: 2,
      width: "full",
      conditional: { field: "hasDisability", operator: "equals", value: true },
    },
    {
      id: "consent-form",
      name: "consentForm",
      label: "Consent Form",
      type: FieldType.FILE,
      helpText: "Upload signed consent form (PDF format, max 5MB)",
      required: true,
      section: "documents",
      order: 3,
      width: "full",
      validation: [
        {
          type: "required",
          message: "Consent form is required",
        },
      ],
    },
  ],
  dependencies: [],
  createdAt: new Date(),
  updatedAt: new Date(),
  isActive: true,
};

/**
 * Family Member Form
 * Used for adding family members to a beneficiary
 */
export const familyMemberForm: FormMetadata = {
  id: "family-member-form",
  title: "Family Member Registration",
  description: "Register a family member for an existing beneficiary",
  module: FormModule.CLIENT,
  version: "1.0.0",
  permissions: {
    view: ["admin", "manager", "assessor", "case-worker"],
    create: ["admin", "manager", "assessor", "case-worker"],
    edit: ["admin", "manager", "assessor", "case-worker"],
    delete: ["admin", "manager"],
    approve: ["admin", "manager"],
    reject: ["admin", "manager"],
    submit: ["admin", "manager", "assessor", "case-worker"],
    print: ["admin", "manager", "assessor", "case-worker"],
    export: ["admin", "manager"],
  },
  clientTypes: [
    ClientType.FDF,
    ClientType.ADHA,
    ClientType.CASH,
    ClientType.OTHER,
  ],
  sections: [
    {
      id: "basic-info",
      title: "Basic Information",
      description: "Enter the basic details of the family member",
      order: 1,
      collapsible: false,
    },
    {
      id: "relationship-info",
      title: "Relationship Information",
      description: "Enter relationship details",
      order: 2,
      collapsible: false,
    },
    {
      id: "health-info",
      title: "Health Information",
      description: "Enter health-related information",
      order: 3,
      collapsible: true,
    },
  ],
  fields: [
    {
      id: "beneficiary-id",
      name: "beneficiaryId",
      label: "Beneficiary ID",
      type: FieldType.TEXT,
      readOnly: true,
      section: "basic-info",
      order: 1,
      width: "half",
    },
    {
      id: "first-name",
      name: "firstName",
      label: "First Name",
      type: FieldType.TEXT,
      placeholder: "Enter first name",
      required: true,
      section: "basic-info",
      order: 2,
      width: "half",
      validation: [
        {
          type: "required",
          message: "First name is required",
        },
      ],
    },
    {
      id: "last-name",
      name: "lastName",
      label: "Last Name",
      type: FieldType.TEXT,
      placeholder: "Enter last name",
      required: true,
      section: "basic-info",
      order: 3,
      width: "half",
      validation: [
        {
          type: "required",
          message: "Last name is required",
        },
      ],
    },
    {
      id: "date-of-birth",
      name: "dateOfBirth",
      label: "Date of Birth",
      type: FieldType.DATE,
      required: true,
      section: "basic-info",
      order: 4,
      width: "half",
      validation: [
        {
          type: "required",
          message: "Date of birth is required",
        },
      ],
    },
    {
      id: "gender",
      name: "gender",
      label: "Gender",
      type: FieldType.SELECT,
      required: true,
      section: "basic-info",
      order: 5,
      width: "half",
      options: [
        { value: "male", label: "Male" },
        { value: "female", label: "Female" },
        { value: "other", label: "Other" },
        { value: "prefer-not-to-say", label: "Prefer not to say" },
      ],
      validation: [
        {
          type: "required",
          message: "Gender is required",
        },
      ],
    },
    {
      id: "emirates-id",
      name: "emiratesId",
      label: "Emirates ID",
      type: FieldType.TEXT,
      placeholder: "XXX-XXXX-XXXXXXX-X",
      required: true,
      section: "basic-info",
      order: 6,
      width: "half",
      validation: [
        {
          type: "required",
          message: "Emirates ID is required",
        },
        {
          type: "pattern",
          value: "^\\d{3}-\\d{4}-\\d{7}-\\d{1}$",
          message:
            "Please enter a valid Emirates ID format (XXX-XXXX-XXXXXXX-X)",
        },
      ],
    },
    {
      id: "relationship",
      name: "relationship",
      label: "Relationship to Beneficiary",
      type: FieldType.SELECT,
      required: true,
      section: "relationship-info",
      order: 1,
      width: "half",
      options: [
        { value: "spouse", label: "Spouse" },
        { value: "child", label: "Child" },
        { value: "parent", label: "Parent" },
        { value: "sibling", label: "Sibling" },
        { value: "grandparent", label: "Grandparent" },
        { value: "grandchild", label: "Grandchild" },
        { value: "other-relative", label: "Other Relative" },
        { value: "caregiver", label: "Caregiver" },
        { value: "other", label: "Other" },
      ],
      validation: [
        {
          type: "required",
          message: "Relationship is required",
        },
      ],
    },
    {
      id: "is-primary-caregiver",
      name: "isPrimaryCaregiver",
      label: "Is Primary Caregiver",
      type: FieldType.SWITCH,
      required: false,
      section: "relationship-info",
      order: 2,
      width: "half",
    },
    {
      id: "lives-with-beneficiary",
      name: "livesWithBeneficiary",
      label: "Lives with Beneficiary",
      type: FieldType.SWITCH,
      required: false,
      section: "relationship-info",
      order: 3,
      width: "half",
    },
    {
      id: "contact-phone",
      name: "contactPhone",
      label: "Contact Phone",
      type: FieldType.PHONE,
      placeholder: "+971 XX XXX XXXX",
      required: false,
      section: "relationship-info",
      order: 4,
      width: "half",
      validation: [
        {
          type: "pattern",
          value: "^\\+?[0-9\\s-]{10,15}$",
          message: "Please enter a valid phone number",
        },
      ],
    },
    {
      id: "has-disability",
      name: "hasDisability",
      label: "Has Disability",
      type: FieldType.SWITCH,
      required: false,
      section: "health-info",
      order: 1,
      width: "half",
    },
    {
      id: "disability-type",
      name: "disabilityType",
      label: "Disability Type",
      type: FieldType.SELECT,
      required: false,
      section: "health-info",
      order: 2,
      width: "half",
      conditional: { field: "hasDisability", operator: "equals", value: true },
      options: [
        { value: "mobility", label: "Mobility Impairment" },
        { value: "visual", label: "Visual Impairment" },
        { value: "hearing", label: "Hearing Impairment" },
        { value: "cognitive", label: "Cognitive Impairment" },
        { value: "multiple", label: "Multiple Disabilities" },
        { value: "other", label: "Other" },
      ],
      validation: [
        {
          type: "required",
          message: "Disability type is required when disability is selected",
          condition: "formValues.hasDisability === true",
        },
      ],
    },
    {
      id: "medical-conditions",
      name: "medicalConditions",
      label: "Medical Conditions",
      type: FieldType.TEXTAREA,
      placeholder: "Enter any relevant medical conditions",
      required: false,
      section: "health-info",
      order: 3,
      width: "full",
    },
  ],
  dependencies: [
    {
      formId: "beneficiary-registration-form",
      description:
        "Family member must be associated with a registered beneficiary",
      type: "prerequisite",
      required: true,
    },
  ],
  createdAt: new Date(),
  updatedAt: new Date(),
  isActive: true,
};

// Register forms with the form registry
formRegistry.registerForm(
  {
    id: beneficiaryRegistrationForm.id,
    title: beneficiaryRegistrationForm.title,
    description: beneficiaryRegistrationForm.description,
    module: beneficiaryRegistrationForm.module,
    clientTypes: beneficiaryRegistrationForm.clientTypes,
    permissions: beneficiaryRegistrationForm.permissions,
    dependencies: beneficiaryRegistrationForm.dependencies,
    version: beneficiaryRegistrationForm.version,
    path: "/beneficiaries/register",
    icon: "user",
    isActive: true,
  },
  beneficiaryRegistrationForm,
);

formRegistry.registerForm(
  {
    id: familyMemberForm.id,
    title: familyMemberForm.title,
    description: familyMemberForm.description,
    module: familyMemberForm.module,
    clientTypes: familyMemberForm.clientTypes,
    permissions: familyMemberForm.permissions,
    dependencies: familyMemberForm.dependencies,
    version: familyMemberForm.version,
    path: "/beneficiaries/family-members",
    icon: "users",
    isActive: true,
  },
  familyMemberForm,
);
