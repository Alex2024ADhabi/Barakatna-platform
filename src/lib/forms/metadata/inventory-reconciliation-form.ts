import {
  ClientType,
  FieldType,
  FormMetadata,
  FormModule,
  FormPermission,
  ValidationRuleType,
} from "../types";
import { formRegistry } from "../registry";

/**
 * Inventory Reconciliation Form (F09.3)
 * Used to track inventory discrepancies and adjustments
 */
export const inventoryReconciliationForm: FormMetadata = {
  id: "inventory-reconciliation-form",
  title: "Inventory Reconciliation",
  description: "Track inventory discrepancies and adjustments",
  module: FormModule.INVENTORY,
  version: "1.0.0",
  permissions: {
    [FormPermission.VIEW]: ["inventory-manager", "supervisor", "admin"],
    [FormPermission.CREATE]: ["inventory-manager", "admin"],
    [FormPermission.EDIT]: ["inventory-manager", "admin"],
    [FormPermission.DELETE]: ["admin"],
    [FormPermission.APPROVE]: ["supervisor", "admin"],
    [FormPermission.REJECT]: ["supervisor", "admin"],
    [FormPermission.SUBMIT]: ["inventory-manager", "admin"],
    [FormPermission.PRINT]: ["inventory-manager", "supervisor", "admin"],
    [FormPermission.EXPORT]: ["supervisor", "admin"],
  },
  clientTypes: [
    ClientType.FDF,
    ClientType.ADHA,
    ClientType.CASH,
    ClientType.OTHER,
  ],
  sections: [
    {
      id: "reconciliation-info",
      title: "Reconciliation Information",
      description: "Basic information about the inventory reconciliation",
      order: 1,
      collapsible: false,
    },
    {
      id: "inventory-items",
      title: "Inventory Items",
      description: "Items to be reconciled",
      order: 2,
      collapsible: false,
    },
    {
      id: "discrepancy-analysis",
      title: "Discrepancy Analysis",
      description: "Analysis of inventory discrepancies",
      order: 3,
      collapsible: true,
    },
    {
      id: "adjustment-details",
      title: "Adjustment Details",
      description: "Details of inventory adjustments",
      order: 4,
      collapsible: true,
    },
    {
      id: "approval",
      title: "Approval",
      description: "Approval of inventory reconciliation",
      order: 5,
      collapsible: true,
    },
  ],
  fields: [
    {
      id: "reconciliation-id",
      name: "reconciliationId",
      label: "Reconciliation ID",
      type: FieldType.TEXT,
      required: false,
      section: "reconciliation-info",
      order: 1,
      width: "half",
      readOnly: true,
      helpText: "Auto-generated unique identifier",
    },
    {
      id: "reconciliation-date",
      name: "reconciliationDate",
      label: "Reconciliation Date",
      type: FieldType.DATE,
      required: true,
      section: "reconciliation-info",
      order: 2,
      width: "half",
      defaultValue: new Date().toISOString().split("T")[0],
    },
    {
      id: "warehouse-id",
      name: "warehouseId",
      label: "Warehouse",
      type: FieldType.SELECT,
      required: true,
      section: "reconciliation-info",
      order: 3,
      width: "half",
      dataSource: {
        type: "api",
        source: "/api/warehouses/list",
        valueField: "id",
        labelField: "name",
        filters: { active: true },
      },
    },
    {
      id: "conducted-by",
      name: "conductedBy",
      label: "Conducted By",
      type: FieldType.SELECT,
      required: true,
      section: "reconciliation-info",
      order: 4,
      width: "half",
      dataSource: {
        type: "api",
        source: "/api/users/inventory-staff",
        valueField: "id",
        labelField: "fullName",
        filters: { active: true },
      },
    },
    {
      id: "reconciliation-type",
      name: "reconciliationType",
      label: "Reconciliation Type",
      type: FieldType.SELECT,
      required: true,
      section: "reconciliation-info",
      order: 5,
      width: "half",
      options: [
        { value: "scheduled", label: "Scheduled" },
        { value: "unscheduled", label: "Unscheduled" },
        { value: "annual", label: "Annual" },
        { value: "quarterly", label: "Quarterly" },
        { value: "discrepancy-follow-up", label: "Discrepancy Follow-up" },
      ],
    },
    {
      id: "inventory-items",
      name: "inventoryItems",
      label: "Inventory Items",
      type: FieldType.REPEATER,
      required: true,
      section: "inventory-items",
      order: 1,
      width: "full",
      fields: [
        {
          id: "item-id",
          name: "itemId",
          label: "Item",
          type: FieldType.SELECT,
          required: true,
          width: "quarter",
          dataSource: {
            type: "api",
            source: "/api/inventory/items",
            valueField: "id",
            labelField: "name",
            filters: { warehouseId: "{warehouseId}" },
            dependsOn: ["warehouseId"],
          },
        },
        {
          id: "system-quantity",
          name: "systemQuantity",
          label: "System Quantity",
          type: FieldType.NUMBER,
          required: true,
          width: "quarter",
          readOnly: true,
          dataSource: {
            type: "api",
            source: "/api/inventory/items/{itemId}/quantity",
            valueField: "quantity",
            labelField: "quantity",
            dependsOn: ["itemId"],
          },
        },
        {
          id: "actual-quantity",
          name: "actualQuantity",
          label: "Actual Quantity",
          type: FieldType.NUMBER,
          required: true,
          width: "quarter",
          validation: [
            {
              type: ValidationRuleType.MIN_VALUE,
              value: 0,
              message: "Quantity cannot be negative",
            },
          ],
        },
        {
          id: "discrepancy",
          name: "discrepancy",
          label: "Discrepancy",
          type: FieldType.CALCULATED,
          required: false,
          width: "quarter",
          readOnly: true,
          calculationFormula:
            "return values.actualQuantity - values.systemQuantity;",
        },
      ],
    },
    {
      id: "total-items-checked",
      name: "totalItemsChecked",
      label: "Total Items Checked",
      type: FieldType.CALCULATED,
      required: false,
      section: "inventory-items",
      order: 2,
      width: "third",
      readOnly: true,
      calculationFormula:
        "return values.inventoryItems ? values.inventoryItems.length : 0;",
    },
    {
      id: "items-with-discrepancies",
      name: "itemsWithDiscrepancies",
      label: "Items With Discrepancies",
      type: FieldType.CALCULATED,
      required: false,
      section: "inventory-items",
      order: 3,
      width: "third",
      readOnly: true,
      calculationFormula: `
        if (!values.inventoryItems) return 0;
        return values.inventoryItems.filter(item => item.actualQuantity !== item.systemQuantity).length;
      `,
    },
    {
      id: "discrepancy-percentage",
      name: "discrepancyPercentage",
      label: "Discrepancy Percentage",
      type: FieldType.CALCULATED,
      required: false,
      section: "inventory-items",
      order: 4,
      width: "third",
      readOnly: true,
      calculationFormula: `
        if (!values.inventoryItems || values.inventoryItems.length === 0) return "0%";
        const itemsWithDiscrepancies = values.inventoryItems.filter(item => item.actualQuantity !== item.systemQuantity).length;
        return ((itemsWithDiscrepancies / values.inventoryItems.length) * 100).toFixed(2) + "%";
      `,
    },
    {
      id: "discrepancy-causes",
      name: "discrepancyCauses",
      label: "Discrepancy Causes",
      type: FieldType.REPEATER,
      required: false,
      section: "discrepancy-analysis",
      order: 1,
      width: "full",
      dependencies: [
        {
          type: "visibility",
          sourceField: "itemsWithDiscrepancies",
          condition: "value > 0",
          action: "visible = true",
        },
        {
          type: "requirement",
          sourceField: "itemsWithDiscrepancies",
          condition: "value > 0",
          action: "required = true",
        },
      ],
      fields: [
        {
          id: "item-id",
          name: "itemId",
          label: "Item",
          type: FieldType.SELECT,
          required: true,
          width: "third",
          dataSource: {
            type: "function",
            source: "getItemsWithDiscrepancies",
            valueField: "id",
            labelField: "name",
            dependsOn: ["inventoryItems"],
          },
        },
        {
          id: "cause",
          name: "cause",
          label: "Cause of Discrepancy",
          type: FieldType.SELECT,
          required: true,
          width: "third",
          options: [
            { value: "counting-error", label: "Counting Error" },
            { value: "data-entry-error", label: "Data Entry Error" },
            { value: "theft", label: "Theft/Loss" },
            { value: "damage", label: "Damage/Spoilage" },
            { value: "unrecorded-usage", label: "Unrecorded Usage" },
            { value: "unrecorded-receipt", label: "Unrecorded Receipt" },
            { value: "system-error", label: "System Error" },
            { value: "unknown", label: "Unknown" },
          ],
        },
        {
          id: "explanation",
          name: "explanation",
          label: "Explanation",
          type: FieldType.TEXT,
          required: true,
          width: "third",
        },
      ],
    },
    {
      id: "discrepancy-summary",
      name: "discrepancySummary",
      label: "Discrepancy Summary",
      type: FieldType.TEXTAREA,
      required: false,
      section: "discrepancy-analysis",
      order: 2,
      width: "full",
      placeholder: "Provide a summary of the discrepancies found",
      dependencies: [
        {
          type: "visibility",
          sourceField: "itemsWithDiscrepancies",
          condition: "value > 0",
          action: "visible = true",
        },
        {
          type: "requirement",
          sourceField: "itemsWithDiscrepancies",
          condition: "value > 0",
          action: "required = true",
        },
      ],
    },
    {
      id: "adjustment-required",
      name: "adjustmentRequired",
      label: "Adjustment Required",
      type: FieldType.CHECKBOX,
      required: true,
      section: "adjustment-details",
      order: 1,
      width: "half",
      defaultValue: false,
      dependencies: [
        {
          type: "visibility",
          sourceField: "itemsWithDiscrepancies",
          condition: "value > 0",
          action: "visible = true",
        },
      ],
    },
    {
      id: "adjustment-items",
      name: "adjustmentItems",
      label: "Items to Adjust",
      type: FieldType.REPEATER,
      required: false,
      section: "adjustment-details",
      order: 2,
      width: "full",
      dependencies: [
        {
          type: "visibility",
          sourceField: "adjustmentRequired",
          condition: "value === true",
          action: "visible = true",
        },
        {
          type: "requirement",
          sourceField: "adjustmentRequired",
          condition: "value === true",
          action: "required = true",
        },
      ],
      fields: [
        {
          id: "item-id",
          name: "itemId",
          label: "Item",
          type: FieldType.SELECT,
          required: true,
          width: "quarter",
          dataSource: {
            type: "function",
            source: "getItemsWithDiscrepancies",
            valueField: "id",
            labelField: "name",
            dependsOn: ["inventoryItems"],
          },
        },
        {
          id: "adjustment-type",
          name: "adjustmentType",
          label: "Adjustment Type",
          type: FieldType.SELECT,
          required: true,
          width: "quarter",
          options: [
            { value: "increase", label: "Increase" },
            { value: "decrease", label: "Decrease" },
          ],
        },
        {
          id: "adjustment-quantity",
          name: "adjustmentQuantity",
          label: "Adjustment Quantity",
          type: FieldType.NUMBER,
          required: true,
          width: "quarter",
          validation: [
            {
              type: ValidationRuleType.MIN_VALUE,
              value: 0,
              message: "Quantity must be positive",
            },
          ],
        },
        {
          id: "adjustment-reason",
          name: "adjustmentReason",
          label: "Reason",
          type: FieldType.SELECT,
          required: true,
          width: "quarter",
          options: [
            { value: "counting-correction", label: "Counting Correction" },
            { value: "damage", label: "Damage/Spoilage" },
            { value: "theft", label: "Theft/Loss" },
            { value: "unrecorded-usage", label: "Unrecorded Usage" },
            { value: "unrecorded-receipt", label: "Unrecorded Receipt" },
            { value: "system-correction", label: "System Correction" },
            { value: "other", label: "Other" },
          ],
        },
      ],
    },
    {
      id: "adjustment-notes",
      name: "adjustmentNotes",
      label: "Adjustment Notes",
      type: FieldType.TEXTAREA,
      required: false,
      section: "adjustment-details",
      order: 3,
      width: "full",
      placeholder: "Provide additional notes about the adjustments",
      dependencies: [
        {
          type: "visibility",
          sourceField: "adjustmentRequired",
          condition: "value === true",
          action: "visible = true",
        },
        {
          type: "requirement",
          sourceField: "adjustmentRequired",
          condition: "value === true",
          action: "required = true",
        },
      ],
    },
    {
      id: "preventive-measures",
      name: "preventiveMeasures",
      label: "Preventive Measures",
      type: FieldType.TEXTAREA,
      required: false,
      section: "adjustment-details",
      order: 4,
      width: "full",
      placeholder: "Describe preventive measures to avoid future discrepancies",
      dependencies: [
        {
          type: "visibility",
          sourceField: "adjustmentRequired",
          condition: "value === true",
          action: "visible = true",
        },
      ],
    },
    {
      id: "approval-status",
      name: "approvalStatus",
      label: "Approval Status",
      type: FieldType.SELECT,
      required: true,
      section: "approval",
      order: 1,
      width: "half",
      options: [
        { value: "pending", label: "Pending" },
        { value: "approved", label: "Approved" },
        { value: "rejected", label: "Rejected" },
      ],
      defaultValue: "pending",
      readOnly: true,
    },
    {
      id: "approver-id",
      name: "approverId",
      label: "Approver",
      type: FieldType.SELECT,
      required: false,
      section: "approval",
      order: 2,
      width: "half",
      dataSource: {
        type: "api",
        source: "/api/users/inventory-approvers",
        valueField: "id",
        labelField: "fullName",
        filters: { active: true },
      },
    },
    {
      id: "approval-date",
      name: "approvalDate",
      label: "Approval Date",
      type: FieldType.DATE,
      required: false,
      section: "approval",
      order: 3,
      width: "half",
      readOnly: true,
    },
    {
      id: "approval-comments",
      name: "approvalComments",
      label: "Approval Comments",
      type: FieldType.TEXTAREA,
      required: false,
      section: "approval",
      order: 4,
      width: "full",
      placeholder: "Comments from the approver",
    },
    {
      id: "submitter-signature",
      name: "submitterSignature",
      label: "Submitter Signature",
      type: FieldType.SIGNATURE,
      required: true,
      section: "approval",
      order: 5,
      width: "half",
    },
    {
      id: "approver-signature",
      name: "approverSignature",
      label: "Approver Signature",
      type: FieldType.SIGNATURE,
      required: false,
      section: "approval",
      order: 6,
      width: "half",
      dependencies: [
        {
          type: "visibility",
          sourceField: "approvalStatus",
          condition: "value !== 'pending'",
          action: "visible = true",
        },
        {
          type: "requirement",
          sourceField: "approvalStatus",
          condition: "value !== 'pending'",
          action: "required = true",
        },
      ],
    },
  ],
  dependencies: [],
  createdAt: new Date(),
  updatedAt: new Date(),
  isActive: true,
};

// Register form with the form registry
formRegistry.registerForm(
  {
    id: inventoryReconciliationForm.id,
    title: inventoryReconciliationForm.title,
    description: inventoryReconciliationForm.description,
    module: inventoryReconciliationForm.module,
    clientTypes: inventoryReconciliationForm.clientTypes,
    permissions: inventoryReconciliationForm.permissions,
    dependencies: inventoryReconciliationForm.dependencies,
    version: inventoryReconciliationForm.version,
    path: "/inventory/reconciliation",
    icon: "clipboard-check",
    isActive: true,
  },
  inventoryReconciliationForm,
);
