import {
  ClientType,
  FieldType,
  FormMetadata,
  FormModule,
  FormPermission,
  ValidationRuleType,
} from "../types";
import { formRegistry } from "../registry";

/**
 * Purchase Order Form
 * Used for creating and managing purchase orders for project materials and services
 */
export const purchaseOrderForm: FormMetadata = {
  id: "purchase-order-form",
  title: "Purchase Order",
  description:
    "Create and manage purchase orders for project materials and services",
  module: FormModule.PROCUREMENT,
  version: "1.0.0",
  permissions: {
    [FormPermission.VIEW]: ["admin", "procurement-manager", "project-manager"],
    [FormPermission.CREATE]: ["admin", "procurement-manager"],
    [FormPermission.EDIT]: ["admin", "procurement-manager"],
    [FormPermission.DELETE]: ["admin"],
    [FormPermission.APPROVE]: ["admin", "finance-manager"],
    [FormPermission.REJECT]: ["admin", "finance-manager"],
    [FormPermission.SUBMIT]: ["admin", "procurement-manager"],
    [FormPermission.PRINT]: ["admin", "procurement-manager", "project-manager"],
    [FormPermission.EXPORT]: [
      "admin",
      "procurement-manager",
      "finance-manager",
    ],
  },
  clientTypes: [
    ClientType.FDF,
    ClientType.ADHA,
    ClientType.CASH,
    ClientType.OTHER,
  ],
  sections: [
    {
      id: "po-details",
      title: "Purchase Order Details",
      description: "Basic information about the purchase order",
      order: 1,
      collapsible: false,
    },
    {
      id: "vendor-info",
      title: "Vendor Information",
      description: "Details about the vendor/supplier",
      order: 2,
      collapsible: false,
    },
    {
      id: "items",
      title: "Order Items",
      description: "Items to be purchased",
      order: 3,
      collapsible: false,
    },
    {
      id: "payment",
      title: "Payment Details",
      description: "Payment terms and information",
      order: 4,
      collapsible: true,
    },
    {
      id: "delivery",
      title: "Delivery Information",
      description: "Delivery details and schedule",
      order: 5,
      collapsible: true,
    },
    {
      id: "approvals",
      title: "Approvals",
      description: "Approval workflow information",
      order: 6,
      collapsible: true,
    },
  ],
  fields: [
    // Purchase Order Details Section
    {
      id: "po-number",
      name: "poNumber",
      label: "PO Number",
      type: FieldType.TEXT,
      placeholder: "Auto-generated",
      required: true,
      section: "po-details",
      order: 1,
      width: "half",
      readOnly: true,
      defaultValue:
        "PO-" +
        new Date().getFullYear() +
        "-" +
        Math.floor(10000 + Math.random() * 90000),
    },
    {
      id: "po-date",
      name: "poDate",
      label: "PO Date",
      type: FieldType.DATE,
      required: true,
      section: "po-details",
      order: 2,
      width: "half",
      defaultValue: new Date().toISOString().split("T")[0],
    },
    {
      id: "project-id",
      name: "projectId",
      label: "Related Project",
      type: FieldType.SELECT,
      required: true,
      section: "po-details",
      order: 3,
      width: "half",
      dataSource: {
        type: "api",
        source: "/api/projects",
        valueField: "id",
        labelField: "projectName",
        filters: { status: "active" },
      },
    },
    {
      id: "po-type",
      name: "poType",
      label: "PO Type",
      type: FieldType.SELECT,
      required: true,
      section: "po-details",
      order: 4,
      width: "half",
      options: [
        { value: "materials", label: "Materials" },
        { value: "services", label: "Services" },
        { value: "equipment", label: "Equipment" },
        { value: "mixed", label: "Mixed" },
      ],
    },
    {
      id: "po-status",
      name: "poStatus",
      label: "Status",
      type: FieldType.SELECT,
      required: true,
      section: "po-details",
      order: 5,
      width: "half",
      options: [
        { value: "draft", label: "Draft" },
        { value: "pending-approval", label: "Pending Approval" },
        { value: "approved", label: "Approved" },
        { value: "sent", label: "Sent to Vendor" },
        { value: "partially-received", label: "Partially Received" },
        { value: "completed", label: "Completed" },
        { value: "cancelled", label: "Cancelled" },
      ],
      defaultValue: "draft",
    },
    {
      id: "priority",
      name: "priority",
      label: "Priority",
      type: FieldType.SELECT,
      required: true,
      section: "po-details",
      order: 6,
      width: "half",
      options: [
        { value: "low", label: "Low" },
        { value: "medium", label: "Medium" },
        { value: "high", label: "High" },
        { value: "urgent", label: "Urgent" },
      ],
      defaultValue: "medium",
    },

    // Vendor Information Section
    {
      id: "vendor-id",
      name: "vendorId",
      label: "Vendor",
      type: FieldType.SELECT,
      required: true,
      section: "vendor-info",
      order: 1,
      width: "full",
      dataSource: {
        type: "api",
        source: "/api/vendors",
        valueField: "id",
        labelField: "name",
        filters: { status: "active" },
      },
    },
    {
      id: "vendor-contact-name",
      name: "vendorContactName",
      label: "Contact Person",
      type: FieldType.TEXT,
      required: false,
      section: "vendor-info",
      order: 2,
      width: "half",
      dataSource: {
        type: "api",
        source: "/api/vendors/{vendorId}/contacts",
        valueField: "name",
        labelField: "name",
        dependsOn: ["vendorId"],
      },
    },
    {
      id: "vendor-contact-email",
      name: "vendorContactEmail",
      label: "Contact Email",
      type: FieldType.EMAIL,
      required: false,
      section: "vendor-info",
      order: 3,
      width: "half",
      dataSource: {
        type: "api",
        source: "/api/vendors/{vendorId}/contacts",
        valueField: "email",
        labelField: "email",
        dependsOn: ["vendorId", "vendorContactName"],
      },
    },
    {
      id: "vendor-reference",
      name: "vendorReference",
      label: "Vendor Reference",
      type: FieldType.TEXT,
      required: false,
      section: "vendor-info",
      order: 4,
      width: "half",
      placeholder: "Vendor's reference number (if any)",
    },
    {
      id: "vendor-agreement",
      name: "vendorAgreement",
      label: "Vendor Agreement",
      type: FieldType.SELECT,
      required: false,
      section: "vendor-info",
      order: 5,
      width: "half",
      dataSource: {
        type: "api",
        source: "/api/vendors/{vendorId}/agreements",
        valueField: "id",
        labelField: "name",
        dependsOn: ["vendorId"],
      },
    },

    // Order Items Section
    {
      id: "order-items",
      name: "orderItems",
      label: "Order Items",
      type: FieldType.REPEATER,
      required: true,
      section: "items",
      order: 1,
      width: "full",
      fields: [
        {
          id: "item-code",
          name: "itemCode",
          label: "Item Code",
          type: FieldType.TEXT,
          required: true,
          width: "sixth",
        },
        {
          id: "item-description",
          name: "itemDescription",
          label: "Description",
          type: FieldType.TEXT,
          required: true,
          width: "third",
        },
        {
          id: "item-quantity",
          name: "itemQuantity",
          label: "Quantity",
          type: FieldType.NUMBER,
          required: true,
          width: "sixth",
          validation: [
            {
              type: ValidationRuleType.MIN_VALUE,
              value: 1,
              message: "Quantity must be at least 1",
            },
          ],
        },
        {
          id: "item-unit",
          name: "itemUnit",
          label: "Unit",
          type: FieldType.SELECT,
          required: true,
          width: "sixth",
          options: [
            { value: "each", label: "Each" },
            { value: "kg", label: "Kilogram" },
            { value: "m", label: "Meter" },
            { value: "m2", label: "Square Meter" },
            { value: "m3", label: "Cubic Meter" },
            { value: "hour", label: "Hour" },
            { value: "day", label: "Day" },
            { value: "set", label: "Set" },
          ],
        },
        {
          id: "item-unit-price",
          name: "itemUnitPrice",
          label: "Unit Price (SAR)",
          type: FieldType.NUMBER,
          required: true,
          width: "sixth",
          validation: [
            {
              type: ValidationRuleType.MIN_VALUE,
              value: 0,
              message: "Unit price cannot be negative",
            },
          ],
        },
        {
          id: "item-total",
          name: "itemTotal",
          label: "Total (SAR)",
          type: FieldType.CALCULATED,
          required: false,
          width: "sixth",
          readOnly: true,
          calculationFormula:
            "return Number(itemQuantity) * Number(itemUnitPrice) || 0;",
        },
      ],
      calculationFormula:
        "return items.reduce((sum, item) => sum + (Number(item.itemTotal) || 0), 0);",
    },
    {
      id: "subtotal",
      name: "subtotal",
      label: "Subtotal (SAR)",
      type: FieldType.CALCULATED,
      required: false,
      section: "items",
      order: 2,
      width: "third",
      readOnly: true,
      calculationFormula:
        "return values.orderItems ? values.orderItems.reduce((sum, item) => sum + (Number(item.itemTotal) || 0), 0) : 0;",
    },
    {
      id: "tax-rate",
      name: "taxRate",
      label: "Tax Rate (%)",
      type: FieldType.NUMBER,
      required: true,
      section: "items",
      order: 3,
      width: "third",
      defaultValue: 15,
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 0,
          message: "Tax rate cannot be negative",
        },
        {
          type: ValidationRuleType.MAX_VALUE,
          value: 100,
          message: "Tax rate cannot exceed 100%",
        },
      ],
    },
    {
      id: "tax-amount",
      name: "taxAmount",
      label: "Tax Amount (SAR)",
      type: FieldType.CALCULATED,
      required: false,
      section: "items",
      order: 4,
      width: "third",
      readOnly: true,
      calculationFormula:
        "return (Number(values.subtotal) * Number(values.taxRate) / 100) || 0;",
    },
    {
      id: "total-amount",
      name: "totalAmount",
      label: "Total Amount (SAR)",
      type: FieldType.CALCULATED,
      required: false,
      section: "items",
      order: 5,
      width: "third",
      readOnly: true,
      calculationFormula:
        "return Number(values.subtotal) + Number(values.taxAmount) || 0;",
    },
    {
      id: "notes",
      name: "notes",
      label: "Notes",
      type: FieldType.TEXTAREA,
      required: false,
      section: "items",
      order: 6,
      width: "full",
      placeholder: "Additional notes about the order",
    },

    // Payment Details Section
    {
      id: "payment-terms",
      name: "paymentTerms",
      label: "Payment Terms",
      type: FieldType.SELECT,
      required: true,
      section: "payment",
      order: 1,
      width: "half",
      options: [
        { value: "immediate", label: "Immediate" },
        { value: "net15", label: "Net 15 Days" },
        { value: "net30", label: "Net 30 Days" },
        { value: "net45", label: "Net 45 Days" },
        { value: "net60", label: "Net 60 Days" },
        { value: "custom", label: "Custom" },
      ],
      defaultValue: "net30",
    },
    {
      id: "payment-method",
      name: "paymentMethod",
      label: "Payment Method",
      type: FieldType.SELECT,
      required: true,
      section: "payment",
      order: 2,
      width: "half",
      options: [
        { value: "bank-transfer", label: "Bank Transfer" },
        { value: "check", label: "Check" },
        { value: "credit-card", label: "Credit Card" },
        { value: "cash", label: "Cash" },
      ],
      defaultValue: "bank-transfer",
    },
    {
      id: "custom-payment-terms",
      name: "customPaymentTerms",
      label: "Custom Payment Terms",
      type: FieldType.TEXTAREA,
      required: false,
      section: "payment",
      order: 3,
      width: "full",
      dependencies: [
        {
          type: "visibility",
          sourceField: "paymentTerms",
          condition: "value === 'custom'",
          action: "visible = true",
        },
      ],
    },

    // Delivery Information Section
    {
      id: "delivery-address",
      name: "deliveryAddress",
      label: "Delivery Address",
      type: FieldType.TEXTAREA,
      required: true,
      section: "delivery",
      order: 1,
      width: "full",
    },
    {
      id: "delivery-date",
      name: "deliveryDate",
      label: "Expected Delivery Date",
      type: FieldType.DATE,
      required: true,
      section: "delivery",
      order: 2,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.CUSTOM,
          value: "value > poDate",
          message: "Delivery date must be after PO date",
        },
      ],
      dependencies: [
        {
          type: "validation",
          sourceField: "poDate",
          condition: "!!value",
          action:
            "validation.push({ type: 'custom', value: 'value > poDate', message: 'Delivery date must be after PO date' })",
        },
      ],
    },
    {
      id: "shipping-method",
      name: "shippingMethod",
      label: "Shipping Method",
      type: FieldType.SELECT,
      required: true,
      section: "delivery",
      order: 3,
      width: "half",
      options: [
        { value: "vendor-delivery", label: "Vendor Delivery" },
        { value: "pickup", label: "Pickup" },
        { value: "courier", label: "Courier" },
        { value: "freight", label: "Freight" },
      ],
    },
    {
      id: "delivery-instructions",
      name: "deliveryInstructions",
      label: "Delivery Instructions",
      type: FieldType.TEXTAREA,
      required: false,
      section: "delivery",
      order: 4,
      width: "full",
    },

    // Approvals Section
    {
      id: "requested-by",
      name: "requestedBy",
      label: "Requested By",
      type: FieldType.SELECT,
      required: true,
      section: "approvals",
      order: 1,
      width: "half",
      dataSource: {
        type: "api",
        source: "/api/users",
        valueField: "id",
        labelField: "fullName",
        filters: { active: true },
      },
    },
    {
      id: "approved-by",
      name: "approvedBy",
      label: "Approved By",
      type: FieldType.SELECT,
      required: false,
      section: "approvals",
      order: 2,
      width: "half",
      dataSource: {
        type: "api",
        source: "/api/users",
        valueField: "id",
        labelField: "fullName",
        filters: { role: "approver", active: true },
      },
    },
    {
      id: "approval-date",
      name: "approvalDate",
      label: "Approval Date",
      type: FieldType.DATE,
      required: false,
      section: "approvals",
      order: 3,
      width: "half",
      dependencies: [
        {
          type: "visibility",
          sourceField: "approvedBy",
          condition: "!!value",
          action: "visible = true",
        },
      ],
    },
    {
      id: "approval-notes",
      name: "approvalNotes",
      label: "Approval Notes",
      type: FieldType.TEXTAREA,
      required: false,
      section: "approvals",
      order: 4,
      width: "full",
      dependencies: [
        {
          type: "visibility",
          sourceField: "approvedBy",
          condition: "!!value",
          action: "visible = true",
        },
      ],
    },
  ],
  dependencies: [
    {
      formId: "project-creation-form",
      description: "Purchase orders must be linked to an existing project",
      type: "prerequisite",
      required: true,
    },
  ],
  createdAt: new Date(),
  updatedAt: new Date(),
  isActive: true,
};

/**
 * Vendor Selection Form
 * Used for evaluating and selecting vendors for procurement
 */
export const vendorSelectionForm: FormMetadata = {
  id: "vendor-selection-form",
  title: "Vendor Selection",
  description: "Evaluate and select vendors for procurement",
  module: FormModule.PROCUREMENT,
  version: "1.0.0",
  permissions: {
    [FormPermission.VIEW]: ["admin", "procurement-manager", "project-manager"],
    [FormPermission.CREATE]: ["admin", "procurement-manager"],
    [FormPermission.EDIT]: ["admin", "procurement-manager"],
    [FormPermission.DELETE]: ["admin"],
    [FormPermission.APPROVE]: ["admin", "finance-manager"],
    [FormPermission.REJECT]: ["admin", "finance-manager"],
    [FormPermission.SUBMIT]: ["admin", "procurement-manager"],
    [FormPermission.PRINT]: ["admin", "procurement-manager", "project-manager"],
    [FormPermission.EXPORT]: [
      "admin",
      "procurement-manager",
      "finance-manager",
    ],
  },
  clientTypes: [
    ClientType.FDF,
    ClientType.ADHA,
    ClientType.CASH,
    ClientType.OTHER,
  ],
  sections: [
    {
      id: "selection-details",
      title: "Selection Details",
      description: "Basic information about the vendor selection process",
      order: 1,
      collapsible: false,
    },
    {
      id: "requirements",
      title: "Requirements",
      description: "Procurement requirements and specifications",
      order: 2,
      collapsible: false,
    },
    {
      id: "vendor-comparison",
      title: "Vendor Comparison",
      description: "Compare multiple vendors based on criteria",
      order: 3,
      collapsible: false,
    },
    {
      id: "selection-decision",
      title: "Selection Decision",
      description: "Final vendor selection decision",
      order: 4,
      collapsible: false,
    },
    {
      id: "attachments",
      title: "Attachments",
      description: "Supporting documents and attachments",
      order: 5,
      collapsible: true,
    },
  ],
  fields: [
    // Selection Details Section
    {
      id: "selection-id",
      name: "selectionId",
      label: "Selection ID",
      type: FieldType.TEXT,
      placeholder: "Auto-generated",
      required: true,
      section: "selection-details",
      order: 1,
      width: "half",
      readOnly: true,
      defaultValue:
        "VS-" +
        new Date().getFullYear() +
        "-" +
        Math.floor(10000 + Math.random() * 90000),
    },
    {
      id: "selection-date",
      name: "selectionDate",
      label: "Selection Date",
      type: FieldType.DATE,
      required: true,
      section: "selection-details",
      order: 2,
      width: "half",
      defaultValue: new Date().toISOString().split("T")[0],
    },
    {
      id: "project-id",
      name: "projectId",
      label: "Related Project",
      type: FieldType.SELECT,
      required: true,
      section: "selection-details",
      order: 3,
      width: "half",
      dataSource: {
        type: "api",
        source: "/api/projects",
        valueField: "id",
        labelField: "projectName",
        filters: { status: "active" },
      },
    },
    {
      id: "procurement-category",
      name: "procurementCategory",
      label: "Procurement Category",
      type: FieldType.SELECT,
      required: true,
      section: "selection-details",
      order: 4,
      width: "half",
      options: [
        { value: "materials", label: "Materials" },
        { value: "services", label: "Services" },
        { value: "equipment", label: "Equipment" },
        { value: "mixed", label: "Mixed" },
      ],
    },
    {
      id: "selection-title",
      name: "selectionTitle",
      label: "Selection Title",
      type: FieldType.TEXT,
      required: true,
      section: "selection-details",
      order: 5,
      width: "full",
      placeholder: "E.g., Bathroom Fixtures Vendor Selection",
    },
    {
      id: "selection-method",
      name: "selectionMethod",
      label: "Selection Method",
      type: FieldType.SELECT,
      required: true,
      section: "selection-details",
      order: 6,
      width: "half",
      options: [
        { value: "direct", label: "Direct Selection" },
        { value: "competitive", label: "Competitive Bidding" },
        { value: "preferred", label: "Preferred Vendor" },
        { value: "framework", label: "Framework Agreement" },
      ],
    },
    {
      id: "budget-limit",
      name: "budgetLimit",
      label: "Budget Limit (SAR)",
      type: FieldType.NUMBER,
      required: true,
      section: "selection-details",
      order: 7,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 0,
          message: "Budget limit cannot be negative",
        },
      ],
    },

    // Requirements Section
    {
      id: "procurement-description",
      name: "procurementDescription",
      label: "Procurement Description",
      type: FieldType.TEXTAREA,
      required: true,
      section: "requirements",
      order: 1,
      width: "full",
      placeholder: "Detailed description of what is being procured",
    },
    {
      id: "technical-requirements",
      name: "technicalRequirements",
      label: "Technical Requirements",
      type: FieldType.REPEATER,
      required: true,
      section: "requirements",
      order: 2,
      width: "full",
      fields: [
        {
          id: "requirement-description",
          name: "requirementDescription",
          label: "Requirement",
          type: FieldType.TEXT,
          required: true,
          width: "half",
        },
        {
          id: "requirement-importance",
          name: "requirementImportance",
          label: "Importance",
          type: FieldType.SELECT,
          required: true,
          width: "half",
          options: [
            { value: "critical", label: "Critical" },
            { value: "high", label: "High" },
            { value: "medium", label: "Medium" },
            { value: "low", label: "Low" },
          ],
        },
      ],
    },
    {
      id: "delivery-requirements",
      name: "deliveryRequirements",
      label: "Delivery Requirements",
      type: FieldType.TEXTAREA,
      required: false,
      section: "requirements",
      order: 3,
      width: "full",
      placeholder: "Specific delivery requirements or constraints",
    },
    {
      id: "quality-standards",
      name: "qualityStandards",
      label: "Quality Standards",
      type: FieldType.TEXTAREA,
      required: false,
      section: "requirements",
      order: 4,
      width: "full",
      placeholder: "Required quality standards or certifications",
    },

    // Vendor Comparison Section
    {
      id: "vendor-evaluations",
      name: "vendorEvaluations",
      label: "Vendor Evaluations",
      type: FieldType.REPEATER,
      required: true,
      section: "vendor-comparison",
      order: 1,
      width: "full",
      fields: [
        {
          id: "vendor-id",
          name: "vendorId",
          label: "Vendor",
          type: FieldType.SELECT,
          required: true,
          width: "full",
          dataSource: {
            type: "api",
            source: "/api/vendors",
            valueField: "id",
            labelField: "name",
            filters: { status: "active" },
          },
        },
        {
          id: "price-score",
          name: "priceScore",
          label: "Price Score (1-10)",
          type: FieldType.NUMBER,
          required: true,
          width: "fifth",
          validation: [
            {
              type: ValidationRuleType.MIN_VALUE,
              value: 1,
              message: "Score must be between 1 and 10",
            },
            {
              type: ValidationRuleType.MAX_VALUE,
              value: 10,
              message: "Score must be between 1 and 10",
            },
          ],
        },
        {
          id: "quality-score",
          name: "qualityScore",
          label: "Quality Score (1-10)",
          type: FieldType.NUMBER,
          required: true,
          width: "fifth",
          validation: [
            {
              type: ValidationRuleType.MIN_VALUE,
              value: 1,
              message: "Score must be between 1 and 10",
            },
            {
              type: ValidationRuleType.MAX_VALUE,
              value: 10,
              message: "Score must be between 1 and 10",
            },
          ],
        },
        {
          id: "delivery-score",
          name: "deliveryScore",
          label: "Delivery Score (1-10)",
          type: FieldType.NUMBER,
          required: true,
          width: "fifth",
          validation: [
            {
              type: ValidationRuleType.MIN_VALUE,
              value: 1,
              message: "Score must be between 1 and 10",
            },
            {
              type: ValidationRuleType.MAX_VALUE,
              value: 10,
              message: "Score must be between 1 and 10",
            },
          ],
        },
        {
          id: "support-score",
          name: "supportScore",
          label: "Support Score (1-10)",
          type: FieldType.NUMBER,
          required: true,
          width: "fifth",
          validation: [
            {
              type: ValidationRuleType.MIN_VALUE,
              value: 1,
              message: "Score must be between 1 and 10",
            },
            {
              type: ValidationRuleType.MAX_VALUE,
              value: 10,
              message: "Score must be between 1 and 10",
            },
          ],
        },
        {
          id: "total-score",
          name: "totalScore",
          label: "Total Score",
          type: FieldType.CALCULATED,
          required: false,
          width: "fifth",
          readOnly: true,
          calculationFormula:
            "return (Number(priceScore) + Number(qualityScore) + Number(deliveryScore) + Number(supportScore)) / 4 || 0;",
        },
        {
          id: "quoted-price",
          name: "quotedPrice",
          label: "Quoted Price (SAR)",
          type: FieldType.NUMBER,
          required: true,
          width: "half",
          validation: [
            {
              type: ValidationRuleType.MIN_VALUE,
              value: 0,
              message: "Price cannot be negative",
            },
          ],
        },
        {
          id: "delivery-time",
          name: "deliveryTime",
          label: "Delivery Time (Days)",
          type: FieldType.NUMBER,
          required: true,
          width: "half",
          validation: [
            {
              type: ValidationRuleType.MIN_VALUE,
              value: 1,
              message: "Delivery time must be at least 1 day",
            },
          ],
        },
        {
          id: "vendor-notes",
          name: "vendorNotes",
          label: "Notes",
          type: FieldType.TEXTAREA,
          required: false,
          width: "full",
        },
      ],
    },
    {
      id: "comparison-notes",
      name: "comparisonNotes",
      label: "Comparison Notes",
      type: FieldType.TEXTAREA,
      required: false,
      section: "vendor-comparison",
      order: 2,
      width: "full",
      placeholder: "Additional notes on vendor comparison",
    },

    // Selection Decision Section
    {
      id: "selected-vendor-id",
      name: "selectedVendorId",
      label: "Selected Vendor",
      type: FieldType.SELECT,
      required: true,
      section: "selection-decision",
      order: 1,
      width: "full",
      dataSource: {
        type: "api",
        source: "/api/vendors",
        valueField: "id",
        labelField: "name",
        filters: { status: "active" },
      },
    },
    {
      id: "selection-justification",
      name: "selectionJustification",
      label: "Selection Justification",
      type: FieldType.TEXTAREA,
      required: true,
      section: "selection-decision",
      order: 2,
      width: "full",
      placeholder: "Explain why this vendor was selected",
    },
    {
      id: "negotiated-terms",
      name: "negotiatedTerms",
      label: "Negotiated Terms",
      type: FieldType.TEXTAREA,
      required: false,
      section: "selection-decision",
      order: 3,
      width: "full",
      placeholder: "Any special terms negotiated with the selected vendor",
    },
    {
      id: "approved-by",
      name: "approvedBy",
      label: "Approved By",
      type: FieldType.SELECT,
      required: false,
      section: "selection-decision",
      order: 4,
      width: "half",
      dataSource: {
        type: "api",
        source: "/api/users",
        valueField: "id",
        labelField: "fullName",
        filters: { role: "approver", active: true },
      },
    },
    {
      id: "approval-date",
      name: "approvalDate",
      label: "Approval Date",
      type: FieldType.DATE,
      required: false,
      section: "selection-decision",
      order: 5,
      width: "half",
      dependencies: [
        {
          type: "visibility",
          sourceField: "approvedBy",
          condition: "!!value",
          action: "visible = true",
        },
      ],
    },

    // Attachments Section
    {
      id: "vendor-quotations",
      name: "vendorQuotations",
      label: "Vendor Quotations",
      type: FieldType.FILE,
      required: false,
      section: "attachments",
      order: 1,
      width: "full",
      multiple: true,
      helpText: "Upload quotations received from vendors",
    },
    {
      id: "technical-specifications",
      name: "technicalSpecifications",
      label: "Technical Specifications",
      type: FieldType.FILE,
      required: false,
      section: "attachments",
      order: 2,
      width: "full",
      helpText: "Upload detailed technical specifications",
    },
    {
      id: "vendor-profiles",
      name: "vendorProfiles",
      label: "Vendor Profiles",
      type: FieldType.FILE,
      required: false,
      section: "attachments",
      order: 3,
      width: "full",
      multiple: true,
      helpText: "Upload vendor profiles or company information",
    },
  ],
  dependencies: [
    {
      formId: "project-creation-form",
      description: "Vendor selection must be linked to an existing project",
      type: "prerequisite",
      required: true,
    },
  ],
  createdAt: new Date(),
  updatedAt: new Date(),
  isActive: true,
};

// Register forms with the form registry
formRegistry.registerForm(
  {
    id: purchaseOrderForm.id,
    title: purchaseOrderForm.title,
    description: purchaseOrderForm.description,
    module: purchaseOrderForm.module,
    clientTypes: purchaseOrderForm.clientTypes,
    permissions: purchaseOrderForm.permissions,
    dependencies: purchaseOrderForm.dependencies,
    version: purchaseOrderForm.version,
    path: "/procurement/purchase-orders",
    icon: "shopping-cart",
    isActive: true,
  },
  purchaseOrderForm,
);

formRegistry.registerForm(
  {
    id: vendorSelectionForm.id,
    title: vendorSelectionForm.title,
    description: vendorSelectionForm.description,
    module: vendorSelectionForm.module,
    clientTypes: vendorSelectionForm.clientTypes,
    permissions: vendorSelectionForm.permissions,
    dependencies: vendorSelectionForm.dependencies,
    version: vendorSelectionForm.version,
    path: "/procurement/vendor-selection",
    icon: "users",
    isActive: true,
  },
  vendorSelectionForm,
);
