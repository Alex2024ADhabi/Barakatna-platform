import {
  ClientType,
  FieldType,
  FormMetadata,
  FormModule,
  FormPermission,
  ValidationRuleType,
} from "../types";
import { formRegistry } from "../registry";

/**
 * Cohort Completion Report Form (F13.3)
 * Used to document and evaluate the outcomes of a completed cohort program
 */
export const cohortCompletionReport: FormMetadata = {
  id: "cohort-completion-report-form",
  title: "Cohort Completion Report",
  description:
    "Document and evaluate the outcomes of a completed cohort program",
  module: FormModule.COHORT,
  version: "1.0.0",
  permissions: {
    [FormPermission.VIEW]: [
      "admin",
      "manager",
      "program-manager",
      "cohort-coordinator",
    ],
    [FormPermission.CREATE]: ["admin", "manager", "program-manager"],
    [FormPermission.EDIT]: ["admin", "manager", "program-manager"],
    [FormPermission.DELETE]: ["admin"],
    [FormPermission.APPROVE]: ["admin", "manager"],
    [FormPermission.REJECT]: ["admin", "manager"],
    [FormPermission.SUBMIT]: ["admin", "manager", "program-manager"],
    [FormPermission.PRINT]: [
      "admin",
      "manager",
      "program-manager",
      "cohort-coordinator",
    ],
    [FormPermission.EXPORT]: ["admin", "manager"],
  },
  clientTypes: [
    ClientType.FDF,
    ClientType.ADHA,
    ClientType.CASH,
    ClientType.OTHER,
  ],
  sections: [
    {
      id: "cohort-information",
      title: "Cohort Information",
      description: "Basic information about the cohort",
      order: 1,
      collapsible: false,
    },
    {
      id: "program-details",
      title: "Program Details",
      description: "Information about the program and its objectives",
      order: 2,
      collapsible: false,
    },
    {
      id: "participation-metrics",
      title: "Participation Metrics",
      description: "Metrics related to participant engagement and completion",
      order: 3,
      collapsible: false,
    },
    {
      id: "outcomes-assessment",
      title: "Outcomes Assessment",
      description: "Evaluation of program outcomes and achievements",
      order: 4,
      collapsible: false,
    },
    {
      id: "financial-summary",
      title: "Financial Summary",
      description: "Summary of financial aspects of the cohort program",
      order: 5,
      collapsible: true,
    },
    {
      id: "lessons-learned",
      title: "Lessons Learned",
      description: "Insights and recommendations for future cohorts",
      order: 6,
      collapsible: false,
    },
    {
      id: "documentation",
      title: "Documentation",
      description: "Supporting documents and approvals",
      order: 7,
      collapsible: true,
    },
  ],
  fields: [
    {
      id: "cohort-id",
      name: "cohortId",
      label: "Cohort ID",
      type: FieldType.TEXT,
      readOnly: true,
      required: true,
      section: "cohort-information",
      order: 1,
      width: "half",
      helpText: "Unique identifier for the cohort",
    },
    {
      id: "cohort-name",
      name: "cohortName",
      label: "Cohort Name",
      type: FieldType.TEXT,
      required: true,
      section: "cohort-information",
      order: 2,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Cohort name is required",
        },
      ],
    },
    {
      id: "start-date",
      name: "startDate",
      label: "Start Date",
      type: FieldType.DATE,
      required: true,
      section: "cohort-information",
      order: 3,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Start date is required",
        },
      ],
    },
    {
      id: "end-date",
      name: "endDate",
      label: "End Date",
      type: FieldType.DATE,
      required: true,
      section: "cohort-information",
      order: 4,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "End date is required",
        },
        {
          type: ValidationRuleType.CUSTOM,
          value: (value: string, formData: any) => {
            if (!value || !formData.startDate) return true;
            const endDate = new Date(value);
            const startDate = new Date(formData.startDate);
            return endDate >= startDate;
          },
          message: "End date must be after or equal to start date",
        },
      ],
    },
    {
      id: "cohort-coordinator",
      name: "cohortCoordinator",
      label: "Cohort Coordinator",
      type: FieldType.TEXT,
      required: true,
      section: "cohort-information",
      order: 5,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Cohort coordinator is required",
        },
      ],
    },
    {
      id: "client-type",
      name: "clientType",
      label: "Client Type",
      type: FieldType.SELECT,
      required: true,
      section: "cohort-information",
      order: 6,
      width: "half",
      options: [
        { value: "FDF", label: "FDF" },
        { value: "ADHA", label: "ADHA" },
        { value: "CASH", label: "CASH" },
        { value: "OTHER", label: "OTHER" },
      ],
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Client type is required",
        },
      ],
    },
    {
      id: "program-name",
      name: "programName",
      label: "Program Name",
      type: FieldType.TEXT,
      required: true,
      section: "program-details",
      order: 1,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Program name is required",
        },
      ],
    },
    {
      id: "program-type",
      name: "programType",
      label: "Program Type",
      type: FieldType.SELECT,
      required: true,
      section: "program-details",
      order: 2,
      width: "half",
      options: [
        { value: "home-modification", label: "Home Modification" },
        { value: "accessibility", label: "Accessibility Improvement" },
        { value: "safety", label: "Safety Enhancement" },
        { value: "training", label: "Training & Education" },
        { value: "community", label: "Community Support" },
        { value: "mixed", label: "Mixed Program" },
        { value: "other", label: "Other" },
      ],
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Program type is required",
        },
      ],
    },
    {
      id: "program-objectives",
      name: "programObjectives",
      label: "Program Objectives",
      type: FieldType.TEXTAREA,
      required: true,
      section: "program-details",
      order: 3,
      width: "full",
      placeholder: "List the key objectives of this cohort program",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Program objectives are required",
        },
      ],
    },
    {
      id: "target-beneficiaries",
      name: "targetBeneficiaries",
      label: "Target Beneficiaries",
      type: FieldType.TEXTAREA,
      required: true,
      section: "program-details",
      order: 4,
      width: "full",
      placeholder: "Describe the target beneficiary profile for this cohort",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Target beneficiaries description is required",
        },
      ],
    },
    {
      id: "initial-participants",
      name: "initialParticipants",
      label: "Initial Number of Participants",
      type: FieldType.NUMBER,
      required: true,
      section: "participation-metrics",
      order: 1,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Initial number of participants is required",
        },
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 1,
          message: "Initial participants must be at least 1",
        },
      ],
    },
    {
      id: "completed-participants",
      name: "completedParticipants",
      label: "Participants Completing Program",
      type: FieldType.NUMBER,
      required: true,
      section: "participation-metrics",
      order: 2,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Number of completing participants is required",
        },
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 0,
          message: "Completed participants must be 0 or greater",
        },
        {
          type: ValidationRuleType.CUSTOM,
          value: (value: number, formData: any) => {
            if (
              value === undefined ||
              formData.initialParticipants === undefined
            )
              return true;
            return value <= formData.initialParticipants;
          },
          message: "Completed participants cannot exceed initial participants",
        },
      ],
    },
    {
      id: "completion-rate",
      name: "completionRate",
      label: "Completion Rate (%)",
      type: FieldType.CALCULATED,
      readOnly: true,
      required: false,
      section: "participation-metrics",
      order: 3,
      width: "half",
      calculationFormula: "(completedParticipants / initialParticipants) * 100",
      helpText: "Automatically calculated from participant numbers",
    },
    {
      id: "dropout-reasons",
      name: "dropoutReasons",
      label: "Reasons for Dropouts",
      type: FieldType.TEXTAREA,
      required: false,
      section: "participation-metrics",
      order: 4,
      width: "full",
      placeholder: "Summarize the main reasons for participant dropouts",
      conditional: {
        field: "completedParticipants",
        operator: "<",
        value: "initialParticipants",
      },
    },
    {
      id: "engagement-level",
      name: "engagementLevel",
      label: "Overall Engagement Level",
      type: FieldType.SELECT,
      required: true,
      section: "participation-metrics",
      order: 5,
      width: "half",
      options: [
        { value: "excellent", label: "Excellent" },
        { value: "good", label: "Good" },
        { value: "satisfactory", label: "Satisfactory" },
        { value: "poor", label: "Poor" },
        { value: "very-poor", label: "Very Poor" },
      ],
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Engagement level assessment is required",
        },
      ],
    },
    {
      id: "attendance-rate",
      name: "attendanceRate",
      label: "Average Attendance Rate (%)",
      type: FieldType.NUMBER,
      required: true,
      section: "participation-metrics",
      order: 6,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Average attendance rate is required",
        },
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 0,
          message: "Attendance rate must be 0 or greater",
        },
        {
          type: ValidationRuleType.MAX_VALUE,
          value: 100,
          message: "Attendance rate cannot exceed 100%",
        },
      ],
    },
    {
      id: "objectives-achieved",
      name: "objectivesAchieved",
      label: "Objectives Achievement Level",
      type: FieldType.SELECT,
      required: true,
      section: "outcomes-assessment",
      order: 1,
      width: "half",
      options: [
        { value: "exceeded", label: "Exceeded Expectations" },
        { value: "fully", label: "Fully Achieved" },
        { value: "mostly", label: "Mostly Achieved" },
        { value: "partially", label: "Partially Achieved" },
        { value: "minimally", label: "Minimally Achieved" },
        { value: "not", label: "Not Achieved" },
      ],
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Objectives achievement level is required",
        },
      ],
    },
    {
      id: "key-achievements",
      name: "keyAchievements",
      label: "Key Achievements",
      type: FieldType.TEXTAREA,
      required: true,
      section: "outcomes-assessment",
      order: 2,
      width: "full",
      placeholder: "List the key achievements and successes of this cohort",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Key achievements are required",
        },
      ],
    },
    {
      id: "challenges-faced",
      name: "challengesFaced",
      label: "Challenges Faced",
      type: FieldType.TEXTAREA,
      required: true,
      section: "outcomes-assessment",
      order: 3,
      width: "full",
      placeholder:
        "Describe the main challenges encountered during the program",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Challenges faced are required",
        },
      ],
    },
    {
      id: "beneficiary-feedback",
      name: "beneficiaryFeedback",
      label: "Beneficiary Feedback Summary",
      type: FieldType.TEXTAREA,
      required: true,
      section: "outcomes-assessment",
      order: 4,
      width: "full",
      placeholder: "Summarize feedback received from beneficiaries",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Beneficiary feedback summary is required",
        },
      ],
    },
    {
      id: "satisfaction-rating",
      name: "satisfactionRating",
      label: "Average Satisfaction Rating",
      type: FieldType.SELECT,
      required: true,
      section: "outcomes-assessment",
      order: 5,
      width: "half",
      options: [
        { value: "5", label: "Excellent (5/5)" },
        { value: "4", label: "Good (4/5)" },
        { value: "3", label: "Satisfactory (3/5)" },
        { value: "2", label: "Poor (2/5)" },
        { value: "1", label: "Very Poor (1/5)" },
        { value: "na", label: "Not Available" },
      ],
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Average satisfaction rating is required",
        },
      ],
    },
    {
      id: "impact-assessment",
      name: "impactAssessment",
      label: "Impact Assessment",
      type: FieldType.TEXTAREA,
      required: true,
      section: "outcomes-assessment",
      order: 6,
      width: "full",
      placeholder:
        "Assess the overall impact of the program on beneficiaries and communities",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Impact assessment is required",
        },
      ],
    },
    {
      id: "total-budget",
      name: "totalBudget",
      label: "Total Budget Allocated",
      type: FieldType.NUMBER,
      required: true,
      section: "financial-summary",
      order: 1,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Total budget is required",
        },
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 0,
          message: "Total budget must be 0 or greater",
        },
      ],
    },
    {
      id: "total-expenditure",
      name: "totalExpenditure",
      label: "Total Expenditure",
      type: FieldType.NUMBER,
      required: true,
      section: "financial-summary",
      order: 2,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Total expenditure is required",
        },
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 0,
          message: "Total expenditure must be 0 or greater",
        },
      ],
    },
    {
      id: "budget-variance",
      name: "budgetVariance",
      label: "Budget Variance",
      type: FieldType.CALCULATED,
      readOnly: true,
      required: false,
      section: "financial-summary",
      order: 3,
      width: "half",
      calculationFormula: "totalBudget - totalExpenditure",
      helpText: "Difference between allocated budget and actual expenditure",
    },
    {
      id: "variance-percentage",
      name: "variancePercentage",
      label: "Variance Percentage (%)",
      type: FieldType.CALCULATED,
      readOnly: true,
      required: false,
      section: "financial-summary",
      order: 4,
      width: "half",
      calculationFormula:
        "((totalBudget - totalExpenditure) / totalBudget) * 100",
      helpText: "Budget variance as a percentage of total budget",
    },
    {
      id: "cost-per-beneficiary",
      name: "costPerBeneficiary",
      label: "Cost Per Beneficiary",
      type: FieldType.CALCULATED,
      readOnly: true,
      required: false,
      section: "financial-summary",
      order: 5,
      width: "half",
      calculationFormula: "totalExpenditure / completedParticipants",
      helpText: "Average cost per beneficiary who completed the program",
    },
    {
      id: "financial-notes",
      name: "financialNotes",
      label: "Financial Notes",
      type: FieldType.TEXTAREA,
      required: false,
      section: "financial-summary",
      order: 6,
      width: "full",
      placeholder:
        "Additional notes regarding budget, expenditure, or financial management",
    },
    {
      id: "key-learnings",
      name: "keyLearnings",
      label: "Key Learnings",
      type: FieldType.TEXTAREA,
      required: true,
      section: "lessons-learned",
      order: 1,
      width: "full",
      placeholder:
        "Describe the most important lessons learned from this cohort",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Key learnings are required",
        },
      ],
    },
    {
      id: "best-practices",
      name: "bestPractices",
      label: "Best Practices Identified",
      type: FieldType.TEXTAREA,
      required: true,
      section: "lessons-learned",
      order: 2,
      width: "full",
      placeholder: "List best practices identified during this cohort",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Best practices are required",
        },
      ],
    },
    {
      id: "improvement-areas",
      name: "improvementAreas",
      label: "Areas for Improvement",
      type: FieldType.TEXTAREA,
      required: true,
      section: "lessons-learned",
      order: 3,
      width: "full",
      placeholder:
        "Identify areas where improvements could be made in future cohorts",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Areas for improvement are required",
        },
      ],
    },
    {
      id: "recommendations",
      name: "recommendations",
      label: "Recommendations for Future Cohorts",
      type: FieldType.TEXTAREA,
      required: true,
      section: "lessons-learned",
      order: 4,
      width: "full",
      placeholder:
        "Provide specific recommendations for future cohort programs",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Recommendations are required",
        },
      ],
    },
    {
      id: "follow-up-actions",
      name: "followUpActions",
      label: "Follow-up Actions",
      type: FieldType.TEXTAREA,
      required: false,
      section: "lessons-learned",
      order: 5,
      width: "full",
      placeholder:
        "List any follow-up actions required after this cohort's completion",
    },
    {
      id: "supporting-documents",
      name: "supportingDocuments",
      label: "Supporting Documents",
      type: FieldType.FILE,
      required: false,
      section: "documentation",
      order: 1,
      width: "full",
      helpText:
        "Upload any supporting documents (reports, photos, testimonials, etc.)",
      multiple: true,
    },
    {
      id: "prepared-by",
      name: "preparedBy",
      label: "Prepared By",
      type: FieldType.TEXT,
      required: true,
      section: "documentation",
      order: 2,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Preparer name is required",
        },
      ],
    },
    {
      id: "preparation-date",
      name: "preparationDate",
      label: "Preparation Date",
      type: FieldType.DATE,
      required: true,
      section: "documentation",
      order: 3,
      width: "half",
      defaultValue: new Date().toISOString().split("T")[0],
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Preparation date is required",
        },
      ],
    },
    {
      id: "approved-by",
      name: "approvedBy",
      label: "Approved By",
      type: FieldType.TEXT,
      required: false,
      section: "documentation",
      order: 4,
      width: "half",
    },
    {
      id: "approval-date",
      name: "approvalDate",
      label: "Approval Date",
      type: FieldType.DATE,
      required: false,
      section: "documentation",
      order: 5,
      width: "half",
    },
    {
      id: "preparer-signature",
      name: "preparerSignature",
      label: "Preparer Signature",
      type: FieldType.SIGNATURE,
      required: true,
      section: "documentation",
      order: 6,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Preparer signature is required",
        },
      ],
    },
    {
      id: "approver-signature",
      name: "approverSignature",
      label: "Approver Signature",
      type: FieldType.SIGNATURE,
      required: false,
      section: "documentation",
      order: 7,
      width: "half",
    },
    {
      id: "report-status",
      name: "reportStatus",
      label: "Report Status",
      type: FieldType.SELECT,
      required: true,
      section: "documentation",
      order: 8,
      width: "half",
      options: [
        { value: "draft", label: "Draft" },
        { value: "submitted", label: "Submitted" },
        { value: "under-review", label: "Under Review" },
        { value: "approved", label: "Approved" },
        { value: "rejected", label: "Rejected" },
        { value: "finalized", label: "Finalized" },
      ],
      defaultValue: "draft",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Report status is required",
        },
      ],
    },
  ],
  dependencies: [],
  createdAt: new Date(),
  updatedAt: new Date(),
  isActive: true,
};

// Register form with the form registry
export function registercohortCompletionReport() {
  formRegistry.registerForm(
    {
      id: cohortCompletionReport.id,
      title: cohortCompletionReport.title,
      description: cohortCompletionReport.description,
      module: FormModule.COHORT,
      clientTypes: cohortCompletionReport.clientTypes,
      permissions: cohortCompletionReport.permissions,
      dependencies: cohortCompletionReport.dependencies,
      version: cohortCompletionReport.version,
      path: "/cohort/completion-report",
      icon: "clipboard-check",
      isActive: true,
    },
    cohortCompletionReport,
  );

}
