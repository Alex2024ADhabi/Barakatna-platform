import {
  ClientType,
  FieldType,
  FormDependency,
  FormField,
  FormMetadata,
  FormModule,
  FormPermission,
  FormSection,
  ValidationRuleType,
} from "../types";
import { formRegistry } from "../registry";

/**
 * Initial Assessment Form Metadata
 *
 * This form is used for the initial assessment of a beneficiary's home
 * to determine eligibility and requirements for home modifications.
 */
export const initialAssessmentFormMetadata: FormMetadata = {
  id: "initial-assessment-form",
  title: "Initial Home Assessment",
  description:
    "Initial assessment of beneficiary's home to determine eligibility and requirements",
  module: FormModule.ASSESSMENT,
  version: "1.0.0",
  permissions: {
    [FormPermission.VIEW]: ["assessor", "supervisor", "admin"],
    [FormPermission.CREATE]: ["assessor", "admin"],
    [FormPermission.EDIT]: ["assessor", "admin"],
    [FormPermission.DELETE]: ["admin"],
    [FormPermission.APPROVE]: ["supervisor", "admin"],
    [FormPermission.REJECT]: ["supervisor", "admin"],
    [FormPermission.SUBMIT]: ["assessor", "admin"],
    [FormPermission.PRINT]: ["assessor", "supervisor", "admin"],
    [FormPermission.EXPORT]: ["supervisor", "admin"],
  },
  clientTypes: [ClientType.FDF, ClientType.ADHA, ClientType.CASH],
  sections: [
    {
      id: "beneficiary-info",
      title: "Beneficiary Information",
      description: "Personal details of the beneficiary",
      order: 1,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "home-overview",
      title: "Home Overview",
      description: "General information about the beneficiary's home",
      order: 2,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "accessibility-needs",
      title: "Accessibility Needs",
      description: "Assessment of beneficiary's accessibility requirements",
      order: 3,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "room-inventory",
      title: "Room Inventory",
      description: "List of rooms to be assessed in detail",
      order: 4,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "fdf-specific",
      title: "FDF Requirements",
      description: "FDF-specific assessment criteria",
      order: 5,
      collapsible: true,
      collapsed: false,
      clientTypes: [ClientType.FDF],
      conditional: {
        field: "clientType",
        operator: "equals",
        value: ClientType.FDF,
      },
    },
    {
      id: "adha-specific",
      title: "ADHA Requirements",
      description: "ADHA-specific assessment criteria",
      order: 6,
      collapsible: true,
      collapsed: false,
      clientTypes: [ClientType.ADHA],
      conditional: {
        field: "clientType",
        operator: "equals",
        value: ClientType.ADHA,
      },
    },
  ],
  fields: [
    // Beneficiary Information Section
    {
      id: "clientType",
      name: "clientType",
      label: "Client Type",
      type: FieldType.SELECT,
      section: "beneficiary-info",
      required: true,
      options: [
        { value: ClientType.FDF, label: "FDF" },
        { value: ClientType.ADHA, label: "ADHA" },
        { value: ClientType.CASH, label: "Cash Client" },
      ],
      order: 1,
      width: "half",
    },
    {
      id: "beneficiaryId",
      name: "beneficiaryId",
      label: "Beneficiary ID",
      type: FieldType.TEXT,
      section: "beneficiary-info",
      required: true,
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Beneficiary ID is required",
        },
      ],
      order: 2,
      width: "half",
      dataSource: {
        type: "api",
        source: "/api/beneficiaries/lookup",
        valueField: "id",
        labelField: "fullName",
        filters: { active: true },
      },
    },
    {
      id: "assessmentDate",
      name: "assessmentDate",
      label: "Assessment Date",
      type: FieldType.DATE,
      section: "beneficiary-info",
      required: true,
      defaultValue: new Date().toISOString().split("T")[0],
      order: 3,
      width: "half",
    },
    {
      id: "assessorId",
      name: "assessorId",
      label: "Assessor",
      type: FieldType.SELECT,
      section: "beneficiary-info",
      required: true,
      order: 4,
      width: "half",
      dataSource: {
        type: "api",
        source: "/api/users/assessors",
        valueField: "id",
        labelField: "fullName",
        filters: { active: true },
      },
    },

    // Home Overview Section
    {
      id: "propertyType",
      name: "propertyType",
      label: "Property Type",
      type: FieldType.SELECT,
      section: "home-overview",
      required: true,
      options: [
        { value: "apartment", label: "Apartment" },
        { value: "house", label: "House" },
        { value: "villa", label: "Villa" },
      ],
      order: 1,
      width: "half",
    },
    {
      id: "constructionYear",
      name: "constructionYear",
      label: "Year of Construction",
      type: FieldType.NUMBER,
      section: "home-overview",
      required: false,
      order: 2,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 1900,
          message: "Construction year must be after 1900",
        },
        {
          type: ValidationRuleType.MAX_VALUE,
          value: new Date().getFullYear(),
          message: "Construction year cannot be in the future",
        },
      ],
    },
    {
      id: "floorCount",
      name: "floorCount",
      label: "Number of Floors",
      type: FieldType.NUMBER,
      section: "home-overview",
      required: true,
      defaultValue: 1,
      order: 3,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 1,
          message: "Must have at least 1 floor",
        },
      ],
    },
    {
      id: "totalArea",
      name: "totalArea",
      label: "Total Area (sq m)",
      type: FieldType.NUMBER,
      section: "home-overview",
      required: true,
      order: 4,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 10,
          message: "Area must be at least 10 sq m",
        },
      ],
    },
    {
      id: "hasElevator",
      name: "hasElevator",
      label: "Has Elevator",
      type: FieldType.CHECKBOX,
      section: "home-overview",
      required: false,
      order: 5,
      width: "half",
      conditional: {
        field: "propertyType",
        operator: "equals",
        value: "apartment",
      },
    },

    // Accessibility Needs Section
    {
      id: "mobilityAids",
      name: "mobilityAids",
      label: "Mobility Aids Used",
      type: FieldType.MULTISELECT,
      section: "accessibility-needs",
      required: true,
      options: [
        { value: "wheelchair", label: "Wheelchair" },
        { value: "walker", label: "Walker" },
        { value: "cane", label: "Cane" },
        { value: "crutches", label: "Crutches" },
        { value: "none", label: "None" },
      ],
      order: 1,
      width: "full",
    },
    {
      id: "primaryConcerns",
      name: "primaryConcerns",
      label: "Primary Accessibility Concerns",
      type: FieldType.MULTISELECT,
      section: "accessibility-needs",
      required: true,
      options: [
        { value: "bathroom", label: "Bathroom Access" },
        { value: "stairs", label: "Stairs/Level Changes" },
        { value: "doorways", label: "Narrow Doorways" },
        { value: "kitchen", label: "Kitchen Access" },
        { value: "bedroom", label: "Bedroom Access" },
      ],
      order: 2,
      width: "full",
    },
    {
      id: "urgencyLevel",
      name: "urgencyLevel",
      label: "Urgency Level",
      type: FieldType.SELECT,
      section: "accessibility-needs",
      required: true,
      options: [
        { value: "critical", label: "Critical - Immediate action required" },
        { value: "high", label: "High - Action required within 1 month" },
        { value: "medium", label: "Medium - Action required within 3 months" },
        { value: "low", label: "Low - Action can be scheduled later" },
      ],
      order: 3,
      width: "half",
    },

    // Room Inventory Section
    {
      id: "roomsToAssess",
      name: "roomsToAssess",
      label: "Rooms to Assess",
      type: FieldType.MULTISELECT,
      section: "room-inventory",
      required: true,
      options: [
        { value: "bathroom", label: "Bathroom" },
        { value: "kitchen", label: "Kitchen" },
        { value: "bedroom", label: "Bedroom" },
        { value: "livingRoom", label: "Living Room" },
        { value: "entrance", label: "Entrance/Hallway" },
        { value: "stairs", label: "Stairs" },
      ],
      order: 1,
      width: "full",
    },
    {
      id: "bathroomCount",
      name: "bathroomCount",
      label: "Number of Bathrooms",
      type: FieldType.NUMBER,
      section: "room-inventory",
      required: true,
      defaultValue: 1,
      order: 2,
      width: "third",
      conditional: {
        field: "roomsToAssess",
        operator: "contains",
        value: "bathroom",
      },
    },
    {
      id: "bedroomCount",
      name: "bedroomCount",
      label: "Number of Bedrooms",
      type: FieldType.NUMBER,
      section: "room-inventory",
      required: true,
      defaultValue: 1,
      order: 3,
      width: "third",
      conditional: {
        field: "roomsToAssess",
        operator: "contains",
        value: "bedroom",
      },
    },

    // FDF-specific Section
    {
      id: "fdfCaseNumber",
      name: "fdfCaseNumber",
      label: "FDF Case Number",
      type: FieldType.TEXT,
      section: "fdf-specific",
      required: true,
      order: 1,
      width: "half",
      clientTypes: [ClientType.FDF],
      validation: [
        {
          type: ValidationRuleType.PATTERN,
          value: "^FDF-\\d{6}$",
          message: "FDF Case Number must be in format FDF-XXXXXX",
          clientTypes: [ClientType.FDF],
        },
      ],
    },
    {
      id: "fdfPriorityCategory",
      name: "fdfPriorityCategory",
      label: "FDF Priority Category",
      type: FieldType.SELECT,
      section: "fdf-specific",
      required: true,
      options: [
        { value: "category1", label: "Category 1 - Highest Priority" },
        { value: "category2", label: "Category 2 - High Priority" },
        { value: "category3", label: "Category 3 - Medium Priority" },
        { value: "category4", label: "Category 4 - Standard Priority" },
      ],
      order: 2,
      width: "half",
      clientTypes: [ClientType.FDF],
    },

    // ADHA-specific Section
    {
      id: "adhaReferenceNumber",
      name: "adhaReferenceNumber",
      label: "ADHA Reference Number",
      type: FieldType.TEXT,
      section: "adha-specific",
      required: true,
      order: 1,
      width: "half",
      clientTypes: [ClientType.ADHA],
      validation: [
        {
          type: ValidationRuleType.PATTERN,
          value: "^ADHA-\\d{8}$",
          message: "ADHA Reference Number must be in format ADHA-XXXXXXXX",
          clientTypes: [ClientType.ADHA],
        },
      ],
    },
    {
      id: "adhaApprovalDate",
      name: "adhaApprovalDate",
      label: "ADHA Approval Date",
      type: FieldType.DATE,
      section: "adha-specific",
      required: true,
      order: 2,
      width: "half",
      clientTypes: [ClientType.ADHA],
    },
  ],
  dependencies: [],
  submitEndpoint: "/api/assessments/initial",
  fetchDataEndpoint: "/api/assessments/initial/{id}",
  clientTypeOverrides: {
    [ClientType.FDF]: {
      title: "FDF Initial Home Assessment",
      submitEndpoint: "/api/assessments/initial/fdf",
    },
    [ClientType.ADHA]: {
      title: "ADHA Initial Home Assessment",
      submitEndpoint: "/api/assessments/initial/adha",
    },
    [ClientType.CASH]: {
      title: "Cash Client Initial Home Assessment",
      submitEndpoint: "/api/assessments/initial/cash",
    },
  },
  createdAt: new Date(),
  updatedAt: new Date(),
  isActive: true,
};

/**
 * Room Assessment Form Metadata
 *
 * This form is used for detailed assessment of individual rooms
 * in a beneficiary's home to determine specific modifications needed.
 */
export const roomAssessmentFormMetadata: FormMetadata = {
  id: "room-assessment-form",
  title: "Room Assessment",
  description: "Detailed assessment of a specific room in beneficiary's home",
  module: FormModule.ASSESSMENT,
  version: "1.0.0",
  permissions: {
    [FormPermission.VIEW]: ["assessor", "supervisor", "admin"],
    [FormPermission.CREATE]: ["assessor", "admin"],
    [FormPermission.EDIT]: ["assessor", "admin"],
    [FormPermission.DELETE]: ["admin"],
    [FormPermission.APPROVE]: ["supervisor", "admin"],
    [FormPermission.REJECT]: ["supervisor", "admin"],
    [FormPermission.SUBMIT]: ["assessor", "admin"],
    [FormPermission.PRINT]: ["assessor", "supervisor", "admin"],
    [FormPermission.EXPORT]: ["supervisor", "admin"],
  },
  clientTypes: [ClientType.FDF, ClientType.ADHA, ClientType.CASH],
  sections: [
    {
      id: "room-info",
      title: "Room Information",
      description: "Basic information about the room",
      order: 1,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "measurements",
      title: "Measurements",
      description: "Detailed measurements of the room",
      order: 2,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "accessibility-issues",
      title: "Accessibility Issues",
      description: "Identified accessibility issues in the room",
      order: 3,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "recommendations",
      title: "Recommendations",
      description: "Recommended modifications for the room",
      order: 4,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "photos",
      title: "Photos",
      description: "Photos of the room and specific areas",
      order: 5,
      collapsible: true,
      collapsed: false,
    },
  ],
  fields: [
    // Room Information Section
    {
      id: "initialAssessmentId",
      name: "initialAssessmentId",
      label: "Initial Assessment Reference",
      type: FieldType.REFERENCE,
      section: "room-info",
      required: true,
      order: 1,
      width: "full",
      dataSource: {
        type: "api",
        source: "/api/assessments/initial/list",
        valueField: "id",
        labelField: "title",
        filters: { status: "approved" },
      },
    },
    {
      id: "roomType",
      name: "roomType",
      label: "Room Type",
      type: FieldType.SELECT,
      section: "room-info",
      required: true,
      options: [
        { value: "bathroom", label: "Bathroom" },
        { value: "kitchen", label: "Kitchen" },
        { value: "bedroom", label: "Bedroom" },
        { value: "livingRoom", label: "Living Room" },
        { value: "entrance", label: "Entrance/Hallway" },
        { value: "stairs", label: "Stairs" },
      ],
      order: 2,
      width: "half",
    },
    {
      id: "roomName",
      name: "roomName",
      label: "Room Name/Identifier",
      type: FieldType.TEXT,
      section: "room-info",
      required: true,
      order: 3,
      width: "half",
      placeholder: "e.g., Master Bathroom, Kitchen 1",
    },
    {
      id: "floorLevel",
      name: "floorLevel",
      label: "Floor Level",
      type: FieldType.NUMBER,
      section: "room-info",
      required: true,
      defaultValue: 1,
      order: 4,
      width: "half",
    },

    // Measurements Section
    {
      id: "roomLength",
      name: "roomLength",
      label: "Room Length (cm)",
      type: FieldType.NUMBER,
      section: "measurements",
      required: true,
      order: 1,
      width: "third",
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 50,
          message: "Length must be at least 50 cm",
        },
      ],
    },
    {
      id: "roomWidth",
      name: "roomWidth",
      label: "Room Width (cm)",
      type: FieldType.NUMBER,
      section: "measurements",
      required: true,
      order: 2,
      width: "third",
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 50,
          message: "Width must be at least 50 cm",
        },
      ],
    },
    {
      id: "roomHeight",
      name: "roomHeight",
      label: "Room Height (cm)",
      type: FieldType.NUMBER,
      section: "measurements",
      required: true,
      order: 3,
      width: "third",
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 200,
          message: "Height must be at least 200 cm",
        },
      ],
    },
    {
      id: "doorWidth",
      name: "doorWidth",
      label: "Door Width (cm)",
      type: FieldType.NUMBER,
      section: "measurements",
      required: true,
      order: 4,
      width: "third",
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 30,
          message: "Door width must be at least 30 cm",
        },
      ],
    },
    {
      id: "doorThreshold",
      name: "doorThreshold",
      label: "Door Threshold Height (cm)",
      type: FieldType.NUMBER,
      section: "measurements",
      required: true,
      defaultValue: 0,
      order: 5,
      width: "third",
    },

    // Accessibility Issues Section
    {
      id: "identifiedIssues",
      name: "identifiedIssues",
      label: "Identified Accessibility Issues",
      type: FieldType.MULTISELECT,
      section: "accessibility-issues",
      required: true,
      options: [
        { value: "narrowDoorway", label: "Narrow Doorway" },
        { value: "highThreshold", label: "High Threshold" },
        { value: "inadequateSpace", label: "Inadequate Maneuvering Space" },
        { value: "poorLighting", label: "Poor Lighting" },
        { value: "slipperyFloor", label: "Slippery Floor" },
        { value: "noGrabBars", label: "No Grab Bars" },
        { value: "inaccessibleFixtures", label: "Inaccessible Fixtures" },
        { value: "inaccessibleStorage", label: "Inaccessible Storage" },
      ],
      order: 1,
      width: "full",
    },
    {
      id: "issueDetails",
      name: "issueDetails",
      label: "Issue Details",
      type: FieldType.TEXTAREA,
      section: "accessibility-issues",
      required: true,
      order: 2,
      width: "full",
      placeholder: "Provide detailed description of accessibility issues...",
    },
    {
      id: "priorityLevel",
      name: "priorityLevel",
      label: "Priority Level",
      type: FieldType.SELECT,
      section: "accessibility-issues",
      required: true,
      options: [
        { value: "critical", label: "Critical - Safety hazard" },
        { value: "high", label: "High - Severely limits accessibility" },
        { value: "medium", label: "Medium - Moderately limits accessibility" },
        { value: "low", label: "Low - Minor inconvenience" },
      ],
      order: 3,
      width: "half",
    },

    // Recommendations Section
    {
      id: "recommendedModifications",
      name: "recommendedModifications",
      label: "Recommended Modifications",
      type: FieldType.MULTISELECT,
      section: "recommendations",
      required: true,
      options: [
        { value: "widenDoorway", label: "Widen Doorway" },
        { value: "removeThreshold", label: "Remove/Reduce Threshold" },
        { value: "installRamp", label: "Install Ramp" },
        { value: "installGrabBars", label: "Install Grab Bars" },
        { value: "adjustFixtureHeight", label: "Adjust Fixture Height" },
        { value: "improveFlooring", label: "Improve Flooring" },
        { value: "improveLighting", label: "Improve Lighting" },
        { value: "installLift", label: "Install Lift" },
      ],
      order: 1,
      width: "full",
      dependencies: [
        {
          type: "options",
          sourceField: "identifiedIssues",
          condition: "value.includes('narrowDoorway')",
          action:
            "options.find(o => o.value === 'widenDoorway').highlighted = true",
        },
        {
          type: "options",
          sourceField: "identifiedIssues",
          condition: "value.includes('highThreshold')",
          action:
            "options.find(o => o.value === 'removeThreshold').highlighted = true",
        },
        {
          type: "options",
          sourceField: "identifiedIssues",
          condition: "value.includes('noGrabBars')",
          action:
            "options.find(o => o.value === 'installGrabBars').highlighted = true",
        },
      ],
    },
    {
      id: "modificationDetails",
      name: "modificationDetails",
      label: "Modification Details",
      type: FieldType.TEXTAREA,
      section: "recommendations",
      required: true,
      order: 2,
      width: "full",
      placeholder:
        "Provide detailed specifications for recommended modifications...",
    },
    {
      id: "estimatedCost",
      name: "estimatedCost",
      label: "Estimated Cost (SAR)",
      type: FieldType.NUMBER,
      section: "recommendations",
      required: true,
      order: 3,
      width: "half",
    },

    // Photos Section
    {
      id: "roomPhotos",
      name: "roomPhotos",
      label: "Room Photos",
      type: FieldType.FILE,
      section: "photos",
      required: true,
      order: 1,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.MIN_LENGTH,
          value: 1,
          message: "At least one photo is required",
        },
      ],
    },
    {
      id: "photoNotes",
      name: "photoNotes",
      label: "Photo Notes",
      type: FieldType.TEXTAREA,
      section: "photos",
      required: false,
      order: 2,
      width: "full",
      placeholder: "Add notes about the photos...",
    },
  ],
  dependencies: [
    {
      formId: "initial-assessment-form",
      description: "Room assessment requires an initial assessment",
      type: "prerequisite",
      required: true,
    },
  ],
  submitEndpoint: "/api/assessments/room",
  fetchDataEndpoint: "/api/assessments/room/{id}",
  clientTypeOverrides: {
    [ClientType.FDF]: {
      title: "FDF Room Assessment",
      submitEndpoint: "/api/assessments/room/fdf",
    },
    [ClientType.ADHA]: {
      title: "ADHA Room Assessment",
      submitEndpoint: "/api/assessments/room/adha",
    },
  },
  createdAt: new Date(),
  updatedAt: new Date(),
  isActive: true,
};

/**
 * Final Assessment Form Metadata
 *
 * This form is used for the final assessment after modifications have been completed
 * to verify that all requirements have been met and the project can be closed.
 */
export const finalAssessmentFormMetadata: FormMetadata = {
  id: "final-assessment-form",
  title: "Final Assessment",
  description:
    "Final assessment after modifications to verify requirements have been met",
  module: FormModule.ASSESSMENT,
  version: "1.0.0",
  permissions: {
    [FormPermission.VIEW]: [
      "assessor",
      "supervisor",
      "admin",
      "project-manager",
    ],
    [FormPermission.CREATE]: ["assessor", "admin"],
    [FormPermission.EDIT]: ["assessor", "admin"],
    [FormPermission.DELETE]: ["admin"],
    [FormPermission.APPROVE]: ["supervisor", "admin"],
    [FormPermission.REJECT]: ["supervisor", "admin"],
    [FormPermission.SUBMIT]: ["assessor", "admin"],
    [FormPermission.PRINT]: [
      "assessor",
      "supervisor",
      "admin",
      "project-manager",
    ],
    [FormPermission.EXPORT]: ["supervisor", "admin", "project-manager"],
  },
  clientTypes: [ClientType.FDF, ClientType.ADHA, ClientType.CASH],
  sections: [
    {
      id: "project-info",
      title: "Project Information",
      description: "Basic information about the project",
      order: 1,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "completion-verification",
      title: "Completion Verification",
      description: "Verification of completed modifications",
      order: 2,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "quality-assessment",
      title: "Quality Assessment",
      description: "Assessment of the quality of completed work",
      order: 3,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "beneficiary-feedback",
      title: "Beneficiary Feedback",
      description: "Feedback from the beneficiary about the modifications",
      order: 4,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "documentation",
      title: "Documentation",
      description: "Final documentation and photos",
      order: 5,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "fdf-specific-final",
      title: "FDF Final Requirements",
      description: "FDF-specific final assessment criteria",
      order: 6,
      collapsible: true,
      collapsed: false,
      clientTypes: [ClientType.FDF],
      conditional: {
        field: "clientType",
        operator: "equals",
        value: ClientType.FDF,
      },
    },
    {
      id: "adha-specific-final",
      title: "ADHA Final Requirements",
      description: "ADHA-specific final assessment criteria",
      order: 7,
      collapsible: true,
      collapsed: false,
      clientTypes: [ClientType.ADHA],
      conditional: {
        field: "clientType",
        operator: "equals",
        value: ClientType.ADHA,
      },
    },
  ],
  fields: [
    // Project Information Section
    {
      id: "projectId",
      name: "projectId",
      label: "Project ID",
      type: FieldType.REFERENCE,
      section: "project-info",
      required: true,
      order: 1,
      width: "half",
      dataSource: {
        type: "api",
        source: "/api/projects/list",
        valueField: "id",
        labelField: "title",
        filters: { status: "in-progress" },
      },
    },
    {
      id: "clientType",
      name: "clientType",
      label: "Client Type",
      type: FieldType.SELECT,
      section: "project-info",
      required: true,
      options: [
        { value: ClientType.FDF, label: "FDF" },
        { value: ClientType.ADHA, label: "ADHA" },
        { value: ClientType.CASH, label: "Cash Client" },
      ],
      order: 2,
      width: "half",
    },
    {
      id: "beneficiaryId",
      name: "beneficiaryId",
      label: "Beneficiary ID",
      type: FieldType.REFERENCE,
      section: "project-info",
      required: true,
      order: 3,
      width: "half",
      dataSource: {
        type: "api",
        source: "/api/beneficiaries/lookup",
        valueField: "id",
        labelField: "fullName",
        dependsOn: ["projectId"],
      },
    },
    {
      id: "assessmentDate",
      name: "assessmentDate",
      label: "Assessment Date",
      type: FieldType.DATE,
      section: "project-info",
      required: true,
      defaultValue: new Date().toISOString().split("T")[0],
      order: 4,
      width: "half",
    },
    {
      id: "assessorId",
      name: "assessorId",
      label: "Assessor",
      type: FieldType.SELECT,
      section: "project-info",
      required: true,
      order: 5,
      width: "half",
      dataSource: {
        type: "api",
        source: "/api/users/assessors",
        valueField: "id",
        labelField: "fullName",
        filters: { active: true },
      },
    },
    {
      id: "projectManager",
      name: "projectManager",
      label: "Project Manager",
      type: FieldType.SELECT,
      section: "project-info",
      required: true,
      order: 6,
      width: "half",
      dataSource: {
        type: "api",
        source: "/api/users/project-managers",
        valueField: "id",
        labelField: "fullName",
        dependsOn: ["projectId"],
      },
    },

    // Completion Verification Section
    {
      id: "modificationsList",
      name: "modificationsList",
      label: "Modifications Completed",
      type: FieldType.MULTISELECT,
      section: "completion-verification",
      required: true,
      order: 1,
      width: "full",
      dataSource: {
        type: "api",
        source: "/api/projects/modifications",
        valueField: "id",
        labelField: "description",
        dependsOn: ["projectId"],
      },
    },
    {
      id: "allModificationsCompleted",
      name: "allModificationsCompleted",
      label: "All Planned Modifications Completed",
      type: FieldType.CHECKBOX,
      section: "completion-verification",
      required: true,
      order: 2,
      width: "full",
    },
    {
      id: "incompleteModificationsReason",
      name: "incompleteModificationsReason",
      label: "Reason for Incomplete Modifications",
      type: FieldType.TEXTAREA,
      section: "completion-verification",
      required: false,
      order: 3,
      width: "full",
      conditional: {
        field: "allModificationsCompleted",
        operator: "equals",
        value: false,
      },
      placeholder: "Explain why some modifications were not completed...",
    },
    {
      id: "additionalModificationsNeeded",
      name: "additionalModificationsNeeded",
      label: "Additional Modifications Needed",
      type: FieldType.CHECKBOX,
      section: "completion-verification",
      required: true,
      order: 4,
      width: "full",
    },
    {
      id: "additionalModificationsDetails",
      name: "additionalModificationsDetails",
      label: "Additional Modifications Details",
      type: FieldType.TEXTAREA,
      section: "completion-verification",
      required: false,
      order: 5,
      width: "full",
      conditional: {
        field: "additionalModificationsNeeded",
        operator: "equals",
        value: true,
      },
      placeholder: "Describe additional modifications needed...",
    },

    // Quality Assessment Section
    {
      id: "workmanshipQuality",
      name: "workmanshipQuality",
      label: "Workmanship Quality",
      type: FieldType.SELECT,
      section: "quality-assessment",
      required: true,
      options: [
        { value: "excellent", label: "Excellent" },
        { value: "good", label: "Good" },
        { value: "satisfactory", label: "Satisfactory" },
        { value: "poor", label: "Poor" },
        { value: "unacceptable", label: "Unacceptable" },
      ],
      order: 1,
      width: "half",
    },
    {
      id: "materialsQuality",
      name: "materialsQuality",
      label: "Materials Quality",
      type: FieldType.SELECT,
      section: "quality-assessment",
      required: true,
      options: [
        { value: "excellent", label: "Excellent" },
        { value: "good", label: "Good" },
        { value: "satisfactory", label: "Satisfactory" },
        { value: "poor", label: "Poor" },
        { value: "unacceptable", label: "Unacceptable" },
      ],
      order: 2,
      width: "half",
    },
    {
      id: "finishingQuality",
      name: "finishingQuality",
      label: "Finishing Quality",
      type: FieldType.SELECT,
      section: "quality-assessment",
      required: true,
      options: [
        { value: "excellent", label: "Excellent" },
        { value: "good", label: "Good" },
        { value: "satisfactory", label: "Satisfactory" },
        { value: "poor", label: "Poor" },
        { value: "unacceptable", label: "Unacceptable" },
      ],
      order: 3,
      width: "half",
    },
    {
      id: "functionalityRating",
      name: "functionalityRating",
      label: "Functionality Rating",
      type: FieldType.SELECT,
      section: "quality-assessment",
      required: true,
      options: [
        { value: "excellent", label: "Excellent" },
        { value: "good", label: "Good" },
        { value: "satisfactory", label: "Satisfactory" },
        { value: "poor", label: "Poor" },
        { value: "unacceptable", label: "Unacceptable" },
      ],
      order: 4,
      width: "half",
    },
    {
      id: "qualityIssues",
      name: "qualityIssues",
      label: "Quality Issues Identified",
      type: FieldType.TEXTAREA,
      section: "quality-assessment",
      required: false,
      order: 5,
      width: "full",
      placeholder: "Describe any quality issues identified...",
    },
    {
      id: "remedialWorkRequired",
      name: "remedialWorkRequired",
      label: "Remedial Work Required",
      type: FieldType.CHECKBOX,
      section: "quality-assessment",
      required: true,
      order: 6,
      width: "full",
    },
    {
      id: "remedialWorkDetails",
      name: "remedialWorkDetails",
      label: "Remedial Work Details",
      type: FieldType.TEXTAREA,
      section: "quality-assessment",
      required: false,
      order: 7,
      width: "full",
      conditional: {
        field: "remedialWorkRequired",
        operator: "equals",
        value: true,
      },
      placeholder: "Describe remedial work required...",
    },

    // Beneficiary Feedback Section
    {
      id: "beneficiaryPresent",
      name: "beneficiaryPresent",
      label: "Beneficiary Present During Assessment",
      type: FieldType.CHECKBOX,
      section: "beneficiary-feedback",
      required: true,
      order: 1,
      width: "full",
    },
    {
      id: "overallSatisfaction",
      name: "overallSatisfaction",
      label: "Overall Satisfaction",
      type: FieldType.SELECT,
      section: "beneficiary-feedback",
      required: true,
      options: [
        { value: "verySatisfied", label: "Very Satisfied" },
        { value: "satisfied", label: "Satisfied" },
        { value: "neutral", label: "Neutral" },
        { value: "dissatisfied", label: "Dissatisfied" },
        { value: "veryDissatisfied", label: "Very Dissatisfied" },
      ],
      order: 2,
      width: "half",
      conditional: {
        field: "beneficiaryPresent",
        operator: "equals",
        value: true,
      },
    },
    {
      id: "functionalityFeedback",
      name: "functionalityFeedback",
      label: "Functionality Feedback",
      type: FieldType.SELECT,
      section: "beneficiary-feedback",
      required: true,
      options: [
        { value: "excellent", label: "Excellent" },
        { value: "good", label: "Good" },
        { value: "adequate", label: "Adequate" },
        { value: "poor", label: "Poor" },
        { value: "veryPoor", label: "Very Poor" },
      ],
      order: 3,
      width: "half",
      conditional: {
        field: "beneficiaryPresent",
        operator: "equals",
        value: true,
      },
    },
    {
      id: "beneficiaryComments",
      name: "beneficiaryComments",
      label: "Beneficiary Comments",
      type: FieldType.TEXTAREA,
      section: "beneficiary-feedback",
      required: false,
      order: 4,
      width: "full",
      conditional: {
        field: "beneficiaryPresent",
        operator: "equals",
        value: true,
      },
      placeholder: "Record any comments from the beneficiary...",
    },
    {
      id: "beneficiarySignature",
      name: "beneficiarySignature",
      label: "Beneficiary Signature",
      type: FieldType.SIGNATURE,
      section: "beneficiary-feedback",
      required: false,
      order: 5,
      width: "full",
      conditional: {
        field: "beneficiaryPresent",
        operator: "equals",
        value: true,
      },
    },

    // Documentation Section
    {
      id: "completionPhotos",
      name: "completionPhotos",
      label: "Completion Photos",
      type: FieldType.FILE,
      section: "documentation",
      required: true,
      order: 1,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.MIN_LENGTH,
          value: 3,
          message: "At least 3 photos are required",
        },
      ],
    },
    {
      id: "photoNotes",
      name: "photoNotes",
      label: "Photo Notes",
      type: FieldType.TEXTAREA,
      section: "documentation",
      required: false,
      order: 2,
      width: "full",
      placeholder: "Add notes about the photos...",
    },
    {
      id: "assessorSignature",
      name: "assessorSignature",
      label: "Assessor Signature",
      type: FieldType.SIGNATURE,
      section: "documentation",
      required: true,
      order: 3,
      width: "full",
    },
    {
      id: "assessmentNotes",
      name: "assessmentNotes",
      label: "Assessment Notes",
      type: FieldType.TEXTAREA,
      section: "documentation",
      required: false,
      order: 4,
      width: "full",
      placeholder: "Add any additional notes about the assessment...",
    },

    // FDF-specific Final Section
    {
      id: "fdfComplianceVerified",
      name: "fdfComplianceVerified",
      label: "FDF Compliance Verified",
      type: FieldType.CHECKBOX,
      section: "fdf-specific-final",
      required: true,
      order: 1,
      width: "full",
      clientTypes: [ClientType.FDF],
    },
    {
      id: "fdfComplianceNotes",
      name: "fdfComplianceNotes",
      label: "FDF Compliance Notes",
      type: FieldType.TEXTAREA,
      section: "fdf-specific-final",
      required: false,
      order: 2,
      width: "full",
      clientTypes: [ClientType.FDF],
      placeholder: "Add notes about FDF compliance...",
    },
    {
      id: "fdfFinalApprovalDate",
      name: "fdfFinalApprovalDate",
      label: "FDF Final Approval Date",
      type: FieldType.DATE,
      section: "fdf-specific-final",
      required: true,
      order: 3,
      width: "half",
      clientTypes: [ClientType.FDF],
    },

    // ADHA-specific Final Section
    {
      id: "adhaComplianceVerified",
      name: "adhaComplianceVerified",
      label: "ADHA Compliance Verified",
      type: FieldType.CHECKBOX,
      section: "adha-specific-final",
      required: true,
      order: 1,
      width: "full",
      clientTypes: [ClientType.ADHA],
    },
    {
      id: "adhaComplianceNotes",
      name: "adhaComplianceNotes",
      label: "ADHA Compliance Notes",
      type: FieldType.TEXTAREA,
      section: "adha-specific-final",
      required: false,
      order: 2,
      width: "full",
      clientTypes: [ClientType.ADHA],
      placeholder: "Add notes about ADHA compliance...",
    },
    {
      id: "adhaFinalApprovalDate",
      name: "adhaFinalApprovalDate",
      label: "ADHA Final Approval Date",
      type: FieldType.DATE,
      section: "adha-specific-final",
      required: true,
      order: 3,
      width: "half",
      clientTypes: [ClientType.ADHA],
    },
  ],
  dependencies: [
    {
      formId: "initial-assessment-form",
      description: "Final assessment requires an initial assessment",
      type: "prerequisite",
      required: true,
    },
    {
      formId: "room-assessment-form",
      description: "Final assessment requires room assessments",
      type: "prerequisite",
      required: true,
    },
  ],
  submitEndpoint: "/api/assessments/final",
  fetchDataEndpoint: "/api/assessments/final/{id}",
  clientTypeOverrides: {
    [ClientType.FDF]: {
      title: "FDF Final Assessment",
      submitEndpoint: "/api/assessments/final/fdf",
    },
    [ClientType.ADHA]: {
      title: "ADHA Final Assessment",
      submitEndpoint: "/api/assessments/final/adha",
    },
    [ClientType.CASH]: {
      title: "Cash Client Final Assessment",
      submitEndpoint: "/api/assessments/final/cash",
    },
  },
  createdAt: new Date(),
  updatedAt: new Date(),
  isActive: true,
};

/**
 * Enhanced Assessment Form Metadata
 *
 * This form is used for comprehensive assessment with additional details
 * beyond the standard assessment forms.
 */
export const enhancedAssessmentFormMetadata: FormMetadata = {
  id: "enhanced-assessment-form",
  title: "Enhanced Assessment",
  description:
    "Comprehensive assessment with additional details and specialized evaluations",
  module: FormModule.ASSESSMENT,
  version: "1.0.0",
  permissions: {
    [FormPermission.VIEW]: ["assessor", "supervisor", "admin", "specialist"],
    [FormPermission.CREATE]: ["assessor", "specialist", "admin"],
    [FormPermission.EDIT]: ["assessor", "specialist", "admin"],
    [FormPermission.DELETE]: ["admin"],
    [FormPermission.APPROVE]: ["supervisor", "admin"],
    [FormPermission.REJECT]: ["supervisor", "admin"],
    [FormPermission.SUBMIT]: ["assessor", "specialist", "admin"],
    [FormPermission.PRINT]: ["assessor", "supervisor", "specialist", "admin"],
    [FormPermission.EXPORT]: ["supervisor", "admin"],
  },
  clientTypes: [ClientType.FDF, ClientType.ADHA, ClientType.CASH],
  sections: [
    {
      id: "assessment-reference",
      title: "Assessment Reference",
      description: "Reference to initial assessment",
      order: 1,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "health-evaluation",
      title: "Health Evaluation",
      description: "Detailed health evaluation of the beneficiary",
      order: 2,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "mobility-assessment",
      title: "Mobility Assessment",
      description: "Detailed assessment of mobility needs and challenges",
      order: 3,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "environmental-factors",
      title: "Environmental Factors",
      description:
        "Assessment of environmental factors affecting accessibility",
      order: 4,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "specialized-requirements",
      title: "Specialized Requirements",
      description: "Specialized requirements based on beneficiary needs",
      order: 5,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "long-term-planning",
      title: "Long-term Planning",
      description: "Long-term accessibility planning considerations",
      order: 6,
      collapsible: true,
      collapsed: false,
    },
  ],
  fields: [
    // Assessment Reference Section
    {
      id: "initialAssessmentId",
      name: "initialAssessmentId",
      label: "Initial Assessment Reference",
      type: FieldType.REFERENCE,
      section: "assessment-reference",
      required: true,
      order: 1,
      width: "full",
      dataSource: {
        type: "api",
        source: "/api/assessments/initial/list",
        valueField: "id",
        labelField: "title",
        filters: { status: "approved" },
      },
    },
    {
      id: "assessmentDate",
      name: "assessmentDate",
      label: "Enhanced Assessment Date",
      type: FieldType.DATE,
      section: "assessment-reference",
      required: true,
      defaultValue: new Date().toISOString().split("T")[0],
      order: 2,
      width: "half",
    },
    {
      id: "specialistId",
      name: "specialistId",
      label: "Specialist Assessor",
      type: FieldType.SELECT,
      section: "assessment-reference",
      required: true,
      order: 3,
      width: "half",
      dataSource: {
        type: "api",
        source: "/api/users/specialists",
        valueField: "id",
        labelField: "fullName",
        filters: { active: true },
      },
    },

    // Health Evaluation Section
    {
      id: "primaryDiagnosis",
      name: "primaryDiagnosis",
      label: "Primary Diagnosis",
      type: FieldType.TEXT,
      section: "health-evaluation",
      required: true,
      order: 1,
      width: "full",
    },
    {
      id: "secondaryDiagnoses",
      name: "secondaryDiagnoses",
      label: "Secondary Diagnoses",
      type: FieldType.TEXTAREA,
      section: "health-evaluation",
      required: false,
      order: 2,
      width: "full",
    },
    {
      id: "medicalHistory",
      name: "medicalHistory",
      label: "Relevant Medical History",
      type: FieldType.TEXTAREA,
      section: "health-evaluation",
      required: true,
      order: 3,
      width: "full",
    },
    {
      id: "medicationImpact",
      name: "medicationImpact",
      label: "Medication Impact on Mobility",
      type: FieldType.SELECT,
      section: "health-evaluation",
      required: true,
      options: [
        { value: "none", label: "No Impact" },
        { value: "mild", label: "Mild Impact" },
        { value: "moderate", label: "Moderate Impact" },
        { value: "severe", label: "Severe Impact" },
      ],
      order: 4,
      width: "half",
    },
    {
      id: "cognitiveStatus",
      name: "cognitiveStatus",
      label: "Cognitive Status",
      type: FieldType.SELECT,
      section: "health-evaluation",
      required: true,
      options: [
        { value: "normal", label: "Normal" },
        { value: "mildImpairment", label: "Mild Impairment" },
        { value: "moderateImpairment", label: "Moderate Impairment" },
        { value: "severeImpairment", label: "Severe Impairment" },
      ],
      order: 5,
      width: "half",
    },

    // Mobility Assessment Section
    {
      id: "mobilityDevices",
      name: "mobilityDevices",
      label: "Mobility Devices Used",
      type: FieldType.MULTISELECT,
      section: "mobility-assessment",
      required: true,
      options: [
        { value: "manualWheelchair", label: "Manual Wheelchair" },
        { value: "powerWheelchair", label: "Power Wheelchair" },
        { value: "scooter", label: "Mobility Scooter" },
        { value: "walker", label: "Walker" },
        { value: "cane", label: "Cane" },
        { value: "crutches", label: "Crutches" },
        { value: "prosthesis", label: "Prosthesis" },
        { value: "other", label: "Other" },
        { value: "none", label: "None" },
      ],
      order: 1,
      width: "full",
    },
    {
      id: "deviceSpecifications",
      name: "deviceSpecifications",
      label: "Device Specifications",
      type: FieldType.TEXTAREA,
      section: "mobility-assessment",
      required: false,
      order: 2,
      width: "full",
      placeholder:
        "Enter specifications of mobility devices (dimensions, make, model)...",
      conditional: {
        field: "mobilityDevices",
        operator: "notEquals",
        value: "none",
      },
    },
    {
      id: "transferAbility",
      name: "transferAbility",
      label: "Transfer Ability",
      type: FieldType.SELECT,
      section: "mobility-assessment",
      required: true,
      options: [
        { value: "independent", label: "Independent" },
        { value: "minimalAssistance", label: "Minimal Assistance" },
        { value: "moderateAssistance", label: "Moderate Assistance" },
        { value: "maximumAssistance", label: "Maximum Assistance" },
        { value: "dependent", label: "Dependent" },
      ],
      order: 3,
      width: "half",
    },
    {
      id: "balanceAssessment",
      name: "balanceAssessment",
      label: "Balance Assessment",
      type: FieldType.SELECT,
      section: "mobility-assessment",
      required: true,
      options: [
        { value: "normal", label: "Normal" },
        { value: "fairWithSupport", label: "Fair with Support" },
        {
          value: "poorRequiresAssistance",
          label: "Poor - Requires Assistance",
        },
        { value: "severelyImpaired", label: "Severely Impaired" },
      ],
      order: 4,
      width: "half",
    },
    {
      id: "fallHistory",
      name: "fallHistory",
      label: "Fall History (past 6 months)",
      type: FieldType.SELECT,
      section: "mobility-assessment",
      required: true,
      options: [
        { value: "none", label: "No Falls" },
        { value: "occasional", label: "Occasional (1-2)" },
        { value: "frequent", label: "Frequent (3-5)" },
        { value: "veryFrequent", label: "Very Frequent (6+)" },
      ],
      order: 5,
      width: "half",
    },

    // Environmental Factors Section
    {
      id: "homeAccessChallenges",
      name: "homeAccessChallenges",
      label: "Home Access Challenges",
      type: FieldType.MULTISELECT,
      section: "environmental-factors",
      required: true,
      options: [
        { value: "entranceSteps", label: "Entrance Steps" },
        { value: "narrowDoorways", label: "Narrow Doorways" },
        { value: "thresholds", label: "High Thresholds" },
        { value: "inadequateSpace", label: "Inadequate Turning Space" },
        { value: "bathroomAccess", label: "Bathroom Access Issues" },
        { value: "kitchenAccess", label: "Kitchen Access Issues" },
        { value: "bedroomAccess", label: "Bedroom Access Issues" },
        { value: "flooringSurface", label: "Flooring Surface Issues" },
        { value: "lighting", label: "Inadequate Lighting" },
      ],
      order: 1,
      width: "full",
    },
    {
      id: "environmentalBarriers",
      name: "environmentalBarriers",
      label: "Environmental Barriers",
      type: FieldType.TEXTAREA,
      section: "environmental-factors",
      required: true,
      order: 2,
      width: "full",
      placeholder: "Describe specific environmental barriers in detail...",
    },
    {
      id: "communityAccessNeeds",
      name: "communityAccessNeeds",
      label: "Community Access Needs",
      type: FieldType.TEXTAREA,
      section: "environmental-factors",
      required: false,
      order: 3,
      width: "full",
      placeholder: "Describe any community access needs or challenges...",
    },

    // Specialized Requirements Section
    {
      id: "specializedEquipment",
      name: "specializedEquipment",
      label: "Specialized Equipment Needed",
      type: FieldType.MULTISELECT,
      section: "specialized-requirements",
      required: true,
      options: [
        { value: "ceilingLift", label: "Ceiling Lift" },
        { value: "stairLift", label: "Stair Lift" },
        { value: "platformLift", label: "Platform Lift" },
        { value: "elevatedToilet", label: "Elevated Toilet" },
        { value: "showerChair", label: "Shower Chair" },
        { value: "adjustableBed", label: "Adjustable Bed" },
        { value: "grabBars", label: "Grab Bars" },
        { value: "ramps", label: "Ramps" },
        { value: "visualAlerts", label: "Visual Alerts" },
        { value: "audioAlerts", label: "Audio Alerts" },
        { value: "other", label: "Other" },
        { value: "none", label: "None" },
      ],
      order: 1,
      width: "full",
    },
    {
      id: "equipmentSpecifications",
      name: "equipmentSpecifications",
      label: "Equipment Specifications",
      type: FieldType.TEXTAREA,
      section: "specialized-requirements",
      required: false,
      order: 2,
      width: "full",
      placeholder: "Enter detailed specifications for specialized equipment...",
      conditional: {
        field: "specializedEquipment",
        operator: "notEquals",
        value: "none",
      },
    },
    {
      id: "sensoryNeeds",
      name: "sensoryNeeds",
      label: "Sensory Needs",
      type: FieldType.MULTISELECT,
      section: "specialized-requirements",
      required: true,
      options: [
        {
          value: "visualImpairment",
          label: "Visual Impairment Accommodations",
        },
        {
          value: "hearingImpairment",
          label: "Hearing Impairment Accommodations",
        },
        { value: "tactileNeeds", label: "Tactile Needs" },
        {
          value: "sensorySensitivity",
          label: "Sensory Sensitivity Accommodations",
        },
        { value: "none", label: "None" },
      ],
      order: 3,
      width: "full",
    },
    {
      id: "sensoryDetails",
      name: "sensoryDetails",
      label: "Sensory Needs Details",
      type: FieldType.TEXTAREA,
      section: "specialized-requirements",
      required: false,
      order: 4,
      width: "full",
      placeholder: "Describe specific sensory needs and accommodations...",
      conditional: {
        field: "sensoryNeeds",
        operator: "notEquals",
        value: "none",
      },
    },

    // Long-term Planning Section
    {
      id: "progressiveCondition",
      name: "progressiveCondition",
      label: "Progressive Condition",
      type: FieldType.CHECKBOX,
      section: "long-term-planning",
      required: true,
      order: 1,
      width: "full",
    },
    {
      id: "anticipatedChanges",
      name: "anticipatedChanges",
      label: "Anticipated Changes in Needs",
      type: FieldType.TEXTAREA,
      section: "long-term-planning",
      required: false,
      order: 2,
      width: "full",
      placeholder: "Describe anticipated changes in needs over time...",
      conditional: {
        field: "progressiveCondition",
        operator: "equals",
        value: true,
      },
    },
    {
      id: "futureModifications",
      name: "futureModifications",
      label: "Recommended Future Modifications",
      type: FieldType.TEXTAREA,
      section: "long-term-planning",
      required: false,
      order: 3,
      width: "full",
      placeholder: "Describe recommended future modifications...",
    },
    {
      id: "followUpTimeframe",
      name: "followUpTimeframe",
      label: "Recommended Follow-up Timeframe",
      type: FieldType.SELECT,
      section: "long-term-planning",
      required: true,
      options: [
        { value: "3months", label: "3 Months" },
        { value: "6months", label: "6 Months" },
        { value: "1year", label: "1 Year" },
        { value: "2years", label: "2 Years" },
        { value: "none", label: "No Follow-up Required" },
      ],
      order: 4,
      width: "half",
    },
  ],
  dependencies: [
    {
      formId: "initial-assessment-form",
      description: "Enhanced assessment requires an initial assessment",
      type: "prerequisite",
      required: true,
    },
  ],
  submitEndpoint: "/api/assessments/enhanced",
  fetchDataEndpoint: "/api/assessments/enhanced/{id}",
  clientTypeOverrides: {
    [ClientType.FDF]: {
      title: "FDF Enhanced Assessment",
      submitEndpoint: "/api/assessments/enhanced/fdf",
    },
    [ClientType.ADHA]: {
      title: "ADHA Enhanced Assessment",
      submitEndpoint: "/api/assessments/enhanced/adha",
    },
  },
  createdAt: new Date(),
  updatedAt: new Date(),
  isActive: true,
};

// Register the forms
formRegistry.registerForm(
  {
    id: initialAssessmentFormMetadata.id,
    title: initialAssessmentFormMetadata.title,
    description: initialAssessmentFormMetadata.description,
    module: initialAssessmentFormMetadata.module,
    clientTypes: initialAssessmentFormMetadata.clientTypes,
    permissions: initialAssessmentFormMetadata.permissions,
    dependencies: initialAssessmentFormMetadata.dependencies,
    version: initialAssessmentFormMetadata.version,
    path: "/assessments/initial",
    icon: "clipboard-check",
    isActive: initialAssessmentFormMetadata.isActive,
  },
  initialAssessmentFormMetadata,
);

formRegistry.registerForm(
  {
    id: roomAssessmentFormMetadata.id,
    title: roomAssessmentFormMetadata.title,
    description: roomAssessmentFormMetadata.description,
    module: roomAssessmentFormMetadata.module,
    clientTypes: roomAssessmentFormMetadata.clientTypes,
    permissions: roomAssessmentFormMetadata.permissions,
    dependencies: roomAssessmentFormMetadata.dependencies,
    version: roomAssessmentFormMetadata.version,
    path: "/assessments/room",
    icon: "layout-dashboard",
    isActive: roomAssessmentFormMetadata.isActive,
  },
  roomAssessmentFormMetadata,
);

formRegistry.registerForm(
  {
    id: finalAssessmentFormMetadata.id,
    title: finalAssessmentFormMetadata.title,
    description: finalAssessmentFormMetadata.description,
    module: finalAssessmentFormMetadata.module,
    clientTypes: finalAssessmentFormMetadata.clientTypes,
    permissions: finalAssessmentFormMetadata.permissions,
    dependencies: finalAssessmentFormMetadata.dependencies,
    version: finalAssessmentFormMetadata.version,
    path: "/assessments/final",
    icon: "check-circle",
    isActive: finalAssessmentFormMetadata.isActive,
  },
  finalAssessmentFormMetadata,
);

formRegistry.registerForm(
  {
    id: enhancedAssessmentFormMetadata.id,
    title: enhancedAssessmentFormMetadata.title,
    description: enhancedAssessmentFormMetadata.description,
    module: enhancedAssessmentFormMetadata.module,
    clientTypes: enhancedAssessmentFormMetadata.clientTypes,
    permissions: enhancedAssessmentFormMetadata.permissions,
    dependencies: enhancedAssessmentFormMetadata.dependencies,
    version: enhancedAssessmentFormMetadata.version,
    path: "/assessments/enhanced",
    icon: "stethoscope",
    isActive: enhancedAssessmentFormMetadata.isActive,
  },
  enhancedAssessmentFormMetadata,
);
