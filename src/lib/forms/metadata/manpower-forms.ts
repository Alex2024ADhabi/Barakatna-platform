import {
  ClientType,
  FieldType,
  FormMetadata,
  FormModule,
  FormPermission,
  ValidationRuleType,
} from "../types";
import { formRegistry } from "../registry";

/**
 * Contractor Performance Evaluation Form (F11.5)
 * Used to evaluate the performance of contractors on projects
 */
export const contractorPerformanceEvaluation: FormMetadata = {
  id: "contractor-performance-evaluation-form",
  title: "Contractor Performance Evaluation",
  description: "Evaluate the performance of contractors on projects",
  module: FormModule.MANPOWER,
  version: "1.0.0",
  permissions: {
    [FormPermission.VIEW]: [
      "admin",
      "manager",
      "project-manager",
      "procurement-officer",
    ],
    [FormPermission.CREATE]: ["admin", "manager", "project-manager"],
    [FormPermission.EDIT]: ["admin", "manager", "project-manager"],
    [FormPermission.DELETE]: ["admin"],
    [FormPermission.APPROVE]: ["admin", "manager"],
    [FormPermission.REJECT]: ["admin", "manager"],
    [FormPermission.SUBMIT]: ["admin", "manager", "project-manager"],
    [FormPermission.PRINT]: [
      "admin",
      "manager",
      "project-manager",
      "procurement-officer",
    ],
    [FormPermission.EXPORT]: ["admin", "manager"],
  },
  clientTypes: [
    ClientType.FDF,
    ClientType.ADHA,
    ClientType.CASH,
    ClientType.OTHER,
  ],
  sections: [
    {
      id: "contractor-information",
      title: "Contractor Information",
      description: "Basic information about the contractor",
      order: 1,
      collapsible: false,
    },
    {
      id: "project-information",
      title: "Project Information",
      description: "Information about the project",
      order: 2,
      collapsible: false,
    },
    {
      id: "performance-criteria",
      title: "Performance Criteria",
      description: "Evaluation of contractor performance across key criteria",
      order: 3,
      collapsible: false,
    },
    {
      id: "overall-assessment",
      title: "Overall Assessment",
      description: "Summary assessment and recommendations",
      order: 4,
      collapsible: false,
    },
    {
      id: "documentation",
      title: "Documentation",
      description: "Supporting documents and signatures",
      order: 5,
      collapsible: true,
    },
  ],
  fields: [
    {
      id: "contractor-id",
      name: "contractorId",
      label: "Contractor ID",
      type: FieldType.TEXT,
      readOnly: true,
      required: true,
      section: "contractor-information",
      order: 1,
      width: "half",
      helpText: "Unique identifier for the contractor",
    },
    {
      id: "contractor-name",
      name: "contractorName",
      label: "Contractor Name",
      type: FieldType.TEXT,
      readOnly: true,
      required: true,
      section: "contractor-information",
      order: 2,
      width: "half",
    },
    {
      id: "contractor-type",
      name: "contractorType",
      label: "Contractor Type",
      type: FieldType.SELECT,
      required: true,
      section: "contractor-information",
      order: 3,
      width: "half",
      options: [
        { value: "general", label: "General Contractor" },
        { value: "specialized", label: "Specialized Contractor" },
        { value: "subcontractor", label: "Subcontractor" },
        { value: "consultant", label: "Consultant" },
      ],
    },
    {
      id: "contract-number",
      name: "contractNumber",
      label: "Contract Number",
      type: FieldType.TEXT,
      required: true,
      section: "contractor-information",
      order: 4,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Contract number is required",
        },
      ],
    },
    {
      id: "project-id",
      name: "projectId",
      label: "Project ID",
      type: FieldType.TEXT,
      readOnly: true,
      required: true,
      section: "project-information",
      order: 1,
      width: "half",
    },
    {
      id: "project-name",
      name: "projectName",
      label: "Project Name",
      type: FieldType.TEXT,
      readOnly: true,
      required: true,
      section: "project-information",
      order: 2,
      width: "half",
    },
    {
      id: "evaluation-period-start",
      name: "evaluationPeriodStart",
      label: "Evaluation Period Start",
      type: FieldType.DATE,
      required: true,
      section: "project-information",
      order: 3,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Evaluation period start date is required",
        },
      ],
    },
    {
      id: "evaluation-period-end",
      name: "evaluationPeriodEnd",
      label: "Evaluation Period End",
      type: FieldType.DATE,
      required: true,
      section: "project-information",
      order: 4,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Evaluation period end date is required",
        },
        {
          type: ValidationRuleType.CUSTOM,
          value: (value: string, formData: any) => {
            if (!value || !formData.evaluationPeriodStart) return true;
            const endDate = new Date(value);
            const startDate = new Date(formData.evaluationPeriodStart);
            return endDate >= startDate;
          },
          message: "End date must be after or equal to start date",
        },
      ],
    },
    {
      id: "quality-of-work",
      name: "qualityOfWork",
      label: "Quality of Work",
      type: FieldType.SELECT,
      required: true,
      section: "performance-criteria",
      order: 1,
      width: "half",
      options: [
        { value: "5", label: "Excellent (5)" },
        { value: "4", label: "Good (4)" },
        { value: "3", label: "Satisfactory (3)" },
        { value: "2", label: "Below Average (2)" },
        { value: "1", label: "Poor (1)" },
      ],
    },
    {
      id: "quality-comments",
      name: "qualityComments",
      label: "Comments on Quality",
      type: FieldType.TEXTAREA,
      placeholder: "Provide specific examples of quality of work",
      required: false,
      section: "performance-criteria",
      order: 2,
      width: "half",
    },
    {
      id: "timeliness",
      name: "timeliness",
      label: "Timeliness",
      type: FieldType.SELECT,
      required: true,
      section: "performance-criteria",
      order: 3,
      width: "half",
      options: [
        { value: "5", label: "Excellent (5)" },
        { value: "4", label: "Good (4)" },
        { value: "3", label: "Satisfactory (3)" },
        { value: "2", label: "Below Average (2)" },
        { value: "1", label: "Poor (1)" },
      ],
    },
    {
      id: "timeliness-comments",
      name: "timelinessComments",
      label: "Comments on Timeliness",
      type: FieldType.TEXTAREA,
      placeholder: "Provide specific examples of timeliness",
      required: false,
      section: "performance-criteria",
      order: 4,
      width: "half",
    },
    {
      id: "cost-management",
      name: "costManagement",
      label: "Cost Management",
      type: FieldType.SELECT,
      required: true,
      section: "performance-criteria",
      order: 5,
      width: "half",
      options: [
        { value: "5", label: "Excellent (5)" },
        { value: "4", label: "Good (4)" },
        { value: "3", label: "Satisfactory (3)" },
        { value: "2", label: "Below Average (2)" },
        { value: "1", label: "Poor (1)" },
      ],
    },
    {
      id: "cost-comments",
      name: "costComments",
      label: "Comments on Cost Management",
      type: FieldType.TEXTAREA,
      placeholder: "Provide specific examples of cost management",
      required: false,
      section: "performance-criteria",
      order: 6,
      width: "half",
    },
    {
      id: "communication",
      name: "communication",
      label: "Communication",
      type: FieldType.SELECT,
      required: true,
      section: "performance-criteria",
      order: 7,
      width: "half",
      options: [
        { value: "5", label: "Excellent (5)" },
        { value: "4", label: "Good (4)" },
        { value: "3", label: "Satisfactory (3)" },
        { value: "2", label: "Below Average (2)" },
        { value: "1", label: "Poor (1)" },
      ],
    },
    {
      id: "communication-comments",
      name: "communicationComments",
      label: "Comments on Communication",
      type: FieldType.TEXTAREA,
      placeholder: "Provide specific examples of communication",
      required: false,
      section: "performance-criteria",
      order: 8,
      width: "half",
    },
    {
      id: "safety-compliance",
      name: "safetyCompliance",
      label: "Safety Compliance",
      type: FieldType.SELECT,
      required: true,
      section: "performance-criteria",
      order: 9,
      width: "half",
      options: [
        { value: "5", label: "Excellent (5)" },
        { value: "4", label: "Good (4)" },
        { value: "3", label: "Satisfactory (3)" },
        { value: "2", label: "Below Average (2)" },
        { value: "1", label: "Poor (1)" },
      ],
    },
    {
      id: "safety-comments",
      name: "safetyComments",
      label: "Comments on Safety Compliance",
      type: FieldType.TEXTAREA,
      placeholder: "Provide specific examples of safety compliance",
      required: false,
      section: "performance-criteria",
      order: 10,
      width: "half",
    },
    {
      id: "overall-rating",
      name: "overallRating",
      label: "Overall Rating",
      type: FieldType.CALCULATED,
      readOnly: true,
      required: true,
      section: "overall-assessment",
      order: 1,
      width: "half",
      calculationFormula:
        "(parseInt(qualityOfWork) + parseInt(timeliness) + parseInt(costManagement) + parseInt(communication) + parseInt(safetyCompliance)) / 5",
      helpText: "Average of all performance criteria ratings",
    },
    {
      id: "performance-summary",
      name: "performanceSummary",
      label: "Performance Summary",
      type: FieldType.TEXTAREA,
      placeholder: "Provide a summary of the contractor's overall performance",
      required: true,
      section: "overall-assessment",
      order: 2,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Performance summary is required",
        },
        {
          type: ValidationRuleType.MIN_LENGTH,
          value: 50,
          message:
            "Please provide a detailed performance summary (minimum 50 characters)",
        },
      ],
    },
    {
      id: "recommendation",
      name: "recommendation",
      label: "Recommendation for Future Work",
      type: FieldType.SELECT,
      required: true,
      section: "overall-assessment",
      order: 3,
      width: "full",
      options: [
        { value: "highly-recommended", label: "Highly Recommended" },
        { value: "recommended", label: "Recommended" },
        {
          value: "recommended-with-reservations",
          label: "Recommended with Reservations",
        },
        { value: "not-recommended", label: "Not Recommended" },
      ],
    },
    {
      id: "areas-for-improvement",
      name: "areasForImprovement",
      label: "Areas for Improvement",
      type: FieldType.TEXTAREA,
      placeholder: "Identify specific areas where the contractor could improve",
      required: false,
      section: "overall-assessment",
      order: 4,
      width: "full",
    },
    {
      id: "supporting-documents",
      name: "supportingDocuments",
      label: "Supporting Documents",
      type: FieldType.FILE,
      required: false,
      section: "documentation",
      order: 1,
      width: "full",
      helpText: "Upload any supporting documents (PDF/Image, max 10MB each)",
      multiple: true,
    },
    {
      id: "evaluator-name",
      name: "evaluatorName",
      label: "Evaluator Name",
      type: FieldType.TEXT,
      required: true,
      section: "documentation",
      order: 2,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Evaluator name is required",
        },
      ],
    },
    {
      id: "evaluator-position",
      name: "evaluatorPosition",
      label: "Evaluator Position",
      type: FieldType.TEXT,
      required: true,
      section: "documentation",
      order: 3,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Evaluator position is required",
        },
      ],
    },
    {
      id: "evaluation-date",
      name: "evaluationDate",
      label: "Evaluation Date",
      type: FieldType.DATE,
      required: true,
      section: "documentation",
      order: 4,
      width: "half",
      defaultValue: new Date().toISOString().split("T")[0],
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Evaluation date is required",
        },
      ],
    },
    {
      id: "evaluator-signature",
      name: "evaluatorSignature",
      label: "Evaluator Signature",
      type: FieldType.SIGNATURE,
      required: true,
      section: "documentation",
      order: 5,
      width: "full",
      helpText: "Digital signature of the evaluator",
    },
  ],
  dependencies: [],
  createdAt: new Date(),
  updatedAt: new Date(),
  isActive: true,
};

/**
 * Manpower Allocation Form (F11.6)
 * Used to allocate human resources to projects and tasks
 */
export const manpowerAllocation: FormMetadata = {
  id: "manpower-allocation-form",
  title: "Manpower Allocation",
  description: "Allocate human resources to projects and tasks",
  module: FormModule.MANPOWER,
  version: "1.0.0",
  permissions: {
    [FormPermission.VIEW]: [
      "admin",
      "manager",
      "project-manager",
      "resource-manager",
    ],
    [FormPermission.CREATE]: [
      "admin",
      "manager",
      "project-manager",
      "resource-manager",
    ],
    [FormPermission.EDIT]: [
      "admin",
      "manager",
      "project-manager",
      "resource-manager",
    ],
    [FormPermission.DELETE]: ["admin"],
    [FormPermission.APPROVE]: ["admin", "manager"],
    [FormPermission.REJECT]: ["admin", "manager"],
    [FormPermission.SUBMIT]: [
      "admin",
      "manager",
      "project-manager",
      "resource-manager",
    ],
    [FormPermission.PRINT]: [
      "admin",
      "manager",
      "project-manager",
      "resource-manager",
    ],
    [FormPermission.EXPORT]: ["admin", "manager"],
  },
  clientTypes: [
    ClientType.FDF,
    ClientType.ADHA,
    ClientType.CASH,
    ClientType.OTHER,
  ],
  sections: [
    {
      id: "project-information",
      title: "Project Information",
      description: "Information about the project requiring resources",
      order: 1,
      collapsible: false,
    },
    {
      id: "resource-requirements",
      title: "Resource Requirements",
      description: "Details of the required resources",
      order: 2,
      collapsible: false,
    },
    {
      id: "resource-allocation",
      title: "Resource Allocation",
      description: "Allocation of specific resources to the project",
      order: 3,
      collapsible: false,
    },
    {
      id: "schedule",
      title: "Schedule",
      description: "Timeline for resource allocation",
      order: 4,
      collapsible: false,
    },
    {
      id: "approval",
      title: "Approval",
      description: "Approval details for the allocation",
      order: 5,
      collapsible: true,
    },
  ],
  fields: [
    {
      id: "allocation-id",
      name: "allocationId",
      label: "Allocation ID",
      type: FieldType.TEXT,
      readOnly: true,
      required: false,
      section: "project-information",
      order: 1,
      width: "half",
      helpText: "Auto-generated unique identifier",
    },
    {
      id: "project-id",
      name: "projectId",
      label: "Project ID",
      type: FieldType.TEXT,
      required: true,
      section: "project-information",
      order: 2,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Project ID is required",
        },
      ],
    },
    {
      id: "project-name",
      name: "projectName",
      label: "Project Name",
      type: FieldType.TEXT,
      required: true,
      section: "project-information",
      order: 3,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Project name is required",
        },
      ],
    },
    {
      id: "project-manager",
      name: "projectManager",
      label: "Project Manager",
      type: FieldType.TEXT,
      required: true,
      section: "project-information",
      order: 4,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Project manager is required",
        },
      ],
    },
    {
      id: "client-type",
      name: "clientType",
      label: "Client Type",
      type: FieldType.SELECT,
      required: true,
      section: "project-information",
      order: 5,
      width: "half",
      options: [
        { value: "FDF", label: "FDF" },
        { value: "ADHA", label: "ADHA" },
        { value: "CASH", label: "CASH" },
        { value: "OTHER", label: "OTHER" },
      ],
    },
    {
      id: "resource-type",
      name: "resourceType",
      label: "Resource Type",
      type: FieldType.MULTISELECT,
      required: true,
      section: "resource-requirements",
      order: 1,
      width: "full",
      options: [
        { value: "project-manager", label: "Project Manager" },
        { value: "site-supervisor", label: "Site Supervisor" },
        { value: "carpenter", label: "Carpenter" },
        { value: "plumber", label: "Plumber" },
        { value: "electrician", label: "Electrician" },
        { value: "painter", label: "Painter" },
        { value: "general-labor", label: "General Labor" },
        { value: "inspector", label: "Inspector" },
        { value: "engineer", label: "Engineer" },
        { value: "architect", label: "Architect" },
        { value: "other", label: "Other" },
      ],
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "At least one resource type must be selected",
        },
      ],
    },
    {
      id: "other-resource-type",
      name: "otherResourceType",
      label: "Other Resource Type",
      type: FieldType.TEXT,
      required: false,
      section: "resource-requirements",
      order: 2,
      width: "full",
      conditional: {
        field: "resourceType",
        operator: "includes",
        value: "other",
      },
    },
    {
      id: "skill-requirements",
      name: "skillRequirements",
      label: "Skill Requirements",
      type: FieldType.TEXTAREA,
      placeholder: "Describe the specific skills required for this project",
      required: true,
      section: "resource-requirements",
      order: 3,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Skill requirements are required",
        },
      ],
    },
    {
      id: "number-of-resources",
      name: "numberOfResources",
      label: "Number of Resources Required",
      type: FieldType.NUMBER,
      required: true,
      section: "resource-requirements",
      order: 4,
      width: "half",
      defaultValue: 1,
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Number of resources is required",
        },
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 1,
          message: "At least one resource must be required",
        },
      ],
    },
    {
      id: "estimated-hours",
      name: "estimatedHours",
      label: "Estimated Hours Required",
      type: FieldType.NUMBER,
      required: true,
      section: "resource-requirements",
      order: 5,
      width: "half",
      defaultValue: 8,
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Estimated hours are required",
        },
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 1,
          message: "Estimated hours must be at least 1",
        },
      ],
    },
    {
      id: "allocated-resources",
      name: "allocatedResources",
      label: "Allocated Resources",
      type: FieldType.REPEATER,
      required: true,
      section: "resource-allocation",
      order: 1,
      width: "full",
      fields: [
        {
          id: "resource-name",
          name: "resourceName",
          label: "Resource Name",
          type: FieldType.TEXT,
          required: true,
          width: "half",
          validation: [
            {
              type: ValidationRuleType.REQUIRED,
              message: "Resource name is required",
            },
          ],
        },
        {
          id: "resource-type",
          name: "resourceType",
          label: "Resource Type",
          type: FieldType.SELECT,
          required: true,
          width: "half",
          options: [
            { value: "project-manager", label: "Project Manager" },
            { value: "site-supervisor", label: "Site Supervisor" },
            { value: "carpenter", label: "Carpenter" },
            { value: "plumber", label: "Plumber" },
            { value: "electrician", label: "Electrician" },
            { value: "painter", label: "Painter" },
            { value: "general-labor", label: "General Labor" },
            { value: "inspector", label: "Inspector" },
            { value: "engineer", label: "Engineer" },
            { value: "architect", label: "Architect" },
            { value: "other", label: "Other" },
          ],
        },
        {
          id: "resource-id",
          name: "resourceId",
          label: "Resource ID",
          type: FieldType.TEXT,
          required: true,
          width: "half",
        },
        {
          id: "allocated-hours",
          name: "allocatedHours",
          label: "Allocated Hours",
          type: FieldType.NUMBER,
          required: true,
          width: "half",
          defaultValue: 8,
        },
        {
          id: "hourly-rate",
          name: "hourlyRate",
          label: "Hourly Rate (AED)",
          type: FieldType.NUMBER,
          required: true,
          width: "half",
        },
        {
          id: "total-cost",
          name: "totalCost",
          label: "Total Cost (AED)",
          type: FieldType.CALCULATED,
          readOnly: true,
          width: "half",
          calculationFormula: "allocatedHours * hourlyRate",
        },
        {
          id: "notes",
          name: "notes",
          label: "Notes",
          type: FieldType.TEXTAREA,
          required: false,
          width: "full",
        },
      ],
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "At least one resource must be allocated",
        },
      ],
    },
    {
      id: "total-allocation-cost",
      name: "totalAllocationCost",
      label: "Total Allocation Cost (AED)",
      type: FieldType.CALCULATED,
      readOnly: true,
      required: false,
      section: "resource-allocation",
      order: 2,
      width: "full",
      calculationFormula:
        "allocatedResources.reduce((sum, resource) => sum + (resource.allocatedHours * resource.hourlyRate), 0)",
    },
    {
      id: "start-date",
      name: "startDate",
      label: "Start Date",
      type: FieldType.DATE,
      required: true,
      section: "schedule",
      order: 1,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Start date is required",
        },
      ],
    },
    {
      id: "end-date",
      name: "endDate",
      label: "End Date",
      type: FieldType.DATE,
      required: true,
      section: "schedule",
      order: 2,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "End date is required",
        },
        {
          type: ValidationRuleType.CUSTOM,
          value: (value: string, formData: any) => {
            if (!value || !formData.startDate) return true;
            const endDate = new Date(value);
            const startDate = new Date(formData.startDate);
            return endDate >= startDate;
          },
          message: "End date must be after or equal to start date",
        },
      ],
    },
    {
      id: "allocation-schedule",
      name: "allocationSchedule",
      label: "Allocation Schedule Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Provide any additional scheduling information",
      required: false,
      section: "schedule",
      order: 3,
      width: "full",
    },
    {
      id: "requested-by",
      name: "requestedBy",
      label: "Requested By",
      type: FieldType.TEXT,
      required: true,
      section: "approval",
      order: 1,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Requester name is required",
        },
      ],
    },
    {
      id: "request-date",
      name: "requestDate",
      label: "Request Date",
      type: FieldType.DATE,
      required: true,
      section: "approval",
      order: 2,
      width: "half",
      defaultValue: new Date().toISOString().split("T")[0],
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Request date is required",
        },
      ],
    },
    {
      id: "approved-by",
      name: "approvedBy",
      label: "Approved By",
      type: FieldType.TEXT,
      required: false,
      section: "approval",
      order: 3,
      width: "half",
    },
    {
      id: "approval-date",
      name: "approvalDate",
      label: "Approval Date",
      type: FieldType.DATE,
      required: false,
      section: "approval",
      order: 4,
      width: "half",
    },
    {
      id: "approval-status",
      name: "approvalStatus",
      label: "Approval Status",
      type: FieldType.SELECT,
      required: true,
      section: "approval",
      order: 5,
      width: "full",
      options: [
        { value: "pending", label: "Pending" },
        { value: "approved", label: "Approved" },
        { value: "rejected", label: "Rejected" },
        { value: "on-hold", label: "On Hold" },
      ],
      defaultValue: "pending",
    },
    {
      id: "approval-notes",
      name: "approvalNotes",
      label: "Approval Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Any notes regarding the approval or rejection",
      required: false,
      section: "approval",
      order: 6,
      width: "full",
    },
    {
      id: "requester-signature",
      name: "requesterSignature",
      label: "Requester Signature",
      type: FieldType.SIGNATURE,
      required: true,
      section: "approval",
      order: 7,
      width: "half",
      helpText: "Digital signature of the requester",
    },
    {
      id: "approver-signature",
      name: "approverSignature",
      label: "Approver Signature",
      type: FieldType.SIGNATURE,
      required: false,
      section: "approval",
      order: 8,
      width: "half",
      helpText: "Digital signature of the approver",
      conditional: {
        field: "approvalStatus",
        operator: "equals",
        value: "approved",
      },
    },
  ],
  dependencies: [],
  createdAt: new Date(),
  updatedAt: new Date(),
  isActive: true,
};

// Register forms with the form registry
formRegistry.registerForm(
  {
    id: contractorPerformanceEvaluation.id,
    title: contractorPerformanceEvaluation.title,
    description: contractorPerformanceEvaluation.description,
    module: FormModule.MANPOWER,
    clientTypes: contractorPerformanceEvaluation.clientTypes,
    permissions: contractorPerformanceEvaluation.permissions,
    dependencies: contractorPerformanceEvaluation.dependencies,
    version: contractorPerformanceEvaluation.version,
    path: "/manpower/contractor-evaluation",
    icon: "clipboard-check",
    isActive: true,
  },
  contractorPerformanceEvaluation,
);

formRegistry.registerForm(
  {
    id: manpowerAllocation.id,
    title: manpowerAllocation.title,
    description: manpowerAllocation.description,
    module: FormModule.MANPOWER,
    clientTypes: manpowerAllocation.clientTypes,
    permissions: manpowerAllocation.permissions,
    dependencies: manpowerAllocation.dependencies,
    version: manpowerAllocation.version,
    path: "/manpower/allocation",
    icon: "users",
    isActive: true,
  },
  manpowerAllocation,
);
