import {
  ClientType,
  FieldType,
  FormMetadata,
  FormModule,
  FormPermission,
  ValidationRuleType,
} from "../types";
import { formRegistry } from "../registry";

/**
 * Beneficiary Assessment Eligibility Form (F01.3)
 * Used to determine specific assessments required for the beneficiary based on initial qualification
 */
export const beneficiaryAssessmentEligibilityForm: FormMetadata = {
  id: "beneficiary-assessment-eligibility-form",
  title: "Beneficiary Assessment Eligibility",
  description:
    "Determine specific assessments required for the beneficiary based on initial qualification",
  module: FormModule.ASSESSMENT,
  version: "1.0.0",
  permissions: {
    [FormPermission.VIEW]: [
      "admin",
      "manager",
      "assessment-specialist",
      "case-manager",
    ],
    [FormPermission.CREATE]: ["admin", "manager", "assessment-specialist"],
    [FormPermission.EDIT]: ["admin", "manager", "assessment-specialist"],
    [FormPermission.DELETE]: ["admin"],
    [FormPermission.APPROVE]: ["admin", "manager"],
    [FormPermission.REJECT]: ["admin", "manager"],
    [FormPermission.SUBMIT]: ["admin", "manager", "assessment-specialist"],
    [FormPermission.PRINT]: [
      "admin",
      "manager",
      "assessment-specialist",
      "case-manager",
    ],
    [FormPermission.EXPORT]: ["admin", "manager"],
  },
  clientTypes: [
    ClientType.FDF,
    ClientType.ADHA,
    ClientType.CASH,
    ClientType.OTHER,
  ],
  sections: [
    {
      id: "beneficiary-information",
      title: "Beneficiary Information",
      description: "Basic information about the beneficiary",
      order: 1,
      collapsible: false,
    },
    {
      id: "assessment-requirements",
      title: "Assessment Requirements",
      description: "Required assessments for the beneficiary",
      order: 2,
      collapsible: false,
    },
    {
      id: "priority-timeline",
      title: "Priority & Timeline",
      description: "Assessment priority and timeline",
      order: 3,
      collapsible: false,
    },
    {
      id: "staff-assignment",
      title: "Staff Assignment",
      description: "Assignment of staff for assessments",
      order: 4,
      collapsible: true,
    },
    {
      id: "status-approval",
      title: "Status & Approval",
      description: "Eligibility status and approval",
      order: 5,
      collapsible: false,
    },
  ],
  fields: [
    {
      id: "eligibility-id",
      name: "eligibilityId",
      label: "Eligibility ID",
      type: FieldType.TEXT,
      readOnly: true,
      required: false,
      section: "beneficiary-information",
      order: 1,
      width: "full",
      helpText: "Auto-generated unique identifier (Format: ELIG-YYYY-NNNNN)",
      defaultValue: "",
    },
    {
      id: "beneficiary-id",
      name: "beneficiaryId",
      label: "Beneficiary",
      type: FieldType.LOOKUP,
      required: true,
      section: "beneficiary-information",
      order: 2,
      width: "full",
      dataSource: {
        type: "api",
        source: "/api/v1/beneficiaries",
        valueField: "id",
        labelField: "fullName",
        filters: { status: "active" },
      },
    },
    {
      id: "beneficiary-name",
      name: "beneficiaryName",
      label: "Beneficiary Name",
      type: FieldType.TEXT,
      readOnly: true,
      required: false,
      section: "beneficiary-information",
      order: 3,
      width: "full",
      dependencies: [
        {
          type: "value",
          sourceField: "beneficiaryId",
          condition: "!!value",
          action: "fetchBeneficiaryName(value)",
        },
      ],
    },
    {
      id: "qualification-id",
      name: "qualificationId",
      label: "Qualification Reference",
      type: FieldType.TEXT,
      readOnly: true,
      required: true,
      section: "beneficiary-information",
      order: 4,
      width: "full",
      dependencies: [
        {
          type: "value",
          sourceField: "beneficiaryId",
          condition: "!!value",
          action: "fetchQualificationId(value)",
        },
      ],
    },
    {
      id: "mobility-assessment-required",
      name: "mobilityAssessmentRequired",
      label: "Mobility Assessment Required",
      type: FieldType.CHECKBOX,
      required: true,
      section: "assessment-requirements",
      order: 1,
      width: "half",
      defaultValue: false,
    },
    {
      id: "mobility-assessment-reason",
      name: "mobilityAssessmentReason",
      label: "Reason for Mobility Assessment",
      type: FieldType.TEXT,
      placeholder: "Enter reason for mobility assessment",
      required: false,
      section: "assessment-requirements",
      order: 2,
      width: "half",
      dependencies: [
        {
          type: "requirement",
          sourceField: "mobilityAssessmentRequired",
          condition: "value === true",
          action: "required = true",
        },
        {
          type: "visibility",
          sourceField: "mobilityAssessmentRequired",
          condition: "value === true",
          action: "visible = true",
        },
      ],
    },
    {
      id: "mental-health-assessment-required",
      name: "mentalHealthAssessmentRequired",
      label: "Mental Health Assessment Required",
      type: FieldType.CHECKBOX,
      required: true,
      section: "assessment-requirements",
      order: 3,
      width: "half",
      defaultValue: false,
    },
    {
      id: "mental-health-assessment-reason",
      name: "mentalHealthAssessmentReason",
      label: "Reason for Mental Health Assessment",
      type: FieldType.TEXT,
      placeholder: "Enter reason for mental health assessment",
      required: false,
      section: "assessment-requirements",
      order: 4,
      width: "half",
      dependencies: [
        {
          type: "requirement",
          sourceField: "mentalHealthAssessmentRequired",
          condition: "value === true",
          action: "required = true",
        },
        {
          type: "visibility",
          sourceField: "mentalHealthAssessmentRequired",
          condition: "value === true",
          action: "visible = true",
        },
      ],
    },
    {
      id: "home-safety-assessment-required",
      name: "homeSafetyAssessmentRequired",
      label: "Home Safety Assessment Required",
      type: FieldType.CHECKBOX,
      required: true,
      section: "assessment-requirements",
      order: 5,
      width: "half",
      defaultValue: false,
    },
    {
      id: "home-safety-assessment-reason",
      name: "homeSafetyAssessmentReason",
      label: "Reason for Home Safety Assessment",
      type: FieldType.TEXT,
      placeholder: "Enter reason for home safety assessment",
      required: false,
      section: "assessment-requirements",
      order: 6,
      width: "half",
      dependencies: [
        {
          type: "requirement",
          sourceField: "homeSafetyAssessmentRequired",
          condition: "value === true",
          action: "required = true",
        },
        {
          type: "visibility",
          sourceField: "homeSafetyAssessmentRequired",
          condition: "value === true",
          action: "visible = true",
        },
      ],
    },
    {
      id: "social-support-assessment-required",
      name: "socialSupportAssessmentRequired",
      label: "Social Support Assessment Required",
      type: FieldType.CHECKBOX,
      required: true,
      section: "assessment-requirements",
      order: 7,
      width: "half",
      defaultValue: false,
    },
    {
      id: "social-support-assessment-reason",
      name: "socialSupportAssessmentReason",
      label: "Reason for Social Support Assessment",
      type: FieldType.TEXT,
      placeholder: "Enter reason for social support assessment",
      required: false,
      section: "assessment-requirements",
      order: 8,
      width: "half",
      dependencies: [
        {
          type: "requirement",
          sourceField: "socialSupportAssessmentRequired",
          condition: "value === true",
          action: "required = true",
        },
        {
          type: "visibility",
          sourceField: "socialSupportAssessmentRequired",
          condition: "value === true",
          action: "visible = true",
        },
      ],
    },
    {
      id: "priority-score",
      name: "priorityScore",
      label: "Priority Score (1-100)",
      type: FieldType.NUMBER,
      required: true,
      section: "priority-timeline",
      order: 1,
      width: "half",
      defaultValue: 50,
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 1,
          message: "Priority score must be at least 1",
        },
        {
          type: ValidationRuleType.MAX_VALUE,
          value: 100,
          message: "Priority score cannot exceed 100",
        },
      ],
    },
    {
      id: "recommended-timeline",
      name: "recommendedTimeline",
      label: "Recommended Timeline",
      type: FieldType.SELECT,
      required: true,
      section: "priority-timeline",
      order: 2,
      width: "half",
      options: [
        { value: "Immediate", label: "Immediate" },
        { value: "Within 1 Week", label: "Within 1 Week" },
        { value: "Within 2 Weeks", label: "Within 2 Weeks" },
        { value: "Within 1 Month", label: "Within 1 Month" },
        { value: "Within 3 Months", label: "Within 3 Months" },
      ],
    },
    {
      id: "special-instructions",
      name: "specialInstructions",
      label: "Special Instructions",
      type: FieldType.TEXTAREA,
      placeholder: "Enter any special instructions for the assessment",
      required: false,
      section: "priority-timeline",
      order: 3,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 500,
          message: "Special instructions cannot exceed 500 characters",
        },
      ],
    },
    {
      id: "assessor-assigned",
      name: "assessorAssigned",
      label: "Assigned Assessor",
      type: FieldType.SELECT,
      required: true,
      section: "staff-assignment",
      order: 1,
      width: "full",
      dataSource: {
        type: "api",
        source: "/api/v1/users",
        valueField: "id",
        labelField: "fullName",
        filters: { role: "assessment-specialist", active: true },
      },
    },
    {
      id: "assessment-coordinator",
      name: "assessmentCoordinator",
      label: "Assessment Coordinator",
      type: FieldType.SELECT,
      required: true,
      section: "staff-assignment",
      order: 2,
      width: "full",
      dataSource: {
        type: "api",
        source: "/api/v1/users",
        valueField: "id",
        labelField: "fullName",
        filters: { role: ["manager", "coordinator"], active: true },
      },
    },
    {
      id: "eligibility-status",
      name: "eligibilityStatus",
      label: "Eligibility Status",
      type: FieldType.SELECT,
      required: true,
      section: "status-approval",
      order: 1,
      width: "full",
      defaultValue: "Pending",
      options: [
        { value: "Pending", label: "Pending" },
        { value: "Approved", label: "Approved" },
        { value: "Rejected", label: "Rejected" },
        { value: "On Hold", label: "On Hold" },
      ],
    },
    {
      id: "manager-review",
      name: "managerReview",
      label: "Manager Review",
      type: FieldType.CHECKBOX,
      required: true,
      section: "status-approval",
      order: 2,
      width: "full",
      defaultValue: false,
    },
    {
      id: "manager-id",
      name: "managerId",
      label: "Manager ID",
      type: FieldType.HIDDEN,
      required: true,
      section: "status-approval",
      order: 3,
      width: "full",
      dependencies: [
        {
          type: "requirement",
          sourceField: "managerReview",
          condition: "value === true",
          action: "required = true",
        },
      ],
    },
    {
      id: "manager-comments",
      name: "managerComments",
      label: "Manager Comments",
      type: FieldType.TEXTAREA,
      placeholder: "Enter manager comments",
      required: false,
      section: "status-approval",
      order: 4,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 500,
          message: "Comments cannot exceed 500 characters",
        },
      ],
    },
    {
      id: "review-date",
      name: "reviewDate",
      label: "Review Date",
      type: FieldType.DATE,
      required: true,
      section: "status-approval",
      order: 5,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.CUSTOM,
          value: (value: string) => {
            const reviewDate = new Date(value);
            const today = new Date();
            return reviewDate <= today;
          },
          message: "Review date cannot be in the future",
        },
      ],
      dependencies: [
        {
          type: "requirement",
          sourceField: "managerReview",
          condition: "value === true",
          action: "required = true",
        },
      ],
    },
  ],
  dependencies: [
    {
      formId: "beneficiary-qualification-form",
      description:
        "Assessment eligibility must be linked to a qualified beneficiary",
      type: "prerequisite",
      required: true,
    },
  ],
  createdAt: new Date(),
  updatedAt: new Date(),
  isActive: true,
};

// Register form with the form registry
export function registerAssessmentEligibilityForm() {
  formRegistry.registerForm(
    {
      id: beneficiaryAssessmentEligibilityForm.id,
      title: beneficiaryAssessmentEligibilityForm.title,
      description: beneficiaryAssessmentEligibilityForm.description,
      module: FormModule.ASSESSMENT,
      clientTypes: beneficiaryAssessmentEligibilityForm.clientTypes,
      permissions: beneficiaryAssessmentEligibilityForm.permissions,
      dependencies: beneficiaryAssessmentEligibilityForm.dependencies,
      version: beneficiaryAssessmentEligibilityForm.version,
      path: "/assessment/eligibility",
      icon: "clipboard-check",
      isActive: true,
    },
    beneficiaryAssessmentEligibilityForm,
  );

}
