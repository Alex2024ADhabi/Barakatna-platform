import {
  ClientType,
  FieldType,
  FormMetadata,
  FormModule,
  FormPermission,
  ValidationRuleType,
} from "../types";
import { formRegistry } from "../registry";

/**
 * Case Closure Form (F10.4)
 * Used to document the formal closure of a case, including outcomes and follow-up requirements
 */
export const caseClosure: FormMetadata = {
  id: "case-closure-form",
  title: "Case Closure",
  description:
    "Document the formal closure of a case, including outcomes and follow-up requirements",
  module: FormModule.CASE,
  version: "1.0.0",
  permissions: {
    [FormPermission.VIEW]: ["admin", "manager", "case-manager", "case-worker"],
    [FormPermission.CREATE]: ["admin", "manager", "case-manager"],
    [FormPermission.EDIT]: ["admin", "manager", "case-manager"],
    [FormPermission.DELETE]: ["admin"],
    [FormPermission.APPROVE]: ["admin", "manager"],
    [FormPermission.REJECT]: ["admin", "manager"],
    [FormPermission.SUBMIT]: ["admin", "manager", "case-manager"],
    [FormPermission.PRINT]: ["admin", "manager", "case-manager", "case-worker"],
    [FormPermission.EXPORT]: ["admin", "manager"],
  },
  clientTypes: [
    ClientType.FDF,
    ClientType.ADHA,
    ClientType.CASH,
    ClientType.OTHER,
  ],
  sections: [
    {
      id: "case-information",
      title: "Case Information",
      description: "Basic information about the case",
      order: 1,
      collapsible: false,
    },
    {
      id: "closure-details",
      title: "Closure Details",
      description: "Details about the case closure",
      order: 2,
      collapsible: false,
    },
    {
      id: "outcomes",
      title: "Outcomes",
      description: "Outcomes and results of the case",
      order: 3,
      collapsible: false,
    },
    {
      id: "follow-up",
      title: "Follow-up Requirements",
      description: "Any follow-up actions required after case closure",
      order: 4,
      collapsible: true,
    },
    {
      id: "documentation",
      title: "Documentation",
      description: "Supporting documents for case closure",
      order: 5,
      collapsible: true,
    },
  ],
  fields: [
    {
      id: "case-id",
      name: "caseId",
      label: "Case ID",
      type: FieldType.TEXT,
      readOnly: true,
      required: true,
      section: "case-information",
      order: 1,
      width: "half",
      helpText: "Unique identifier for the case",
    },
    {
      id: "beneficiary-id",
      name: "beneficiaryId",
      label: "Beneficiary ID",
      type: FieldType.TEXT,
      readOnly: true,
      required: true,
      section: "case-information",
      order: 2,
      width: "half",
      helpText: "ID of the beneficiary associated with this case",
    },
    {
      id: "case-manager",
      name: "caseManager",
      label: "Case Manager",
      type: FieldType.TEXT,
      readOnly: true,
      required: true,
      section: "case-information",
      order: 3,
      width: "half",
    },
    {
      id: "case-type",
      name: "caseType",
      label: "Case Type",
      type: FieldType.TEXT,
      readOnly: true,
      required: true,
      section: "case-information",
      order: 4,
      width: "half",
    },
    {
      id: "closure-date",
      name: "closureDate",
      label: "Closure Date",
      type: FieldType.DATE,
      required: true,
      section: "closure-details",
      order: 1,
      width: "half",
      defaultValue: new Date().toISOString().split("T")[0],
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Closure date is required",
        },
      ],
    },
    {
      id: "closure-reason",
      name: "closureReason",
      label: "Reason for Closure",
      type: FieldType.SELECT,
      required: true,
      section: "closure-details",
      order: 2,
      width: "half",
      options: [
        { value: "Completed", label: "Services Completed Successfully" },
        { value: "Partial", label: "Services Partially Completed" },
        { value: "Withdrawn", label: "Beneficiary Withdrew from Services" },
        { value: "Ineligible", label: "Beneficiary Deemed Ineligible" },
        { value: "Deceased", label: "Beneficiary Deceased" },
        { value: "Relocated", label: "Beneficiary Relocated" },
        { value: "Other", label: "Other" },
      ],
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Reason for closure is required",
        },
      ],
    },
    {
      id: "closure-reason-details",
      name: "closureReasonDetails",
      label: "Closure Reason Details",
      type: FieldType.TEXTAREA,
      placeholder: "Provide additional details about the reason for closure",
      required: false,
      section: "closure-details",
      order: 3,
      width: "full",
      conditional: {
        field: "closureReason",
        operator: "equals",
        value: "Other",
      },
    },
    {
      id: "services-provided",
      name: "servicesProvided",
      label: "Services Provided",
      type: FieldType.MULTISELECT,
      required: true,
      section: "outcomes",
      order: 1,
      width: "full",
      options: [
        { value: "assessment", label: "Home Assessment" },
        { value: "modification", label: "Home Modification" },
        { value: "equipment", label: "Assistive Equipment" },
        { value: "referral", label: "Referral to Other Services" },
        { value: "counseling", label: "Counseling/Support" },
        { value: "financial", label: "Financial Assistance" },
        { value: "other", label: "Other" },
      ],
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "At least one service must be selected",
        },
      ],
    },
    {
      id: "outcome-summary",
      name: "outcomeSummary",
      label: "Outcome Summary",
      type: FieldType.TEXTAREA,
      placeholder: "Summarize the outcomes achieved through this case",
      required: true,
      section: "outcomes",
      order: 2,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Outcome summary is required",
        },
        {
          type: ValidationRuleType.MIN_LENGTH,
          value: 50,
          message:
            "Please provide a detailed outcome summary (minimum 50 characters)",
        },
      ],
    },
    {
      id: "beneficiary-satisfaction",
      name: "beneficiarySatisfaction",
      label: "Beneficiary Satisfaction Level",
      type: FieldType.SELECT,
      required: true,
      section: "outcomes",
      order: 3,
      width: "half",
      options: [
        { value: "5", label: "Very Satisfied" },
        { value: "4", label: "Satisfied" },
        { value: "3", label: "Neutral" },
        { value: "2", label: "Dissatisfied" },
        { value: "1", label: "Very Dissatisfied" },
        { value: "0", label: "Not Applicable" },
      ],
    },
    {
      id: "goals-achieved",
      name: "goalsAchieved",
      label: "Goals Achieved",
      type: FieldType.SELECT,
      required: true,
      section: "outcomes",
      order: 4,
      width: "half",
      options: [
        { value: "fully", label: "Fully Achieved" },
        { value: "mostly", label: "Mostly Achieved" },
        { value: "partially", label: "Partially Achieved" },
        { value: "minimally", label: "Minimally Achieved" },
        { value: "not", label: "Not Achieved" },
      ],
    },
    {
      id: "follow-up-required",
      name: "followUpRequired",
      label: "Follow-up Required",
      type: FieldType.RADIO,
      required: true,
      section: "follow-up",
      order: 1,
      width: "full",
      options: [
        { value: "yes", label: "Yes" },
        { value: "no", label: "No" },
      ],
    },
    {
      id: "follow-up-type",
      name: "followUpType",
      label: "Type of Follow-up",
      type: FieldType.MULTISELECT,
      required: false,
      section: "follow-up",
      order: 2,
      width: "full",
      options: [
        { value: "phone", label: "Phone Check-in" },
        { value: "visit", label: "Home Visit" },
        { value: "maintenance", label: "Equipment Maintenance" },
        { value: "referral", label: "Referral to Other Services" },
        { value: "other", label: "Other" },
      ],
      conditional: {
        field: "followUpRequired",
        operator: "equals",
        value: "yes",
      },
    },
    {
      id: "follow-up-date",
      name: "followUpDate",
      label: "Follow-up Date",
      type: FieldType.DATE,
      required: false,
      section: "follow-up",
      order: 3,
      width: "half",
      conditional: {
        field: "followUpRequired",
        operator: "equals",
        value: "yes",
      },
      validation: [
        {
          type: ValidationRuleType.CUSTOM,
          value: (value: string) => {
            if (!value) return true;
            const followUpDate = new Date(value);
            const today = new Date();
            return followUpDate > today;
          },
          message: "Follow-up date must be in the future",
        },
      ],
    },
    {
      id: "follow-up-notes",
      name: "followUpNotes",
      label: "Follow-up Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter any specific instructions or notes for follow-up",
      required: false,
      section: "follow-up",
      order: 4,
      width: "full",
      conditional: {
        field: "followUpRequired",
        operator: "equals",
        value: "yes",
      },
    },
    {
      id: "closure-documents",
      name: "closureDocuments",
      label: "Closure Documents",
      type: FieldType.FILE,
      required: false,
      section: "documentation",
      order: 1,
      width: "full",
      helpText:
        "Upload any supporting documents for case closure (PDF/Image, max 10MB each)",
      multiple: true,
    },
    {
      id: "closure-signature",
      name: "closureSignature",
      label: "Authorized Signature",
      type: FieldType.SIGNATURE,
      required: true,
      section: "documentation",
      order: 2,
      width: "full",
      helpText: "Digital signature of authorized personnel",
    },
    {
      id: "closure-status",
      name: "closureStatus",
      label: "Closure Status",
      type: FieldType.HIDDEN,
      required: false,
      section: "documentation",
      order: 3,
      width: "full",
      defaultValue: "Pending",
    },
  ],
  dependencies: [],
  createdAt: new Date(),
  updatedAt: new Date(),
  isActive: true,
};

// Register form with the form registry
formRegistry.registerForm(
  {
    id: caseClosure.id,
    title: caseClosure.title,
    description: caseClosure.description,
    module: FormModule.CASE,
    clientTypes: caseClosure.clientTypes,
    permissions: caseClosure.permissions,
    dependencies: caseClosure.dependencies,
    version: caseClosure.version,
    path: "/case/closure",
    icon: "file-check",
    isActive: true,
  },
  caseClosure,
);
