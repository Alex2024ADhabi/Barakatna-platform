import {
  ClientType,
  FieldType,
  FormMetadata,
  FormModule,
  FormPermission,
  ValidationRuleType,
} from "../types";
import { formRegistry } from "../registry";

/**
 * Initial Assessment Form (F03.1)
 * Used to conduct initial assessment of beneficiary housing needs and conditions
 */
export const initialAssessmentForm: FormMetadata = {
  id: "initial-assessment-form",
  title: "Initial Assessment",
  description:
    "Conduct initial assessment of beneficiary housing needs and conditions",
  module: FormModule.ASSESSMENT,
  version: "1.0.0",
  permissions: {
    [FormPermission.VIEW]: [
      "admin",
      "manager",
      "assessment-specialist",
      "case-manager",
    ],
    [FormPermission.CREATE]: ["admin", "manager", "assessment-specialist"],
    [FormPermission.EDIT]: ["admin", "manager", "assessment-specialist"],
    [FormPermission.DELETE]: ["admin"],
    [FormPermission.APPROVE]: ["admin", "manager"],
    [FormPermission.REJECT]: ["admin", "manager"],
    [FormPermission.SUBMIT]: ["admin", "manager", "assessment-specialist"],
    [FormPermission.PRINT]: [
      "admin",
      "manager",
      "assessment-specialist",
      "case-manager",
    ],
    [FormPermission.EXPORT]: ["admin", "manager"],
  },
  clientTypes: [
    ClientType.FDF,
    ClientType.ADHA,
    ClientType.CASH,
    ClientType.OTHER,
  ],
  sections: [
    {
      id: "beneficiary-information",
      title: "Beneficiary Information",
      description: "Basic information about the beneficiary",
      order: 1,
      collapsible: false,
    },
    {
      id: "housing-information",
      title: "Housing Information",
      description: "Details about the beneficiary's current housing",
      order: 2,
      collapsible: false,
    },
    {
      id: "accessibility-needs",
      title: "Accessibility Needs",
      description: "Assessment of accessibility requirements",
      order: 3,
      collapsible: false,
    },
    {
      id: "room-assessment",
      title: "Room Assessment",
      description: "Assessment of individual rooms",
      order: 4,
      collapsible: true,
    },
    {
      id: "safety-assessment",
      title: "Safety Assessment",
      description: "Assessment of safety concerns",
      order: 5,
      collapsible: true,
    },
    {
      id: "recommendations",
      title: "Recommendations",
      description: "Recommended modifications and interventions",
      order: 6,
      collapsible: false,
    },
    {
      id: "assessment-details",
      title: "Assessment Details",
      description: "Details about the assessment process",
      order: 7,
      collapsible: true,
    },
  ],
  fields: [
    {
      id: "assessment-id",
      name: "assessmentId",
      label: "Assessment ID",
      type: FieldType.TEXT,
      readOnly: true,
      required: false,
      section: "beneficiary-information",
      order: 1,
      width: "full",
      helpText: "Auto-generated unique identifier (Format: ASM-YYYY-NNNNN)",
      defaultValue: "",
    },
    {
      id: "beneficiary-id",
      name: "beneficiaryId",
      label: "Beneficiary",
      type: FieldType.LOOKUP,
      required: true,
      section: "beneficiary-information",
      order: 2,
      width: "full",
      dataSource: {
        type: "api",
        source: "/api/v1/beneficiaries",
        valueField: "id",
        labelField: "fullName",
        filters: { status: "active" },
      },
    },
    {
      id: "beneficiary-name",
      name: "beneficiaryName",
      label: "Beneficiary Name",
      type: FieldType.TEXT,
      readOnly: true,
      required: false,
      section: "beneficiary-information",
      order: 3,
      width: "half",
      dependencies: [
        {
          type: "value",
          sourceField: "beneficiaryId",
          condition: "!!value",
          action: "fetchBeneficiaryName(value)",
        },
      ],
    },
    {
      id: "assessment-date",
      name: "assessmentDate",
      label: "Assessment Date",
      type: FieldType.DATE,
      required: true,
      section: "beneficiary-information",
      order: 4,
      width: "half",
      defaultValue: new Date().toISOString().split("T")[0],
      validation: [
        {
          type: ValidationRuleType.CUSTOM,
          value: (value: string) => {
            const assessDate = new Date(value);
            const today = new Date();
            return assessDate <= today;
          },
          message: "Assessment date cannot be in the future",
        },
      ],
    },
    {
      id: "case-id",
      name: "caseId",
      label: "Case Reference",
      type: FieldType.TEXT,
      readOnly: true,
      required: false,
      section: "beneficiary-information",
      order: 5,
      width: "half",
      dependencies: [
        {
          type: "value",
          sourceField: "beneficiaryId",
          condition: "!!value",
          action: "fetchCaseId(value)",
        },
      ],
    },
    {
      id: "assessment-type",
      name: "assessmentType",
      label: "Assessment Type",
      type: FieldType.SELECT,
      required: true,
      section: "beneficiary-information",
      order: 6,
      width: "half",
      options: [
        { value: "Initial", label: "Initial" },
        { value: "Follow-up", label: "Follow-up" },
        { value: "Reassessment", label: "Reassessment" },
        { value: "Post-Modification", label: "Post-Modification" },
      ],
      defaultValue: "Initial",
    },
    {
      id: "housing-type",
      name: "housingType",
      label: "Housing Type",
      type: FieldType.SELECT,
      required: true,
      section: "housing-information",
      order: 1,
      width: "half",
      options: [
        { value: "Villa", label: "Villa" },
        { value: "Apartment", label: "Apartment" },
        { value: "Traditional House", label: "Traditional House" },
        { value: "Other", label: "Other" },
      ],
    },
    {
      id: "housing-age",
      name: "housingAge",
      label: "Housing Age (Years)",
      type: FieldType.NUMBER,
      required: true,
      section: "housing-information",
      order: 2,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 0,
          message: "Housing age cannot be negative",
        },
      ],
    },
    {
      id: "number-of-floors",
      name: "numberOfFloors",
      label: "Number of Floors",
      type: FieldType.NUMBER,
      required: true,
      section: "housing-information",
      order: 3,
      width: "half",
      defaultValue: 1,
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 1,
          message: "Number of floors must be at least 1",
        },
      ],
    },
    {
      id: "number-of-bedrooms",
      name: "numberOfBedrooms",
      label: "Number of Bedrooms",
      type: FieldType.NUMBER,
      required: true,
      section: "housing-information",
      order: 4,
      width: "half",
      defaultValue: 1,
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 0,
          message: "Number of bedrooms cannot be negative",
        },
      ],
    },
    {
      id: "number-of-bathrooms",
      name: "numberOfBathrooms",
      label: "Number of Bathrooms",
      type: FieldType.NUMBER,
      required: true,
      section: "housing-information",
      order: 5,
      width: "half",
      defaultValue: 1,
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 0,
          message: "Number of bathrooms cannot be negative",
        },
      ],
    },
    {
      id: "has-stairs",
      name: "hasStairs",
      label: "Has Stairs",
      type: FieldType.CHECKBOX,
      required: true,
      section: "housing-information",
      order: 6,
      width: "half",
      defaultValue: false,
    },
    {
      id: "has-elevator",
      name: "hasElevator",
      label: "Has Elevator",
      type: FieldType.CHECKBOX,
      required: true,
      section: "housing-information",
      order: 7,
      width: "half",
      defaultValue: false,
    },
    {
      id: "overall-condition",
      name: "overallCondition",
      label: "Overall Housing Condition",
      type: FieldType.SELECT,
      required: true,
      section: "housing-information",
      order: 8,
      width: "full",
      options: [
        { value: "Excellent", label: "Excellent" },
        { value: "Good", label: "Good" },
        { value: "Fair", label: "Fair" },
        { value: "Poor", label: "Poor" },
        { value: "Very Poor", label: "Very Poor" },
      ],
    },
    {
      id: "housing-notes",
      name: "housingNotes",
      label: "Housing Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter additional notes about the housing",
      required: false,
      section: "housing-information",
      order: 9,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 500,
          message: "Housing notes cannot exceed 500 characters",
        },
      ],
    },
    {
      id: "mobility-aids",
      name: "mobilityAids",
      label: "Mobility Aids Used",
      type: FieldType.MULTISELECT,
      required: true,
      section: "accessibility-needs",
      order: 1,
      width: "full",
      options: [
        { value: "None", label: "None" },
        { value: "Cane", label: "Cane" },
        { value: "Walker", label: "Walker" },
        { value: "Wheelchair", label: "Wheelchair" },
        { value: "Scooter", label: "Scooter" },
        { value: "Crutches", label: "Crutches" },
        { value: "Other", label: "Other" },
      ],
    },
    {
      id: "primary-accessibility-concerns",
      name: "primaryAccessibilityConcerns",
      label: "Primary Accessibility Concerns",
      type: FieldType.MULTISELECT,
      required: true,
      section: "accessibility-needs",
      order: 2,
      width: "full",
      options: [
        { value: "Bathroom Access", label: "Bathroom Access" },
        { value: "Kitchen Access", label: "Kitchen Access" },
        { value: "Bedroom Access", label: "Bedroom Access" },
        { value: "Entrance Access", label: "Entrance Access" },
        { value: "Stair Navigation", label: "Stair Navigation" },
        { value: "Doorway Width", label: "Doorway Width" },
        { value: "Floor Surfaces", label: "Floor Surfaces" },
        { value: "Reaching Items", label: "Reaching Items" },
        { value: "Other", label: "Other" },
      ],
    },
    {
      id: "bathroom-assessment",
      name: "bathroomAssessment",
      label: "Bathroom Assessment",
      type: FieldType.SELECT,
      required: true,
      section: "room-assessment",
      order: 1,
      width: "half",
      options: [
        { value: "Accessible", label: "Accessible" },
        {
          value: "Minor Modifications Needed",
          label: "Minor Modifications Needed",
        },
        {
          value: "Major Modifications Needed",
          label: "Major Modifications Needed",
        },
        { value: "Not Accessible", label: "Not Accessible" },
        { value: "Not Applicable", label: "Not Applicable" },
      ],
    },
    {
      id: "bathroom-notes",
      name: "bathroomNotes",
      label: "Bathroom Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about bathroom accessibility",
      required: false,
      section: "room-assessment",
      order: 2,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 300,
          message: "Bathroom notes cannot exceed 300 characters",
        },
      ],
    },
    {
      id: "kitchen-assessment",
      name: "kitchenAssessment",
      label: "Kitchen Assessment",
      type: FieldType.SELECT,
      required: true,
      section: "room-assessment",
      order: 3,
      width: "half",
      options: [
        { value: "Accessible", label: "Accessible" },
        {
          value: "Minor Modifications Needed",
          label: "Minor Modifications Needed",
        },
        {
          value: "Major Modifications Needed",
          label: "Major Modifications Needed",
        },
        { value: "Not Accessible", label: "Not Accessible" },
        { value: "Not Applicable", label: "Not Applicable" },
      ],
    },
    {
      id: "kitchen-notes",
      name: "kitchenNotes",
      label: "Kitchen Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about kitchen accessibility",
      required: false,
      section: "room-assessment",
      order: 4,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 300,
          message: "Kitchen notes cannot exceed 300 characters",
        },
      ],
    },
    {
      id: "bedroom-assessment",
      name: "bedroomAssessment",
      label: "Bedroom Assessment",
      type: FieldType.SELECT,
      required: true,
      section: "room-assessment",
      order: 5,
      width: "half",
      options: [
        { value: "Accessible", label: "Accessible" },
        {
          value: "Minor Modifications Needed",
          label: "Minor Modifications Needed",
        },
        {
          value: "Major Modifications Needed",
          label: "Major Modifications Needed",
        },
        { value: "Not Accessible", label: "Not Accessible" },
        { value: "Not Applicable", label: "Not Applicable" },
      ],
    },
    {
      id: "bedroom-notes",
      name: "bedroomNotes",
      label: "Bedroom Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about bedroom accessibility",
      required: false,
      section: "room-assessment",
      order: 6,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 300,
          message: "Bedroom notes cannot exceed 300 characters",
        },
      ],
    },
    {
      id: "entrance-assessment",
      name: "entranceAssessment",
      label: "Entrance Assessment",
      type: FieldType.SELECT,
      required: true,
      section: "room-assessment",
      order: 7,
      width: "half",
      options: [
        { value: "Accessible", label: "Accessible" },
        {
          value: "Minor Modifications Needed",
          label: "Minor Modifications Needed",
        },
        {
          value: "Major Modifications Needed",
          label: "Major Modifications Needed",
        },
        { value: "Not Accessible", label: "Not Accessible" },
        { value: "Not Applicable", label: "Not Applicable" },
      ],
    },
    {
      id: "entrance-notes",
      name: "entranceNotes",
      label: "Entrance Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about entrance accessibility",
      required: false,
      section: "room-assessment",
      order: 8,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 300,
          message: "Entrance notes cannot exceed 300 characters",
        },
      ],
    },
    {
      id: "living-area-assessment",
      name: "livingAreaAssessment",
      label: "Living Area Assessment",
      type: FieldType.SELECT,
      required: true,
      section: "room-assessment",
      order: 9,
      width: "half",
      options: [
        { value: "Accessible", label: "Accessible" },
        {
          value: "Minor Modifications Needed",
          label: "Minor Modifications Needed",
        },
        {
          value: "Major Modifications Needed",
          label: "Major Modifications Needed",
        },
        { value: "Not Accessible", label: "Not Accessible" },
        { value: "Not Applicable", label: "Not Applicable" },
      ],
    },
    {
      id: "living-area-notes",
      name: "livingAreaNotes",
      label: "Living Area Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about living area accessibility",
      required: false,
      section: "room-assessment",
      order: 10,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 300,
          message: "Living area notes cannot exceed 300 characters",
        },
      ],
    },
    {
      id: "fall-hazards",
      name: "fallHazards",
      label: "Fall Hazards Identified",
      type: FieldType.MULTISELECT,
      required: true,
      section: "safety-assessment",
      order: 1,
      width: "full",
      options: [
        { value: "None", label: "None" },
        { value: "Loose Rugs", label: "Loose Rugs" },
        { value: "Slippery Floors", label: "Slippery Floors" },
        { value: "Poor Lighting", label: "Poor Lighting" },
        { value: "Cluttered Pathways", label: "Cluttered Pathways" },
        { value: "Uneven Surfaces", label: "Uneven Surfaces" },
        { value: "Lack of Grab Bars", label: "Lack of Grab Bars" },
        { value: "Steep Stairs", label: "Steep Stairs" },
        { value: "Other", label: "Other" },
      ],
    },
    {
      id: "electrical-safety",
      name: "electricalSafety",
      label: "Electrical Safety Concerns",
      type: FieldType.MULTISELECT,
      required: true,
      section: "safety-assessment",
      order: 2,
      width: "full",
      options: [
        { value: "None", label: "None" },
        { value: "Exposed Wiring", label: "Exposed Wiring" },
        { value: "Overloaded Outlets", label: "Overloaded Outlets" },
        { value: "Damaged Fixtures", label: "Damaged Fixtures" },
        { value: "Inaccessible Controls", label: "Inaccessible Controls" },
        { value: "Other", label: "Other" },
      ],
    },
    {
      id: "safety-notes",
      name: "safetyNotes",
      label: "Safety Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter additional safety concerns or notes",
      required: false,
      section: "safety-assessment",
      order: 3,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 500,
          message: "Safety notes cannot exceed 500 characters",
        },
      ],
    },
    {
      id: "priority-modifications",
      name: "priorityModifications",
      label: "Priority Modifications",
      type: FieldType.MULTISELECT,
      required: true,
      section: "recommendations",
      order: 1,
      width: "full",
      options: [
        { value: "Bathroom Grab Bars", label: "Bathroom Grab Bars" },
        {
          value: "Shower/Tub Modifications",
          label: "Shower/Tub Modifications",
        },
        { value: "Toilet Modifications", label: "Toilet Modifications" },
        { value: "Ramps", label: "Ramps" },
        { value: "Doorway Widening", label: "Doorway Widening" },
        { value: "Flooring Replacement", label: "Flooring Replacement" },
        { value: "Kitchen Modifications", label: "Kitchen Modifications" },
        { value: "Lighting Improvements", label: "Lighting Improvements" },
        { value: "Stair Lift", label: "Stair Lift" },
        { value: "Elevator", label: "Elevator" },
        { value: "Other", label: "Other" },
      ],
    },
    {
      id: "modification-urgency",
      name: "modificationUrgency",
      label: "Modification Urgency",
      type: FieldType.SELECT,
      required: true,
      section: "recommendations",
      order: 2,
      width: "half",
      options: [
        { value: "Immediate", label: "Immediate" },
        { value: "High", label: "High" },
        { value: "Medium", label: "Medium" },
        { value: "Low", label: "Low" },
      ],
    },
    {
      id: "estimated-cost-range",
      name: "estimatedCostRange",
      label: "Estimated Cost Range",
      type: FieldType.SELECT,
      required: true,
      section: "recommendations",
      order: 3,
      width: "half",
      options: [
        { value: "Under 5,000 AED", label: "Under 5,000 AED" },
        { value: "5,000-15,000 AED", label: "5,000-15,000 AED" },
        { value: "15,000-30,000 AED", label: "15,000-30,000 AED" },
        { value: "30,000-50,000 AED", label: "30,000-50,000 AED" },
        { value: "Over 50,000 AED", label: "Over 50,000 AED" },
        {
          value: "Requires Detailed Estimate",
          label: "Requires Detailed Estimate",
        },
      ],
    },
    {
      id: "detailed-recommendations",
      name: "detailedRecommendations",
      label: "Detailed Recommendations",
      type: FieldType.TEXTAREA,
      placeholder: "Enter detailed recommendations for modifications",
      required: true,
      section: "recommendations",
      order: 4,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Detailed recommendations are required",
        },
        {
          type: ValidationRuleType.MIN_LENGTH,
          value: 50,
          message: "Detailed recommendations must be at least 50 characters",
        },
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 1000,
          message: "Detailed recommendations cannot exceed 1000 characters",
        },
      ],
    },
    {
      id: "assessor-name",
      name: "assessorName",
      label: "Assessor Name",
      type: FieldType.TEXT,
      required: true,
      section: "assessment-details",
      order: 1,
      width: "half",
      defaultValue: "", // Will be populated with current user name
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Assessor name is required",
        },
        {
          type: ValidationRuleType.MIN_LENGTH,
          value: 3,
          message: "Assessor name must be at least 3 characters",
        },
      ],
    },
    {
      id: "assessor-position",
      name: "assessorPosition",
      label: "Assessor Position",
      type: FieldType.TEXT,
      required: true,
      section: "assessment-details",
      order: 2,
      width: "half",
      defaultValue: "", // Will be populated with current user position
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Assessor position is required",
        },
        {
          type: ValidationRuleType.MIN_LENGTH,
          value: 3,
          message: "Assessor position must be at least 3 characters",
        },
      ],
    },
    {
      id: "assessment-duration",
      name: "assessmentDuration",
      label: "Assessment Duration (minutes)",
      type: FieldType.NUMBER,
      required: true,
      section: "assessment-details",
      order: 3,
      width: "half",
      defaultValue: 60,
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 1,
          message: "Assessment duration must be at least 1 minute",
        },
      ],
    },
    {
      id: "assessment-photos",
      name: "assessmentPhotos",
      label: "Assessment Photos",
      type: FieldType.IMAGE,
      required: false,
      section: "assessment-details",
      order: 4,
      width: "half",
      multiple: true,
      helpText: "Upload photos of areas requiring modification (max 10MB each)",
    },
    {
      id: "follow-up-required",
      name: "followUpRequired",
      label: "Follow-up Required",
      type: FieldType.CHECKBOX,
      required: true,
      section: "assessment-details",
      order: 5,
      width: "half",
      defaultValue: false,
    },
    {
      id: "follow-up-date",
      name: "followUpDate",
      label: "Follow-up Date",
      type: FieldType.DATE,
      required: false,
      section: "assessment-details",
      order: 6,
      width: "half",
      dependencies: [
        {
          type: "requirement",
          sourceField: "followUpRequired",
          condition: "value === true",
          action: "required = true",
        },
        {
          type: "visibility",
          sourceField: "followUpRequired",
          condition: "value === true",
          action: "visible = true",
        },
      ],
      validation: [
        {
          type: ValidationRuleType.CUSTOM,
          value: (value: string) => {
            if (!value) return true;
            const followUpDate = new Date(value);
            const today = new Date();
            return followUpDate > today;
          },
          message: "Follow-up date must be in the future",
        },
      ],
    },
    {
      id: "additional-notes",
      name: "additionalNotes",
      label: "Additional Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter any additional notes about the assessment",
      required: false,
      section: "assessment-details",
      order: 7,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 1000,
          message: "Additional notes cannot exceed 1000 characters",
        },
      ],
    },
  ],
  dependencies: [
    {
      formId: "beneficiary-assessment-eligibility-form",
      description:
        "Initial assessment must be linked to an eligible beneficiary",
      type: "prerequisite",
      required: true,
    },
  ],
  createdAt: new Date(),
  updatedAt: new Date(),
  isActive: true,
};

// Register form with the form registry
formRegistry.registerForm(
  {
    id: initialAssessmentForm.id,
    title: initialAssessmentForm.title,
    description: initialAssessmentForm.description,
    module: FormModule.ASSESSMENT,
    clientTypes: initialAssessmentForm.clientTypes,
    permissions: initialAssessmentForm.permissions,
    dependencies: initialAssessmentForm.dependencies,
    version: initialAssessmentForm.version,
    path: "/assessment/initial",
    icon: "clipboard-list",
    isActive: true,
  },
  initialAssessmentForm,
);
