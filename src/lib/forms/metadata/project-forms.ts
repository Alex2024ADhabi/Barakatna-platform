import {
  ClientType,
  FieldType,
  FormDependency,
  FormField,
  FormMetadata,
  FormModule,
  FormPermission,
  FormSection,
  ValidationRuleType,
} from "../types";
import { formRegistry } from "../registry";

/**
 * Project Creation Form Metadata
 *
 * This form is used to create a new project based on approved assessments.
 */
export const projectCreationFormMetadata: FormMetadata = {
  id: "project-creation-form",
  title: "Project Creation",
  description:
    "Create a new home modification project based on approved assessments",
  module: FormModule.PROJECT,
  version: "1.0.0",
  permissions: {
    [FormPermission.VIEW]: ["project-manager", "supervisor", "admin"],
    [FormPermission.CREATE]: ["project-manager", "admin"],
    [FormPermission.EDIT]: ["project-manager", "admin"],
    [FormPermission.DELETE]: ["admin"],
    [FormPermission.APPROVE]: ["supervisor", "admin"],
    [FormPermission.REJECT]: ["supervisor", "admin"],
    [FormPermission.SUBMIT]: ["project-manager", "admin"],
    [FormPermission.PRINT]: ["project-manager", "supervisor", "admin"],
    [FormPermission.EXPORT]: ["supervisor", "admin"],
  },
  clientTypes: [ClientType.FDF, ClientType.ADHA, ClientType.CASH],
  sections: [
    {
      id: "project-info",
      title: "Project Information",
      description: "Basic information about the project",
      order: 1,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "assessment-link",
      title: "Assessment Reference",
      description: "Link to the approved assessment",
      order: 2,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "timeline",
      title: "Project Timeline",
      description: "Timeline and milestones for the project",
      order: 3,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "budget",
      title: "Budget Information",
      description: "Budget allocation and cost estimates",
      order: 4,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "resources",
      title: "Resource Allocation",
      description: "Personnel and equipment allocation",
      order: 5,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "fdf-specific-project",
      title: "FDF Project Requirements",
      description: "FDF-specific project requirements",
      order: 6,
      collapsible: true,
      collapsed: false,
      clientTypes: [ClientType.FDF],
      conditional: {
        field: "clientType",
        operator: "equals",
        value: ClientType.FDF,
      },
    },
    {
      id: "adha-specific-project",
      title: "ADHA Project Requirements",
      description: "ADHA-specific project requirements",
      order: 7,
      collapsible: true,
      collapsed: false,
      clientTypes: [ClientType.ADHA],
      conditional: {
        field: "clientType",
        operator: "equals",
        value: ClientType.ADHA,
      },
    },
  ],
  fields: [
    // Project Information Section
    {
      id: "clientType",
      name: "clientType",
      label: "Client Type",
      type: FieldType.SELECT,
      section: "project-info",
      required: true,
      options: [
        { value: ClientType.FDF, label: "FDF" },
        { value: ClientType.ADHA, label: "ADHA" },
        { value: ClientType.CASH, label: "Cash Client" },
      ],
      order: 1,
      width: "half",
    },
    {
      id: "projectName",
      name: "projectName",
      label: "Project Name",
      type: FieldType.TEXT,
      section: "project-info",
      required: true,
      order: 2,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Project name is required",
        },
        {
          type: ValidationRuleType.MIN_LENGTH,
          value: 5,
          message: "Project name must be at least 5 characters",
        },
      ],
    },
    {
      id: "projectDescription",
      name: "projectDescription",
      label: "Project Description",
      type: FieldType.TEXTAREA,
      section: "project-info",
      required: true,
      order: 3,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Project description is required",
        },
      ],
    },
    {
      id: "projectManager",
      name: "projectManager",
      label: "Project Manager",
      type: FieldType.SELECT,
      section: "project-info",
      required: true,
      order: 4,
      width: "half",
      dataSource: {
        type: "api",
        source: "/api/users/project-managers",
        valueField: "id",
        labelField: "fullName",
        filters: { active: true },
      },
    },
    {
      id: "projectPriority",
      name: "projectPriority",
      label: "Project Priority",
      type: FieldType.SELECT,
      section: "project-info",
      required: true,
      options: [
        { value: "critical", label: "Critical" },
        { value: "high", label: "High" },
        { value: "medium", label: "Medium" },
        { value: "low", label: "Low" },
      ],
      order: 5,
      width: "half",
    },

    // Assessment Link Section
    {
      id: "initialAssessmentId",
      name: "initialAssessmentId",
      label: "Initial Assessment Reference",
      type: FieldType.REFERENCE,
      section: "assessment-link",
      required: true,
      order: 1,
      width: "full",
      dataSource: {
        type: "api",
        source: "/api/assessments/initial/list",
        valueField: "id",
        labelField: "title",
        filters: { status: "approved" },
        dependsOn: ["clientType"],
      },
    },
    {
      id: "roomAssessmentIds",
      name: "roomAssessmentIds",
      label: "Room Assessments",
      type: FieldType.MULTISELECT,
      section: "assessment-link",
      required: true,
      order: 2,
      width: "full",
      dataSource: {
        type: "api",
        source: "/api/assessments/room/list",
        valueField: "id",
        labelField: "title",
        filters: { status: "approved" },
        dependsOn: ["initialAssessmentId"],
      },
      dependencies: [
        {
          type: "visibility",
          sourceField: "initialAssessmentId",
          condition: "!!value",
          action: "visible = true",
        },
      ],
    },

    // Timeline Section
    {
      id: "startDate",
      name: "startDate",
      label: "Start Date",
      type: FieldType.DATE,
      section: "timeline",
      required: true,
      order: 1,
      width: "half",
    },
    {
      id: "estimatedEndDate",
      name: "estimatedEndDate",
      label: "Estimated End Date",
      type: FieldType.DATE,
      section: "timeline",
      required: true,
      order: 2,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.CUSTOM,
          value: "value > startDate",
          message: "End date must be after start date",
        },
      ],
      dependencies: [
        {
          type: "validation",
          sourceField: "startDate",
          condition: "!!value",
          action:
            "validation.push({ type: 'custom', value: 'value > startDate', message: 'End date must be after start date' })",
        },
      ],
    },
    {
      id: "milestones",
      name: "milestones",
      label: "Project Milestones",
      type: FieldType.REPEATER,
      section: "timeline",
      required: true,
      order: 3,
      width: "full",
      fields: [
        {
          id: "milestoneName",
          name: "milestoneName",
          label: "Milestone Name",
          type: FieldType.TEXT,
          required: true,
          width: "half",
        },
        {
          id: "milestoneDate",
          name: "milestoneDate",
          label: "Target Date",
          type: FieldType.DATE,
          required: true,
          width: "half",
        },
        {
          id: "milestoneDescription",
          name: "milestoneDescription",
          label: "Description",
          type: FieldType.TEXTAREA,
          required: false,
          width: "full",
        },
      ],
    },

    // Budget Section
    {
      id: "totalBudget",
      name: "totalBudget",
      label: "Total Budget (SAR)",
      type: FieldType.NUMBER,
      section: "budget",
      required: true,
      order: 1,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 0,
          message: "Budget cannot be negative",
        },
      ],
    },
    {
      id: "budgetSource",
      name: "budgetSource",
      label: "Budget Source",
      type: FieldType.SELECT,
      section: "budget",
      required: true,
      options: [
        { value: "fdf", label: "FDF Funding" },
        { value: "adha", label: "ADHA Funding" },
        { value: "private", label: "Private Payment" },
        { value: "mixed", label: "Mixed Sources" },
      ],
      order: 2,
      width: "half",
      dependencies: [
        {
          type: "options",
          sourceField: "clientType",
          condition: "value === 'FDF'",
          action:
            "options = options.filter(o => ['fdf', 'mixed'].includes(o.value))",
        },
        {
          type: "options",
          sourceField: "clientType",
          condition: "value === 'ADHA'",
          action:
            "options = options.filter(o => ['adha', 'mixed'].includes(o.value))",
        },
        {
          type: "options",
          sourceField: "clientType",
          condition: "value === 'CASH'",
          action:
            "options = options.filter(o => ['private'].includes(o.value))",
        },
      ],
    },
    {
      id: "costBreakdown",
      name: "costBreakdown",
      label: "Cost Breakdown",
      type: FieldType.REPEATER,
      section: "budget",
      required: true,
      order: 3,
      width: "full",
      fields: [
        {
          id: "costCategory",
          name: "costCategory",
          label: "Category",
          type: FieldType.SELECT,
          required: true,
          width: "third",
          options: [
            { value: "materials", label: "Materials" },
            { value: "labor", label: "Labor" },
            { value: "equipment", label: "Equipment" },
            { value: "permits", label: "Permits & Approvals" },
            { value: "other", label: "Other" },
          ],
        },
        {
          id: "costDescription",
          name: "costDescription",
          label: "Description",
          type: FieldType.TEXT,
          required: true,
          width: "third",
        },
        {
          id: "costAmount",
          name: "costAmount",
          label: "Amount (SAR)",
          type: FieldType.NUMBER,
          required: true,
          width: "third",
        },
      ],
      calculationFormula:
        "return items.reduce((sum, item) => sum + (Number(item.costAmount) || 0), 0);",
    },
    {
      id: "calculatedTotal",
      name: "calculatedTotal",
      label: "Calculated Total (SAR)",
      type: FieldType.CALCULATED,
      section: "budget",
      required: false,
      order: 4,
      width: "half",
      calculationFormula:
        "return values.costBreakdown ? values.costBreakdown.reduce((sum, item) => sum + (Number(item.costAmount) || 0), 0) : 0;",
      readOnly: true,
    },

    // Resource Allocation Section
    {
      id: "teamMembers",
      name: "teamMembers",
      label: "Team Members",
      type: FieldType.REPEATER,
      section: "resources",
      required: true,
      order: 1,
      width: "full",
      fields: [
        {
          id: "memberId",
          name: "memberId",
          label: "Team Member",
          type: FieldType.SELECT,
          required: true,
          width: "third",
          dataSource: {
            type: "api",
            source: "/api/users/team-members",
            valueField: "id",
            labelField: "fullName",
            filters: { active: true },
          },
        },
        {
          id: "memberRole",
          name: "memberRole",
          label: "Role",
          type: FieldType.SELECT,
          required: true,
          width: "third",
          options: [
            { value: "supervisor", label: "Supervisor" },
            { value: "contractor", label: "Contractor" },
            { value: "inspector", label: "Inspector" },
            { value: "specialist", label: "Specialist" },
          ],
        },
        {
          id: "allocationPercentage",
          name: "allocationPercentage",
          label: "Allocation %",
          type: FieldType.NUMBER,
          required: true,
          width: "third",
          validation: [
            {
              type: ValidationRuleType.MIN_VALUE,
              value: 1,
              message: "Allocation must be at least 1%",
            },
            {
              type: ValidationRuleType.MAX_VALUE,
              value: 100,
              message: "Allocation cannot exceed 100%",
            },
          ],
        },
      ],
    },
    {
      id: "equipmentNeeded",
      name: "equipmentNeeded",
      label: "Equipment Needed",
      type: FieldType.MULTISELECT,
      section: "resources",
      required: false,
      order: 2,
      width: "full",
      dataSource: {
        type: "api",
        source: "/api/equipment/available",
        valueField: "id",
        labelField: "name",
      },
    },

    // FDF-specific Section
    {
      id: "fdfProjectCode",
      name: "fdfProjectCode",
      label: "FDF Project Code",
      type: FieldType.TEXT,
      section: "fdf-specific-project",
      required: true,
      order: 1,
      width: "half",
      clientTypes: [ClientType.FDF],
      validation: [
        {
          type: ValidationRuleType.PATTERN,
          value: "^FDF-PRJ-\\d{6}$",
          message: "FDF Project Code must be in format FDF-PRJ-XXXXXX",
          clientTypes: [ClientType.FDF],
        },
      ],
    },
    {
      id: "fdfApprovalDocument",
      name: "fdfApprovalDocument",
      label: "FDF Approval Document",
      type: FieldType.FILE,
      section: "fdf-specific-project",
      required: true,
      order: 2,
      width: "half",
      clientTypes: [ClientType.FDF],
    },

    // ADHA-specific Section
    {
      id: "adhaProjectReference",
      name: "adhaProjectReference",
      label: "ADHA Project Reference",
      type: FieldType.TEXT,
      section: "adha-specific-project",
      required: true,
      order: 1,
      width: "half",
      clientTypes: [ClientType.ADHA],
      validation: [
        {
          type: ValidationRuleType.PATTERN,
          value: "^ADHA-PRJ-\\d{8}$",
          message: "ADHA Project Reference must be in format ADHA-PRJ-XXXXXXXX",
          clientTypes: [ClientType.ADHA],
        },
      ],
    },
    {
      id: "adhaApprovalDate",
      name: "adhaApprovalDate",
      label: "ADHA Approval Date",
      type: FieldType.DATE,
      section: "adha-specific-project",
      required: true,
      order: 2,
      width: "half",
      clientTypes: [ClientType.ADHA],
    },
  ],
  dependencies: [
    {
      formId: "initial-assessment-form",
      description: "Project creation requires an approved initial assessment",
      type: "prerequisite",
      required: true,
    },
    {
      formId: "room-assessment-form",
      description:
        "Project creation requires at least one approved room assessment",
      type: "prerequisite",
      required: true,
    },
  ],
  submitEndpoint: "/api/projects",
  fetchDataEndpoint: "/api/projects/{id}",
  clientTypeOverrides: {
    [ClientType.FDF]: {
      title: "FDF Project Creation",
      submitEndpoint: "/api/projects/fdf",
    },
    [ClientType.ADHA]: {
      title: "ADHA Project Creation",
      submitEndpoint: "/api/projects/adha",
    },
    [ClientType.CASH]: {
      title: "Cash Client Project Creation",
      submitEndpoint: "/api/projects/cash",
    },
  },
  createdAt: new Date(),
  updatedAt: new Date(),
  isActive: true,
};

/**
 * Project Schedule Form
 * Used for creating and managing project schedules
 */
export const projectScheduleForm: FormMetadata = {
  id: "project-schedule-form",
  title: "Project Schedule",
  description: "Create and manage project schedules and timelines",
  module: FormModule.PROJECT,
  version: "1.0.0",
  permissions: {
    [FormPermission.VIEW]: [
      "admin",
      "project-manager",
      "supervisor",
      "contractor",
    ],
    [FormPermission.CREATE]: ["admin", "project-manager"],
    [FormPermission.EDIT]: ["admin", "project-manager"],
    [FormPermission.DELETE]: ["admin"],
    [FormPermission.APPROVE]: ["admin", "supervisor"],
    [FormPermission.REJECT]: ["admin", "supervisor"],
    [FormPermission.SUBMIT]: ["admin", "project-manager"],
    [FormPermission.PRINT]: ["admin", "project-manager", "supervisor"],
    [FormPermission.EXPORT]: ["admin", "project-manager", "supervisor"],
  },
  clientTypes: [ClientType.FDF, ClientType.ADHA, ClientType.CASH],
  sections: [
    {
      id: "project-info",
      title: "Project Information",
      description: "Basic information about the project",
      order: 1,
      collapsible: false,
    },
    {
      id: "schedule-details",
      title: "Schedule Details",
      description: "Detailed project schedule information",
      order: 2,
      collapsible: false,
    },
    {
      id: "phases",
      title: "Project Phases",
      description: "Define project phases and timelines",
      order: 3,
      collapsible: false,
    },
    {
      id: "tasks",
      title: "Tasks and Activities",
      description: "Define specific tasks within each phase",
      order: 4,
      collapsible: false,
    },
    {
      id: "dependencies",
      title: "Task Dependencies",
      description: "Define dependencies between tasks",
      order: 5,
      collapsible: true,
    },
    {
      id: "milestones",
      title: "Milestones",
      description: "Key project milestones",
      order: 6,
      collapsible: true,
    },
  ],
  fields: [
    // Project Information Section
    {
      id: "project-id",
      name: "projectId",
      label: "Project",
      type: FieldType.SELECT,
      required: true,
      section: "project-info",
      order: 1,
      width: "full",
      dataSource: {
        type: "api",
        source: "/api/projects",
        valueField: "id",
        labelField: "projectName",
        filters: { status: "active" },
      },
    },
    {
      id: "schedule-name",
      name: "scheduleName",
      label: "Schedule Name",
      type: FieldType.TEXT,
      required: true,
      section: "project-info",
      order: 2,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Schedule name is required",
        },
      ],
    },
    {
      id: "schedule-version",
      name: "scheduleVersion",
      label: "Version",
      type: FieldType.TEXT,
      required: true,
      section: "project-info",
      order: 3,
      width: "half",
      defaultValue: "1.0",
    },
    {
      id: "schedule-status",
      name: "scheduleStatus",
      label: "Status",
      type: FieldType.SELECT,
      required: true,
      section: "project-info",
      order: 4,
      width: "half",
      options: [
        { value: "draft", label: "Draft" },
        { value: "in-review", label: "In Review" },
        { value: "approved", label: "Approved" },
        { value: "active", label: "Active" },
        { value: "superseded", label: "Superseded" },
      ],
      defaultValue: "draft",
    },

    // Schedule Details Section
    {
      id: "start-date",
      name: "startDate",
      label: "Start Date",
      type: FieldType.DATE,
      required: true,
      section: "schedule-details",
      order: 1,
      width: "half",
    },
    {
      id: "end-date",
      name: "endDate",
      label: "End Date",
      type: FieldType.DATE,
      required: true,
      section: "schedule-details",
      order: 2,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.CUSTOM,
          value: "value > startDate",
          message: "End date must be after start date",
        },
      ],
      dependencies: [
        {
          type: "validation",
          sourceField: "startDate",
          condition: "!!value",
          action:
            "validation.push({ type: 'custom', value: 'value > startDate', message: 'End date must be after start date' })",
        },
      ],
    },
    {
      id: "working-days",
      name: "workingDays",
      label: "Working Days",
      type: FieldType.MULTISELECT,
      required: true,
      section: "schedule-details",
      order: 3,
      width: "half",
      options: [
        { value: "sunday", label: "Sunday" },
        { value: "monday", label: "Monday" },
        { value: "tuesday", label: "Tuesday" },
        { value: "wednesday", label: "Wednesday" },
        { value: "thursday", label: "Thursday" },
        { value: "friday", label: "Friday" },
        { value: "saturday", label: "Saturday" },
      ],
      defaultValue: ["sunday", "monday", "tuesday", "wednesday", "thursday"],
    },
    {
      id: "working-hours",
      name: "workingHours",
      label: "Working Hours Per Day",
      type: FieldType.NUMBER,
      required: true,
      section: "schedule-details",
      order: 4,
      width: "half",
      defaultValue: 8,
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 1,
          message: "Working hours must be at least 1",
        },
        {
          type: ValidationRuleType.MAX_VALUE,
          value: 24,
          message: "Working hours cannot exceed 24",
        },
      ],
    },
    {
      id: "schedule-notes",
      name: "scheduleNotes",
      label: "Schedule Notes",
      type: FieldType.TEXTAREA,
      required: false,
      section: "schedule-details",
      order: 5,
      width: "full",
      placeholder: "Additional notes about the schedule",
    },

    // Project Phases Section
    {
      id: "project-phases",
      name: "projectPhases",
      label: "Project Phases",
      type: FieldType.REPEATER,
      required: true,
      section: "phases",
      order: 1,
      width: "full",
      fields: [
        {
          id: "phase-name",
          name: "phaseName",
          label: "Phase Name",
          type: FieldType.TEXT,
          required: true,
          width: "third",
        },
        {
          id: "phase-start-date",
          name: "phaseStartDate",
          label: "Start Date",
          type: FieldType.DATE,
          required: true,
          width: "third",
        },
        {
          id: "phase-end-date",
          name: "phaseEndDate",
          label: "End Date",
          type: FieldType.DATE,
          required: true,
          width: "third",
        },
        {
          id: "phase-description",
          name: "phaseDescription",
          label: "Description",
          type: FieldType.TEXTAREA,
          required: false,
          width: "full",
        },
      ],
    },

    // Tasks and Activities Section
    {
      id: "project-tasks",
      name: "projectTasks",
      label: "Project Tasks",
      type: FieldType.REPEATER,
      required: true,
      section: "tasks",
      order: 1,
      width: "full",
      fields: [
        {
          id: "task-id",
          name: "taskId",
          label: "Task ID",
          type: FieldType.TEXT,
          required: true,
          width: "sixth",
        },
        {
          id: "task-name",
          name: "taskName",
          label: "Task Name",
          type: FieldType.TEXT,
          required: true,
          width: "third",
        },
        {
          id: "task-phase",
          name: "taskPhase",
          label: "Phase",
          type: FieldType.SELECT,
          required: true,
          width: "sixth",
          options: [],
          dynamicOptions: {
            sourceField: "projectPhases",
            valueProperty: "phaseName",
            labelProperty: "phaseName",
          },
        },
        {
          id: "task-start-date",
          name: "taskStartDate",
          label: "Start Date",
          type: FieldType.DATE,
          required: true,
          width: "sixth",
        },
        {
          id: "task-end-date",
          name: "taskEndDate",
          label: "End Date",
          type: FieldType.DATE,
          required: true,
          width: "sixth",
        },
        {
          id: "task-duration",
          name: "taskDuration",
          label: "Duration (Days)",
          type: FieldType.NUMBER,
          required: true,
          width: "sixth",
          validation: [
            {
              type: ValidationRuleType.MIN_VALUE,
              value: 1,
              message: "Duration must be at least 1 day",
            },
          ],
        },
        {
          id: "task-assignee",
          name: "taskAssignee",
          label: "Assignee",
          type: FieldType.SELECT,
          required: false,
          width: "third",
          dataSource: {
            type: "api",
            source: "/api/users/team-members",
            valueField: "id",
            labelField: "fullName",
            filters: { active: true },
          },
        },
        {
          id: "task-status",
          name: "taskStatus",
          label: "Status",
          type: FieldType.SELECT,
          required: true,
          width: "sixth",
          options: [
            { value: "not-started", label: "Not Started" },
            { value: "in-progress", label: "In Progress" },
            { value: "completed", label: "Completed" },
            { value: "delayed", label: "Delayed" },
            { value: "on-hold", label: "On Hold" },
          ],
          defaultValue: "not-started",
        },
        {
          id: "task-description",
          name: "taskDescription",
          label: "Description",
          type: FieldType.TEXTAREA,
          required: false,
          width: "full",
        },
      ],
    },

    // Task Dependencies Section
    {
      id: "task-dependencies",
      name: "taskDependencies",
      label: "Task Dependencies",
      type: FieldType.REPEATER,
      required: false,
      section: "dependencies",
      order: 1,
      width: "full",
      fields: [
        {
          id: "source-task",
          name: "sourceTask",
          label: "Source Task",
          type: FieldType.SELECT,
          required: true,
          width: "third",
          options: [],
          dynamicOptions: {
            sourceField: "projectTasks",
            valueProperty: "taskId",
            labelProperty: "taskName",
          },
        },
        {
          id: "dependency-type",
          name: "dependencyType",
          label: "Dependency Type",
          type: FieldType.SELECT,
          required: true,
          width: "third",
          options: [
            { value: "finish-to-start", label: "Finish to Start" },
            { value: "start-to-start", label: "Start to Start" },
            { value: "finish-to-finish", label: "Finish to Finish" },
            { value: "start-to-finish", label: "Start to Finish" },
          ],
          defaultValue: "finish-to-start",
        },
        {
          id: "target-task",
          name: "targetTask",
          label: "Target Task",
          type: FieldType.SELECT,
          required: true,
          width: "third",
          options: [],
          dynamicOptions: {
            sourceField: "projectTasks",
            valueProperty: "taskId",
            labelProperty: "taskName",
          },
        },
        {
          id: "lag-time",
          name: "lagTime",
          label: "Lag Time (Days)",
          type: FieldType.NUMBER,
          required: false,
          width: "half",
          defaultValue: 0,
        },
        {
          id: "dependency-notes",
          name: "dependencyNotes",
          label: "Notes",
          type: FieldType.TEXT,
          required: false,
          width: "half",
        },
      ],
    },

    // Milestones Section
    {
      id: "project-milestones",
      name: "projectMilestones",
      label: "Project Milestones",
      type: FieldType.REPEATER,
      required: false,
      section: "milestones",
      order: 1,
      width: "full",
      fields: [
        {
          id: "milestone-name",
          name: "milestoneName",
          label: "Milestone Name",
          type: FieldType.TEXT,
          required: true,
          width: "third",
        },
        {
          id: "milestone-date",
          name: "milestoneDate",
          label: "Date",
          type: FieldType.DATE,
          required: true,
          width: "third",
        },
        {
          id: "milestone-type",
          name: "milestoneType",
          label: "Type",
          type: FieldType.SELECT,
          required: true,
          width: "third",
          options: [
            { value: "project-start", label: "Project Start" },
            { value: "phase-completion", label: "Phase Completion" },
            { value: "deliverable", label: "Deliverable" },
            { value: "review", label: "Review" },
            { value: "approval", label: "Approval" },
            { value: "payment", label: "Payment" },
            { value: "project-end", label: "Project End" },
          ],
        },
        {
          id: "milestone-description",
          name: "milestoneDescription",
          label: "Description",
          type: FieldType.TEXTAREA,
          required: false,
          width: "full",
        },
      ],
    },
  ],
  dependencies: [
    {
      formId: "project-creation-form",
      description: "Project schedule requires an existing project",
      type: "prerequisite",
      required: true,
    },
  ],
  submitEndpoint: "/api/projects/schedules",
  fetchDataEndpoint: "/api/projects/schedules/{id}",
  createdAt: new Date(),
  updatedAt: new Date(),
  isActive: true,
};

/**
 * Resource Allocation Form
 * Used for allocating resources to projects
 */
export const resourceAllocationForm: FormMetadata = {
  id: "resource-allocation-form",
  title: "Resource Allocation",
  description: "Allocate human and material resources to projects",
  module: FormModule.PROJECT,
  version: "1.0.0",
  permissions: {
    [FormPermission.VIEW]: [
      "admin",
      "project-manager",
      "supervisor",
      "resource-manager",
    ],
    [FormPermission.CREATE]: ["admin", "project-manager", "resource-manager"],
    [FormPermission.EDIT]: ["admin", "project-manager", "resource-manager"],
    [FormPermission.DELETE]: ["admin"],
    [FormPermission.APPROVE]: ["admin", "supervisor"],
    [FormPermission.REJECT]: ["admin", "supervisor"],
    [FormPermission.SUBMIT]: ["admin", "project-manager", "resource-manager"],
    [FormPermission.PRINT]: ["admin", "project-manager", "supervisor"],
    [FormPermission.EXPORT]: ["admin", "project-manager", "supervisor"],
  },
  clientTypes: [ClientType.FDF, ClientType.ADHA, ClientType.CASH],
  sections: [
    {
      id: "project-info",
      title: "Project Information",
      description: "Basic information about the project",
      order: 1,
      collapsible: false,
    },
    {
      id: "human-resources",
      title: "Human Resources",
      description: "Allocation of team members to the project",
      order: 2,
      collapsible: false,
    },
    {
      id: "equipment-resources",
      title: "Equipment Resources",
      description: "Allocation of equipment to the project",
      order: 3,
      collapsible: false,
    },
    {
      id: "material-resources",
      title: "Material Resources",
      description: "Allocation of materials to the project",
      order: 4,
      collapsible: false,
    },
    {
      id: "resource-conflicts",
      title: "Resource Conflicts",
      description: "Identify and resolve resource conflicts",
      order: 5,
      collapsible: true,
    },
  ],
  fields: [
    // Project Information Section
    {
      id: "project-id",
      name: "projectId",
      label: "Project",
      type: FieldType.SELECT,
      required: true,
      section: "project-info",
      order: 1,
      width: "full",
      dataSource: {
        type: "api",
        source: "/api/projects",
        valueField: "id",
        labelField: "projectName",
        filters: { status: "active" },
      },
    },
    {
      id: "allocation-period-start",
      name: "allocationPeriodStart",
      label: "Allocation Period Start",
      type: FieldType.DATE,
      required: true,
      section: "project-info",
      order: 2,
      width: "half",
    },
    {
      id: "allocation-period-end",
      name: "allocationPeriodEnd",
      label: "Allocation Period End",
      type: FieldType.DATE,
      required: true,
      section: "project-info",
      order: 3,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.CUSTOM,
          value: "value > allocationPeriodStart",
          message: "End date must be after start date",
        },
      ],
      dependencies: [
        {
          type: "validation",
          sourceField: "allocationPeriodStart",
          condition: "!!value",
          action:
            "validation.push({ type: 'custom', value: 'value > allocationPeriodStart', message: 'End date must be after start date' })",
        },
      ],
    },
    {
      id: "allocation-notes",
      name: "allocationNotes",
      label: "Allocation Notes",
      type: FieldType.TEXTAREA,
      required: false,
      section: "project-info",
      order: 4,
      width: "full",
      placeholder: "General notes about this resource allocation",
    },

    // Human Resources Section
    {
      id: "team-members",
      name: "teamMembers",
      label: "Team Members",
      type: FieldType.REPEATER,
      required: true,
      section: "human-resources",
      order: 1,
      width: "full",
      fields: [
        {
          id: "member-id",
          name: "memberId",
          label: "Team Member",
          type: FieldType.SELECT,
          required: true,
          width: "third",
          dataSource: {
            type: "api",
            source: "/api/users/team-members",
            valueField: "id",
            labelField: "fullName",
            filters: { active: true },
          },
        },
        {
          id: "role",
          name: "role",
          label: "Project Role",
          type: FieldType.SELECT,
          required: true,
          width: "third",
          options: [
            { value: "project-manager", label: "Project Manager" },
            { value: "supervisor", label: "Supervisor" },
            { value: "contractor", label: "Contractor" },
            { value: "inspector", label: "Inspector" },
            { value: "specialist", label: "Specialist" },
            { value: "laborer", label: "Laborer" },
            { value: "other", label: "Other" },
          ],
        },
        {
          id: "allocation-percentage",
          name: "allocationPercentage",
          label: "Allocation %",
          type: FieldType.NUMBER,
          required: true,
          width: "sixth",
          validation: [
            {
              type: ValidationRuleType.MIN_VALUE,
              value: 1,
              message: "Allocation must be at least 1%",
            },
            {
              type: ValidationRuleType.MAX_VALUE,
              value: 100,
              message: "Allocation cannot exceed 100%",
            },
          ],
        },
        {
          id: "start-date",
          name: "startDate",
          label: "Start Date",
          type: FieldType.DATE,
          required: true,
          width: "sixth",
        },
        {
          id: "end-date",
          name: "endDate",
          label: "End Date",
          type: FieldType.DATE,
          required: true,
          width: "sixth",
        },
        {
          id: "skills-required",
          name: "skillsRequired",
          label: "Skills Required",
          type: FieldType.MULTISELECT,
          required: false,
          width: "half",
          options: [
            { value: "carpentry", label: "Carpentry" },
            { value: "plumbing", label: "Plumbing" },
            { value: "electrical", label: "Electrical" },
            { value: "masonry", label: "Masonry" },
            { value: "painting", label: "Painting" },
            { value: "flooring", label: "Flooring" },
            { value: "project-management", label: "Project Management" },
            { value: "inspection", label: "Inspection" },
          ],
        },
        {
          id: "notes",
          name: "notes",
          label: "Notes",
          type: FieldType.TEXT,
          required: false,
          width: "half",
        },
      ],
    },

    // Equipment Resources Section
    {
      id: "equipment-resources",
      name: "equipmentResources",
      label: "Equipment Resources",
      type: FieldType.REPEATER,
      required: false,
      section: "equipment-resources",
      order: 1,
      width: "full",
      fields: [
        {
          id: "equipment-id",
          name: "equipmentId",
          label: "Equipment",
          type: FieldType.SELECT,
          required: true,
          width: "third",
          dataSource: {
            type: "api",
            source: "/api/equipment",
            valueField: "id",
            labelField: "name",
            filters: { status: "available" },
          },
        },
        {
          id: "quantity",
          name: "quantity",
          label: "Quantity",
          type: FieldType.NUMBER,
          required: true,
          width: "sixth",
          validation: [
            {
              type: ValidationRuleType.MIN_VALUE,
              value: 1,
              message: "Quantity must be at least 1",
            },
          ],
        },
        {
          id: "start-date",
          name: "startDate",
          label: "Start Date",
          type: FieldType.DATE,
          required: true,
          width: "sixth",
        },
        {
          id: "end-date",
          name: "endDate",
          label: "End Date",
          type: FieldType.DATE,
          required: true,
          width: "sixth",
        },
        {
          id: "usage-hours-per-day",
          name: "usageHoursPerDay",
          label: "Usage Hours/Day",
          type: FieldType.NUMBER,
          required: false,
          width: "sixth",
          validation: [
            {
              type: ValidationRuleType.MIN_VALUE,
              value: 1,
              message: "Hours must be at least 1",
            },
            {
              type: ValidationRuleType.MAX_VALUE,
              value: 24,
              message: "Hours cannot exceed 24",
            },
          ],
        },
        {
          id: "notes",
          name: "notes",
          label: "Notes",
          type: FieldType.TEXT,
          required: false,
          width: "third",
        },
      ],
    },

    // Material Resources Section
    {
      id: "material-resources",
      name: "materialResources",
      label: "Material Resources",
      type: FieldType.REPEATER,
      required: false,
      section: "material-resources",
      order: 1,
      width: "full",
      fields: [
        {
          id: "material-id",
          name: "materialId",
          label: "Material",
          type: FieldType.SELECT,
          required: true,
          width: "third",
          dataSource: {
            type: "api",
            source: "/api/materials",
            valueField: "id",
            labelField: "name",
            filters: { status: "available" },
          },
        },
        {
          id: "quantity",
          name: "quantity",
          label: "Quantity",
          type: FieldType.NUMBER,
          required: true,
          width: "sixth",
          validation: [
            {
              type: ValidationRuleType.MIN_VALUE,
              value: 0.01,
              message: "Quantity must be greater than 0",
            },
          ],
        },
        {
          id: "unit",
          name: "unit",
          label: "Unit",
          type: FieldType.SELECT,
          required: true,
          width: "sixth",
          options: [
            { value: "each", label: "Each" },
            { value: "kg", label: "Kilogram" },
            { value: "m", label: "Meter" },
            { value: "m2", label: "Square Meter" },
            { value: "m3", label: "Cubic Meter" },
            { value: "liter", label: "Liter" },
            { value: "set", label: "Set" },
            { value: "box", label: "Box" },
          ],
        },
        {
          id: "required-by-date",
          name: "requiredByDate",
          label: "Required By",
          type: FieldType.DATE,
          required: true,
          width: "sixth",
        },
        {
          id: "procurement-status",
          name: "procurementStatus",
          label: "Procurement Status",
          type: FieldType.SELECT,
          required: true,
          width: "sixth",
          options: [
            { value: "not-ordered", label: "Not Ordered" },
            { value: "ordered", label: "Ordered" },
            { value: "partially-received", label: "Partially Received" },
            { value: "received", label: "Received" },
          ],
          defaultValue: "not-ordered",
        },
        {
          id: "notes",
          name: "notes",
          label: "Notes",
          type: FieldType.TEXT,
          required: false,
          width: "third",
        },
      ],
    },

    // Resource Conflicts Section
    {
      id: "resource-conflicts",
      name: "resourceConflicts",
      label: "Resource Conflicts",
      type: FieldType.REPEATER,
      required: false,
      section: "resource-conflicts",
      order: 1,
      width: "full",
      fields: [
        {
          id: "conflict-type",
          name: "conflictType",
          label: "Conflict Type",
          type: FieldType.SELECT,
          required: true,
          width: "third",
          options: [
            { value: "human-resource", label: "Human Resource" },
            { value: "equipment", label: "Equipment" },
            { value: "material", label: "Material" },
          ],
        },
        {
          id: "resource-id",
          name: "resourceId",
          label: "Resource",
          type: FieldType.TEXT,
          required: true,
          width: "third",
        },
        {
          id: "conflict-description",
          name: "conflictDescription",
          label: "Conflict Description",
          type: FieldType.TEXTAREA,
          required: true,
          width: "third",
        },
        {
          id: "resolution-strategy",
          name: "resolutionStrategy",
          label: "Resolution Strategy",
          type: FieldType.SELECT,
          required: true,
          width: "third",
          options: [
            { value: "reschedule", label: "Reschedule" },
            {
              value: "additional-resource",
              label: "Acquire Additional Resource",
            },
            {
              value: "alternative-resource",
              label: "Use Alternative Resource",
            },
            { value: "split-allocation", label: "Split Allocation" },
            { value: "reduce-scope", label: "Reduce Scope" },
          ],
        },
        {
          id: "resolution-details",
          name: "resolutionDetails",
          label: "Resolution Details",
          type: FieldType.TEXTAREA,
          required: false,
          width: "third",
        },
        {
          id: "resolution-status",
          name: "resolutionStatus",
          label: "Resolution Status",
          type: FieldType.SELECT,
          required: true,
          width: "third",
          options: [
            { value: "pending", label: "Pending" },
            { value: "in-progress", label: "In Progress" },
            { value: "resolved", label: "Resolved" },
            { value: "escalated", label: "Escalated" },
          ],
          defaultValue: "pending",
        },
      ],
    },
  ],
  dependencies: [
    {
      formId: "project-creation-form",
      description: "Resource allocation requires an existing project",
      type: "prerequisite",
      required: true,
    },
  ],
  submitEndpoint: "/api/projects/resources",
  fetchDataEndpoint: "/api/projects/resources/{id}",
  createdAt: new Date(),
  updatedAt: new Date(),
  isActive: true,
};

/**
 * Project Status Update Form
 * Used for reporting project status and progress
 */
export const projectStatusUpdateForm: FormMetadata = {
  id: "project-status-update-form",
  title: "Project Status Update",
  description: "Report project status and progress",
  module: FormModule.PROJECT,
  version: "1.0.0",
  permissions: {
    [FormPermission.VIEW]: [
      "admin",
      "project-manager",
      "supervisor",
      "contractor",
    ],
    [FormPermission.CREATE]: ["admin", "project-manager", "contractor"],
    [FormPermission.EDIT]: ["admin", "project-manager"],
    [FormPermission.DELETE]: ["admin"],
    [FormPermission.APPROVE]: ["admin", "supervisor"],
    [FormPermission.REJECT]: ["admin", "supervisor"],
    [FormPermission.SUBMIT]: ["admin", "project-manager", "contractor"],
    [FormPermission.PRINT]: ["admin", "project-manager", "supervisor"],
    [FormPermission.EXPORT]: ["admin", "project-manager", "supervisor"],
  },
  clientTypes: [ClientType.FDF, ClientType.ADHA, ClientType.CASH],
  sections: [
    {
      id: "update-info",
      title: "Update Information",
      description: "Basic information about this status update",
      order: 1,
      collapsible: false,
    },
    {
      id: "overall-status",
      title: "Overall Status",
      description: "Overall project status summary",
      order: 2,
      collapsible: false,
    },
    {
      id: "progress-tracking",
      title: "Progress Tracking",
      description: "Detailed progress tracking by task",
      order: 3,
      collapsible: false,
    },
    {
      id: "issues-risks",
      title: "Issues and Risks",
      description: "Current issues and potential risks",
      order: 4,
      collapsible: false,
    },
    {
      id: "next-steps",
      title: "Next Steps",
      description: "Upcoming activities and milestones",
      order: 5,
      collapsible: false,
    },
    {
      id: "attachments",
      title: "Attachments",
      description: "Supporting documents and photos",
      order: 6,
      collapsible: true,
    },
  ],
  fields: [
    // Update Information Section
    {
      id: "project-id",
      name: "projectId",
      label: "Project",
      type: FieldType.SELECT,
      required: true,
      section: "update-info",
      order: 1,
      width: "full",
      dataSource: {
        type: "api",
        source: "/api/projects",
        valueField: "id",
        labelField: "projectName",
        filters: { status: "active" },
      },
    },
    {
      id: "update-date",
      name: "updateDate",
      label: "Update Date",
      type: FieldType.DATE,
      required: true,
      section: "update-info",
      order: 2,
      width: "half",
      defaultValue: new Date().toISOString().split("T")[0],
    },
    {
      id: "reporting-period",
      name: "reportingPeriod",
      label: "Reporting Period",
      type: FieldType.SELECT,
      required: true,
      section: "update-info",
      order: 3,
      width: "half",
      options: [
        { value: "daily", label: "Daily Update" },
        { value: "weekly", label: "Weekly Update" },
        { value: "biweekly", label: "Bi-Weekly Update" },
        { value: "monthly", label: "Monthly Update" },
        { value: "special", label: "Special Update" },
      ],
    },
    {
      id: "submitted-by",
      name: "submittedBy",
      label: "Submitted By",
      type: FieldType.SELECT,
      required: true,
      section: "update-info",
      order: 4,
      width: "half",
      dataSource: {
        type: "api",
        source: "/api/users/team-members",
        valueField: "id",
        labelField: "fullName",
        filters: { active: true },
      },
    },
    {
      id: "update-title",
      name: "updateTitle",
      label: "Update Title",
      type: FieldType.TEXT,
      required: true,
      section: "update-info",
      order: 5,
      width: "half",
      placeholder: "Brief title for this status update",
    },

    // Overall Status Section
    {
      id: "overall-status",
      name: "overallStatus",
      label: "Overall Status",
      type: FieldType.SELECT,
      required: true,
      section: "overall-status",
      order: 1,
      width: "third",
      options: [
        { value: "on-track", label: "On Track" },
        { value: "at-risk", label: "At Risk" },
        { value: "behind", label: "Behind Schedule" },
        { value: "ahead", label: "Ahead of Schedule" },
        { value: "on-hold", label: "On Hold" },
      ],
    },
    {
      id: "schedule-status",
      name: "scheduleStatus",
      label: "Schedule Status",
      type: FieldType.SELECT,
      required: true,
      section: "overall-status",
      order: 2,
      width: "third",
      options: [
        { value: "on-schedule", label: "On Schedule" },
        { value: "behind-schedule", label: "Behind Schedule" },
        { value: "ahead-of-schedule", label: "Ahead of Schedule" },
        { value: "critical-delay", label: "Critical Delay" },
      ],
    },
    {
      id: "budget-status",
      name: "budgetStatus",
      label: "Budget Status",
      type: FieldType.SELECT,
      required: true,
      section: "overall-status",
      order: 3,
      width: "third",
      options: [
        { value: "within-budget", label: "Within Budget" },
        { value: "over-budget", label: "Over Budget" },
        { value: "under-budget", label: "Under Budget" },
        { value: "critical-overrun", label: "Critical Overrun" },
      ],
    },
    {
      id: "percent-complete",
      name: "percentComplete",
      label: "Percent Complete",
      type: FieldType.NUMBER,
      required: true,
      section: "overall-status",
      order: 4,
      width: "third",
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 0,
          message: "Percent complete cannot be negative",
        },
        {
          type: ValidationRuleType.MAX_VALUE,
          value: 100,
          message: "Percent complete cannot exceed 100%",
        },
      ],
    },
    {
      id: "days-ahead-behind",
      name: "daysAheadBehind",
      label: "Days Ahead/Behind",
      type: FieldType.NUMBER,
      required: true,
      section: "overall-status",
      order: 5,
      width: "third",
      helpText:
        "Positive values indicate ahead of schedule, negative values indicate behind schedule",
    },
    {
      id: "budget-variance",
      name: "budgetVariance",
      label: "Budget Variance (SAR)",
      type: FieldType.NUMBER,
      required: true,
      section: "overall-status",
      order: 6,
      width: "third",
      helpText:
        "Positive values indicate over budget, negative values indicate under budget",
    },
    {
      id: "status-summary",
      name: "statusSummary",
      label: "Status Summary",
      type: FieldType.TEXTAREA,
      required: true,
      section: "overall-status",
      order: 7,
      width: "full",
      placeholder: "Provide a brief summary of the current project status",
    },
    {
      id: "key-achievements",
      name: "keyAchievements",
      label: "Key Achievements",
      type: FieldType.TEXTAREA,
      required: false,
      section: "overall-status",
      order: 8,
      width: "full",
      placeholder: "List key achievements since the last update",
    },

    // Progress Tracking Section
    {
      id: "task-progress",
      name: "taskProgress",
      label: "Task Progress",
      type: FieldType.REPEATER,
      required: true,
      section: "progress-tracking",
      order: 1,
      width: "full",
      fields: [
        {
          id: "task-id",
          name: "taskId",
          label: "Task ID",
          type: FieldType.TEXT,
          required: true,
          width: "sixth",
        },
        {
          id: "task-name",
          name: "taskName",
          label: "Task Name",
          type: FieldType.TEXT,
          required: true,
          width: "third",
        },
        {
          id: "planned-completion",
          name: "plannedCompletion",
          label: "Planned % Complete",
          type: FieldType.NUMBER,
          required: true,
          width: "sixth",
          validation: [
            {
              type: ValidationRuleType.MIN_VALUE,
              value: 0,
              message: "Percent cannot be negative",
            },
            {
              type: ValidationRuleType.MAX_VALUE,
              value: 100,
              message: "Percent cannot exceed 100%",
            },
          ],
        },
        {
          id: "actual-completion",
          name: "actualCompletion",
          label: "Actual % Complete",
          type: FieldType.NUMBER,
          required: true,
          width: "sixth",
          validation: [
            {
              type: ValidationRuleType.MIN_VALUE,
              value: 0,
              message: "Percent cannot be negative",
            },
            {
              type: ValidationRuleType.MAX_VALUE,
              value: 100,
              message: "Percent cannot exceed 100%",
            },
          ],
        },
        {
          id: "status",
          name: "status",
          label: "Status",
          type: FieldType.SELECT,
          required: true,
          width: "sixth",
          options: [
            { value: "not-started", label: "Not Started" },
            { value: "in-progress", label: "In Progress" },
            { value: "completed", label: "Completed" },
            { value: "delayed", label: "Delayed" },
            { value: "on-hold", label: "On Hold" },
          ],
        },
        {
          id: "comments",
          name: "comments",
          label: "Comments",
          type: FieldType.TEXT,
          required: false,
          width: "full",
        },
      ],
    },
    {
      id: "completed-deliverables",
      name: "completedDeliverables",
      label: "Completed Deliverables",
      type: FieldType.REPEATER,
      required: false,
      section: "progress-tracking",
      order: 2,
      width: "full",
      fields: [
        {
          id: "deliverable-name",
          name: "deliverableName",
          label: "Deliverable Name",
          type: FieldType.TEXT,
          required: true,
          width: "third",
        },
        {
          id: "completion-date",
          name: "completionDate",
          label: "Completion Date",
          type: FieldType.DATE,
          required: true,
          width: "third",
        },
        {
          id: "quality-rating",
          name: "qualityRating",
          label: "Quality Rating",
          type: FieldType.SELECT,
          required: true,
          width: "third",
          options: [
            { value: "excellent", label: "Excellent" },
            { value: "good", label: "Good" },
            { value: "satisfactory", label: "Satisfactory" },
            { value: "needs-improvement", label: "Needs Improvement" },
            { value: "poor", label: "Poor" },
          ],
        },
        {
          id: "notes",
          name: "notes",
          label: "Notes",
          type: FieldType.TEXT,
          required: false,
          width: "full",
        },
      ],
    },

    // Issues and Risks Section
    {
      id: "current-issues",
      name: "currentIssues",
      label: "Current Issues",
      type: FieldType.REPEATER,
      required: false,
      section: "issues-risks",
      order: 1,
      width: "full",
      fields: [
        {
          id: "issue-description",
          name: "issueDescription",
          label: "Issue Description",
          type: FieldType.TEXTAREA,
          required: true,
          width: "half",
        },
        {
          id: "impact",
          name: "impact",
          label: "Impact",
          type: FieldType.SELECT,
          required: true,
          width: "quarter",
          options: [
            { value: "low", label: "Low" },
            { value: "medium", label: "Medium" },
            { value: "high", label: "High" },
            { value: "critical", label: "Critical" },
          ],
        },
        {
          id: "status",
          name: "status",
          label: "Status",
          type: FieldType.SELECT,
          required: true,
          width: "quarter",
          options: [
            { value: "identified", label: "Identified" },
            { value: "in-progress", label: "In Progress" },
            { value: "resolved", label: "Resolved" },
            { value: "escalated", label: "Escalated" },
          ],
        },
        {
          id: "resolution-plan",
          name: "resolutionPlan",
          label: "Resolution Plan",
          type: FieldType.TEXTAREA,
          required: true,
          width: "half",
        },
        {
          id: "owner",
          name: "owner",
          label: "Owner",
          type: FieldType.SELECT,
          required: true,
          width: "quarter",
          dataSource: {
            type: "api",
            source: "/api/users/team-members",
            valueField: "id",
            labelField: "fullName",
            filters: { active: true },
          },
        },
        {
          id: "target-resolution-date",
          name: "targetResolutionDate",
          label: "Target Resolution Date",
          type: FieldType.DATE,
          required: false,
          width: "quarter",
        },
      ],
    },
    {
      id: "potential-risks",
      name: "potentialRisks",
      label: "Potential Risks",
      type: FieldType.REPEATER,
      required: false,
      section: "issues-risks",
      order: 2,
      width: "full",
      fields: [
        {
          id: "risk-description",
          name: "riskDescription",
          label: "Risk Description",
          type: FieldType.TEXTAREA,
          required: true,
          width: "half",
        },
        {
          id: "probability",
          name: "probability",
          label: "Probability",
          type: FieldType.SELECT,
          required: true,
          width: "quarter",
          options: [
            { value: "low", label: "Low" },
            { value: "medium", label: "Medium" },
            { value: "high", label: "High" },
            { value: "very-high", label: "Very High" },
          ],
        },
        {
          id: "impact",
          name: "impact",
          label: "Impact",
          type: FieldType.SELECT,
          required: true,
          width: "quarter",
          options: [
            { value: "low", label: "Low" },
            { value: "medium", label: "Medium" },
            { value: "high", label: "High" },
            { value: "critical", label: "Critical" },
          ],
        },
        {
          id: "mitigation-plan",
          name: "mitigationPlan",
          label: "Mitigation Plan",
          type: FieldType.TEXTAREA,
          required: true,
          width: "half",
        },
        {
          id: "owner",
          name: "owner",
          label: "Owner",
          type: FieldType.SELECT,
          required: true,
          width: "quarter",
          dataSource: {
            type: "api",
            source: "/api/users/team-members",
            valueField: "id",
            labelField: "fullName",
            filters: { active: true },
          },
        },
        {
          id: "contingency-plan",
          name: "contingencyPlan",
          label: "Contingency Plan",
          type: FieldType.TEXT,
          required: false,
          width: "quarter",
        },
      ],
    },

    // Next Steps Section
    {
      id: "upcoming-activities",
      name: "upcomingActivities",
      label: "Upcoming Activities",
      type: FieldType.REPEATER,
      required: true,
      section: "next-steps",
      order: 1,
      width: "full",
      fields: [
        {
          id: "activity-description",
          name: "activityDescription",
          label: "Activity Description",
          type: FieldType.TEXT,
          required: true,
          width: "half",
        },
        {
          id: "planned-start-date",
          name: "plannedStartDate",
          label: "Planned Start Date",
          type: FieldType.DATE,
          required: true,
          width: "quarter",
        },
        {
          id: "planned-end-date",
          name: "plannedEndDate",
          label: "Planned End Date",
          type: FieldType.DATE,
          required: true,
          width: "quarter",
        },
        {
          id: "assignee",
          name: "assignee",
          label: "Assignee",
          type: FieldType.SELECT,
          required: false,
          width: "half",
          dataSource: {
            type: "api",
            source: "/api/users/team-members",
            valueField: "id",
            labelField: "fullName",
            filters: { active: true },
          },
        },
        {
          id: "priority",
          name: "priority",
          label: "Priority",
          type: FieldType.SELECT,
          required: true,
          width: "half",
          options: [
            { value: "low", label: "Low" },
            { value: "medium", label: "Medium" },
            { value: "high", label: "High" },
            { value: "urgent", label: "Urgent" },
          ],
        },
      ],
    },
    {
      id: "upcoming-milestones",
      name: "upcomingMilestones",
      label: "Upcoming Milestones",
      type: FieldType.REPEATER,
      required: false,
      section: "next-steps",
      order: 2,
      width: "full",
      fields: [
        {
          id: "milestone-name",
          name: "milestoneName",
          label: "Milestone Name",
          type: FieldType.TEXT,
          required: true,
          width: "half",
        },
        {
          id: "target-date",
          name: "targetDate",
          label: "Target Date",
          type: FieldType.DATE,
          required: true,
          width: "quarter",
        },
        {
          id: "status",
          name: "status",
          label: "Status",
          type: FieldType.SELECT,
          required: true,
          width: "quarter",
          options: [
            { value: "on-track", label: "On Track" },
            { value: "at-risk", label: "At Risk" },
            { value: "delayed", label: "Delayed" },
            { value: "completed", label: "Completed" },
          ],
        },
        {
          id: "description",
          name: "description",
          label: "Description",
          type: FieldType.TEXT,
          required: false,
          width: "full",
        },
      ],
    },
    {
      id: "decision-needed",
      name: "decisionNeeded",
      label: "Decisions Needed",
      type: FieldType.TEXTAREA,
      required: false,
      section: "next-steps",
      order: 3,
      width: "full",
      placeholder: "List any decisions that need to be made by stakeholders",
    },

    // Attachments Section
    {
      id: "progress-photos",
      name: "progressPhotos",
      label: "Progress Photos",
      type: FieldType.FILE,
      required: false,
      section: "attachments",
      order: 1,
      width: "full",
      multiple: true,
      helpText: "Upload photos showing current progress",
    },
    {
      id: "supporting-documents",
      name: "supportingDocuments",
      label: "Supporting Documents",
      type: FieldType.FILE,
      required: false,
      section: "attachments",
      order: 2,
      width: "full",
      multiple: true,
      helpText: "Upload any supporting documents",
    },
  ],
  dependencies: [
    {
      formId: "project-creation-form",
      description: "Status updates require an existing project",
      type: "prerequisite",
      required: true,
    },
  ],
  submitEndpoint: "/api/projects/status-updates",
  fetchDataEndpoint: "/api/projects/status-updates/{id}",
  createdAt: new Date(),
  updatedAt: new Date(),
  isActive: true,
};

/**
 * Project Closure Form
 * Used for formally closing projects and documenting outcomes
 */
export const projectClosureForm: FormMetadata = {
  id: "project-closure-form",
  title: "Project Closure",
  description: "Formally close projects and document outcomes",
  module: FormModule.PROJECT,
  version: "1.0.0",
  permissions: {
    [FormPermission.VIEW]: ["admin", "project-manager", "supervisor"],
    [FormPermission.CREATE]: ["admin", "project-manager"],
    [FormPermission.EDIT]: ["admin", "project-manager"],
    [FormPermission.DELETE]: ["admin"],
    [FormPermission.APPROVE]: ["admin", "supervisor"],
    [FormPermission.REJECT]: ["admin", "supervisor"],
    [FormPermission.SUBMIT]: ["admin", "project-manager"],
    [FormPermission.PRINT]: ["admin", "project-manager", "supervisor"],
    [FormPermission.EXPORT]: ["admin", "project-manager", "supervisor"],
  },
  clientTypes: [ClientType.FDF, ClientType.ADHA, ClientType.CASH],
  sections: [
    {
      id: "project-info",
      title: "Project Information",
      description: "Basic information about the project",
      order: 1,
      collapsible: false,
    },
    {
      id: "completion-details",
      title: "Completion Details",
      description: "Details about project completion",
      order: 2,
      collapsible: false,
    },
    {
      id: "deliverables",
      title: "Deliverables",
      description: "Final status of project deliverables",
      order: 3,
      collapsible: false,
    },
    {
      id: "financial-summary",
      title: "Financial Summary",
      description: "Summary of project finances",
      order: 4,
      collapsible: false,
    },
    {
      id: "lessons-learned",
      title: "Lessons Learned",
      description: "Lessons learned and best practices",
      order: 5,
      collapsible: false,
    },
    {
      id: "approvals",
      title: "Approvals",
      description: "Final approvals for project closure",
      order: 6,
      collapsible: false,
    },
    {
      id: "attachments",
      title: "Attachments",
      description: "Supporting documents and final deliverables",
      order: 7,
      collapsible: true,
    },
  ],
  fields: [
    // Project Information Section
    {
      id: "project-id",
      name: "projectId",
      label: "Project",
      type: FieldType.SELECT,
      required: true,
      section: "project-info",
      order: 1,
      width: "full",
      dataSource: {
        type: "api",
        source: "/api/projects",
        valueField: "id",
        labelField: "projectName",
        filters: { status: "active" },
      },
    },
    {
      id: "project-manager",
      name: "projectManager",
      label: "Project Manager",
      type: FieldType.SELECT,
      required: true,
      section: "project-info",
      order: 2,
      width: "half",
      dataSource: {
        type: "api",
        source: "/api/users/project-managers",
        valueField: "id",
        labelField: "fullName",
        filters: { active: true },
      },
    },
    {
      id: "client-type",
      name: "clientType",
      label: "Client Type",
      type: FieldType.SELECT,
      required: true,
      section: "project-info",
      order: 3,
      width: "half",
      options: [
        { value: ClientType.FDF, label: "FDF" },
        { value: ClientType.ADHA, label: "ADHA" },
        { value: ClientType.CASH, label: "Cash Client" },
      ],
    },
    {
      id: "beneficiary-id",
      name: "beneficiaryId",
      label: "Beneficiary",
      type: FieldType.SELECT,
      required: true,
      section: "project-info",
      order: 4,
      width: "full",
      dataSource: {
        type: "api",
        source: "/api/beneficiaries",
        valueField: "id",
        labelField: "fullName",
        filters: { active: true },
      },
    },

    // Completion Details Section
    {
      id: "actual-completion-date",
      name: "actualCompletionDate",
      label: "Actual Completion Date",
      type: FieldType.DATE,
      required: true,
      section: "completion-details",
      order: 1,
      width: "half",
    },
    {
      id: "planned-completion-date",
      name: "plannedCompletionDate",
      label: "Planned Completion Date",
      type: FieldType.DATE,
      required: true,
      section: "completion-details",
      order: 2,
      width: "half",
    },
    {
      id: "schedule-variance",
      name: "scheduleVariance",
      label: "Schedule Variance (Days)",
      type: FieldType.CALCULATED,
      required: false,
      section: "completion-details",
      order: 3,
      width: "half",
      readOnly: true,
      calculationFormula:
        "return Math.round((new Date(values.actualCompletionDate) - new Date(values.plannedCompletionDate)) / (1000 * 60 * 60 * 24)) || 0;",
      helpText:
        "Positive values indicate project finished late, negative values indicate early completion",
    },
    {
      id: "completion-status",
      name: "completionStatus",
      label: "Completion Status",
      type: FieldType.SELECT,
      required: true,
      section: "completion-details",
      order: 4,
      width: "half",
      options: [
        { value: "completed-successfully", label: "Completed Successfully" },
        { value: "completed-with-issues", label: "Completed With Issues" },
        { value: "partially-completed", label: "Partially Completed" },
        { value: "terminated", label: "Terminated" },
      ],
    },
    {
      id: "completion-summary",
      name: "completionSummary",
      label: "Completion Summary",
      type: FieldType.TEXTAREA,
      required: true,
      section: "completion-details",
      order: 5,
      width: "full",
      placeholder: "Provide a summary of the project completion",
    },

    // Deliverables Section
    {
      id: "deliverables-status",
      name: "deliverablesStatus",
      label: "Deliverables Status",
      type: FieldType.REPEATER,
      required: true,
      section: "deliverables",
      order: 1,
      width: "full",
      fields: [
        {
          id: "deliverable-name",
          name: "deliverableName",
          label: "Deliverable Name",
          type: FieldType.TEXT,
          required: true,
          width: "third",
        },
        {
          id: "status",
          name: "status",
          label: "Status",
          type: FieldType.SELECT,
          required: true,
          width: "sixth",
          options: [
            { value: "completed", label: "Completed" },
            { value: "partially-completed", label: "Partially Completed" },
            { value: "not-completed", label: "Not Completed" },
            { value: "not-applicable", label: "Not Applicable" },
          ],
        },
        {
          id: "quality-rating",
          name: "qualityRating",
          label: "Quality Rating",
          type: FieldType.SELECT,
          required: true,
          width: "sixth",
          options: [
            { value: "excellent", label: "Excellent" },
            { value: "good", label: "Good" },
            { value: "satisfactory", label: "Satisfactory" },
            { value: "needs-improvement", label: "Needs Improvement" },
            { value: "poor", label: "Poor" },
            { value: "not-applicable", label: "N/A" },
          ],
        },
        {
          id: "completion-date",
          name: "completionDate",
          label: "Completion Date",
          type: FieldType.DATE,
          required: false,
          width: "sixth",
        },
        {
          id: "verified-by",
          name: "verifiedBy",
          label: "Verified By",
          type: FieldType.SELECT,
          required: false,
          width: "sixth",
          dataSource: {
            type: "api",
            source: "/api/users/team-members",
            valueField: "id",
            labelField: "fullName",
            filters: { active: true },
          },
        },
        {
          id: "notes",
          name: "notes",
          label: "Notes",
          type: FieldType.TEXT,
          required: false,
          width: "full",
        },
      ],
    },
    {
      id: "beneficiary-satisfaction",
      name: "beneficiarySatisfaction",
      label: "Beneficiary Satisfaction",
      type: FieldType.SELECT,
      required: true,
      section: "deliverables",
      order: 2,
      width: "half",
      options: [
        { value: "very-satisfied", label: "Very Satisfied" },
        { value: "satisfied", label: "Satisfied" },
        { value: "neutral", label: "Neutral" },
        { value: "dissatisfied", label: "Dissatisfied" },
        { value: "very-dissatisfied", label: "Very Dissatisfied" },
        { value: "not-assessed", label: "Not Assessed" },
      ],
    },
    {
      id: "beneficiary-feedback",
      name: "beneficiaryFeedback",
      label: "Beneficiary Feedback",
      type: FieldType.TEXTAREA,
      required: false,
      section: "deliverables",
      order: 3,
      width: "half",
      placeholder: "Summarize feedback received from the beneficiary",
    },

    // Financial Summary Section
    {
      id: "original-budget",
      name: "originalBudget",
      label: "Original Budget (SAR)",
      type: FieldType.NUMBER,
      required: true,
      section: "financial-summary",
      order: 1,
      width: "third",
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 0,
          message: "Budget cannot be negative",
        },
      ],
    },
    {
      id: "actual-cost",
      name: "actualCost",
      label: "Actual Cost (SAR)",
      type: FieldType.NUMBER,
      required: true,
      section: "financial-summary",
      order: 2,
      width: "third",
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 0,
          message: "Cost cannot be negative",
        },
      ],
    },
    {
      id: "cost-variance",
      name: "costVariance",
      label: "Cost Variance (SAR)",
      type: FieldType.CALCULATED,
      required: false,
      section: "financial-summary",
      order: 3,
      width: "third",
      readOnly: true,
      calculationFormula:
        "return Number(values.actualCost) - Number(values.originalBudget) || 0;",
      helpText:
        "Positive values indicate over budget, negative values indicate under budget",
    },
    {
      id: "variance-percentage",
      name: "variancePercentage",
      label: "Variance Percentage",
      type: FieldType.CALCULATED,
      required: false,
      section: "financial-summary",
      order: 4,
      width: "third",
      readOnly: true,
      calculationFormula:
        "return values.originalBudget ? ((Number(values.actualCost) - Number(values.originalBudget)) / Number(values.originalBudget) * 100).toFixed(2) + '%' : '0%';",
    },
    {
      id: "final-invoice-number",
      name: "finalInvoiceNumber",
      label: "Final Invoice Number",
      type: FieldType.TEXT,
      required: false,
      section: "financial-summary",
      order: 5,
      width: "third",
    },
    {
      id: "payment-status",
      name: "paymentStatus",
      label: "Payment Status",
      type: FieldType.SELECT,
      required: true,
      section: "financial-summary",
      order: 6,
      width: "third",
      options: [
        { value: "paid", label: "Paid" },
        { value: "partially-paid", label: "Partially Paid" },
        { value: "pending", label: "Pending" },
        { value: "not-applicable", label: "Not Applicable" },
      ],
    },
    {
      id: "financial-notes",
      name: "financialNotes",
      label: "Financial Notes",
      type: FieldType.TEXTAREA,
      required: false,
      section: "financial-summary",
      order: 7,
      width: "full",
      placeholder: "Additional notes about project finances",
    },

    // Lessons Learned Section
    {
      id: "lessons-learned",
      name: "lessonsLearned",
      label: "Lessons Learned",
      type: FieldType.REPEATER,
      required: true,
      section: "lessons-learned",
      order: 1,
      width: "full",
      fields: [
        {
          id: "category",
          name: "category",
          label: "Category",
          type: FieldType.SELECT,
          required: true,
          width: "quarter",
          options: [
            { value: "planning", label: "Planning" },
            { value: "execution", label: "Execution" },
            { value: "communication", label: "Communication" },
            { value: "resources", label: "Resources" },
            { value: "technical", label: "Technical" },
            { value: "stakeholder", label: "Stakeholder Management" },
            { value: "other", label: "Other" },
          ],
        },
        {
          id: "type",
          name: "type",
          label: "Type",
          type: FieldType.SELECT,
          required: true,
          width: "quarter",
          options: [
            { value: "success", label: "Success" },
            { value: "challenge", label: "Challenge" },
            { value: "opportunity", label: "Opportunity" },
          ],
        },
        {
          id: "description",
          name: "description",
          label: "Description",
          type: FieldType.TEXTAREA,
          required: true,
          width: "half",
        },
        {
          id: "impact",
          name: "impact",
          label: "Impact",
          type: FieldType.SELECT,
          required: true,
          width: "quarter",
          options: [
            { value: "low", label: "Low" },
            { value: "medium", label: "Medium" },
            { value: "high", label: "High" },
          ],
        },
        {
          id: "recommendation",
          name: "recommendation",
          label: "Recommendation",
          type: FieldType.TEXTAREA,
          required: true,
          width: "three-quarters",
        },
      ],
    },
    {
      id: "best-practices",
      name: "bestPractices",
      label: "Best Practices Identified",
      type: FieldType.TEXTAREA,
      required: false,
      section: "lessons-learned",
      order: 2,
      width: "full",
      placeholder: "List best practices identified during the project",
    },
    {
      id: "improvement-opportunities",
      name: "improvementOpportunities",
      label: "Improvement Opportunities",
      type: FieldType.TEXTAREA,
      required: false,
      section: "lessons-learned",
      order: 3,
      width: "full",
      placeholder: "List opportunities for improvement in future projects",
    },

    // Approvals Section
    {
      id: "project-manager-approval",
      name: "projectManagerApproval",
      label: "Project Manager Approval",
      type: FieldType.CHECKBOX,
      required: true,
      section: "approvals",
      order: 1,
      width: "half",
      helpText:
        "I confirm that all project deliverables have been completed and accepted",
    },
    {
      id: "supervisor-approval",
      name: "supervisorApproval",
      label: "Supervisor Approval",
      type: FieldType.SELECT,
      required: false,
      section: "approvals",
      order: 2,
      width: "half",
      options: [
        { value: "approved", label: "Approved" },
        { value: "rejected", label: "Rejected" },
        { value: "pending", label: "Pending" },
      ],
      defaultValue: "pending",
    },
    {
      id: "supervisor-id",
      name: "supervisorId",
      label: "Supervisor",
      type: FieldType.SELECT,
      required: false,
      section: "approvals",
      order: 3,
      width: "half",
      dataSource: {
        type: "api",
        source: "/api/users/supervisors",
        valueField: "id",
        labelField: "fullName",
        filters: { active: true },
      },
    },
    {
      id: "approval-date",
      name: "approvalDate",
      label: "Approval Date",
      type: FieldType.DATE,
      required: false,
      section: "approvals",
      order: 4,
      width: "half",
      dependencies: [
        {
          type: "visibility",
          sourceField: "supervisorApproval",
          condition: "value === 'approved'",
          action: "visible = true",
        },
      ],
    },
    {
      id: "approval-comments",
      name: "approvalComments",
      label: "Approval Comments",
      type: FieldType.TEXTAREA,
      required: false,
      section: "approvals",
      order: 5,
      width: "full",
    },

    // Attachments Section
    {
      id: "final-report",
      name: "finalReport",
      label: "Final Project Report",
      type: FieldType.FILE,
      required: false,
      section: "attachments",
      order: 1,
      width: "full",
      helpText: "Upload the final project report",
    },
    {
      id: "completion-certificate",
      name: "completionCertificate",
      label: "Completion Certificate",
      type: FieldType.FILE,
      required: false,
      section: "attachments",
      order: 2,
      width: "full",
      helpText: "Upload the project completion certificate",
    },
    {
      id: "final-deliverables",
      name: "finalDeliverables",
      label: "Final Deliverables",
      type: FieldType.FILE,
      required: false,
      section: "attachments",
      order: 3,
      width: "full",
      multiple: true,
      helpText: "Upload final project deliverables",
    },
    {
      id: "before-after-photos",
      name: "beforeAfterPhotos",
      label: "Before and After Photos",
      type: FieldType.FILE,
      required: false,
      section: "attachments",
      order: 4,
      width: "full",
      multiple: true,
      helpText: "Upload before and after photos of the project",
    },
    {
      id: "beneficiary-acceptance",
      name: "beneficiaryAcceptance",
      label: "Beneficiary Acceptance Document",
      type: FieldType.FILE,
      required: false,
      section: "attachments",
      order: 5,
      width: "full",
      helpText: "Upload the signed beneficiary acceptance document",
    },
  ],
  dependencies: [
    {
      formId: "project-creation-form",
      description: "Project closure requires an existing project",
      type: "prerequisite",
      required: true,
    },
  ],
  submitEndpoint: "/api/projects/closure",
  fetchDataEndpoint: "/api/projects/closure/{id}",
  createdAt: new Date(),
  updatedAt: new Date(),
  isActive: true,
};

// Register the forms
formRegistry.registerForm(
  {
    id: projectCreationFormMetadata.id,
    title: projectCreationFormMetadata.title,
    description: projectCreationFormMetadata.description,
    module: projectCreationFormMetadata.module,
    clientTypes: projectCreationFormMetadata.clientTypes,
    permissions: projectCreationFormMetadata.permissions,
    dependencies: projectCreationFormMetadata.dependencies,
    version: projectCreationFormMetadata.version,
    path: "/projects/create",
    icon: "clipboard-list",
    isActive: projectCreationFormMetadata.isActive,
  },
  projectCreationFormMetadata,
);

formRegistry.registerForm(
  {
    id: projectScheduleForm.id,
    title: projectScheduleForm.title,
    description: projectScheduleForm.description,
    module: projectScheduleForm.module,
    clientTypes: projectScheduleForm.clientTypes,
    permissions: projectScheduleForm.permissions,
    dependencies: projectScheduleForm.dependencies,
    version: projectScheduleForm.version,
    path: "/projects/schedule",
    icon: "calendar",
    isActive: projectScheduleForm.isActive,
  },
  projectScheduleForm,
);

formRegistry.registerForm(
  {
    id: resourceAllocationForm.id,
    title: resourceAllocationForm.title,
    description: resourceAllocationForm.description,
    module: resourceAllocationForm.module,
    clientTypes: resourceAllocationForm.clientTypes,
    permissions: resourceAllocationForm.permissions,
    dependencies: resourceAllocationForm.dependencies,
    version: resourceAllocationForm.version,
    path: "/projects/resources",
    icon: "users",
    isActive: resourceAllocationForm.isActive,
  },
  resourceAllocationForm,
);

formRegistry.registerForm(
  {
    id: projectStatusUpdateForm.id,
    title: projectStatusUpdateForm.title,
    description: projectStatusUpdateForm.description,
    module: projectStatusUpdateForm.module,
    clientTypes: projectStatusUpdateForm.clientTypes,
    permissions: projectStatusUpdateForm.permissions,
    dependencies: projectStatusUpdateForm.dependencies,
    version: projectStatusUpdateForm.version,
    path: "/projects/status-updates",
    icon: "bar-chart-2",
    isActive: projectStatusUpdateForm.isActive,
  },
  projectStatusUpdateForm,
);

formRegistry.registerForm(
  {
    id: projectClosureForm.id,
    title: projectClosureForm.title,
    description: projectClosureForm.description,
    module: projectClosureForm.module,
    clientTypes: projectClosureForm.clientTypes,
    permissions: projectClosureForm.permissions,
    dependencies: projectClosureForm.dependencies,
    version: projectClosureForm.version,
    path: "/projects/closure",
    icon: "check-circle",
    isActive: projectClosureForm.isActive,
  },
  projectClosureForm,
);
