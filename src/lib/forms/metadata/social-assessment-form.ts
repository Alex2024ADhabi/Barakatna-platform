import {
  ClientType,
  FieldType,
  FormMetadata,
  FormModule,
  FormPermission,
  ValidationRuleType,
} from "../types";
import { formRegistry } from "../registry";

/**
 * Social Assessment Form (F03.5)
 * Used to evaluate the social support network and needs of the beneficiary
 */
export const socialAssessmentForm: FormMetadata = {
  id: "social-assessment-form",
  title: "Social Assessment",
  description:
    "Evaluate the social support network and needs of the beneficiary",
  module: FormModule.ASSESSMENT,
  version: "1.0.0",
  permissions: {
    [FormPermission.VIEW]: [
      "admin",
      "manager",
      "assessment-specialist",
      "social-worker",
      "case-manager",
    ],
    [FormPermission.CREATE]: [
      "admin",
      "manager",
      "assessment-specialist",
      "social-worker",
    ],
    [FormPermission.EDIT]: [
      "admin",
      "manager",
      "assessment-specialist",
      "social-worker",
    ],
    [FormPermission.DELETE]: ["admin"],
    [FormPermission.APPROVE]: ["admin", "manager"],
    [FormPermission.REJECT]: ["admin", "manager"],
    [FormPermission.SUBMIT]: [
      "admin",
      "manager",
      "assessment-specialist",
      "social-worker",
    ],
    [FormPermission.PRINT]: [
      "admin",
      "manager",
      "assessment-specialist",
      "social-worker",
      "case-manager",
    ],
    [FormPermission.EXPORT]: ["admin", "manager"],
  },
  clientTypes: [
    ClientType.FDF,
    ClientType.ADHA,
    ClientType.CASH,
    ClientType.OTHER,
  ],
  sections: [
    {
      id: "beneficiary-information",
      title: "Beneficiary Information",
      description: "Basic information about the beneficiary",
      order: 1,
      collapsible: false,
    },
    {
      id: "household-composition",
      title: "Household Composition",
      description: "Information about the beneficiary's household",
      order: 2,
      collapsible: false,
    },
    {
      id: "social-support-network",
      title: "Social Support Network",
      description: "Assessment of the beneficiary's social support network",
      order: 3,
      collapsible: false,
    },
    {
      id: "community-engagement",
      title: "Community Engagement",
      description: "Beneficiary's engagement with community resources",
      order: 4,
      collapsible: true,
    },
    {
      id: "social-needs",
      title: "Social Needs Assessment",
      description: "Assessment of social needs and recommendations",
      order: 5,
      collapsible: false,
    },
    {
      id: "assessor-information",
      title: "Assessor Information",
      description: "Information about the social assessment specialist",
      order: 6,
      collapsible: true,
    },
  ],
  fields: [
    {
      id: "assessment-id",
      name: "assessmentId",
      label: "Assessment ID",
      type: FieldType.TEXT,
      readOnly: true,
      required: false,
      section: "beneficiary-information",
      order: 1,
      width: "full",
      helpText: "Auto-generated unique identifier (Format: SOC-YYYY-NNNNN)",
      defaultValue: "",
    },
    {
      id: "beneficiary-id",
      name: "beneficiaryId",
      label: "Beneficiary",
      type: FieldType.LOOKUP,
      required: true,
      section: "beneficiary-information",
      order: 2,
      width: "full",
      dataSource: {
        type: "api",
        source: "/api/v1/beneficiaries",
        valueField: "id",
        labelField: "fullName",
        filters: { status: "active" },
      },
    },
    {
      id: "beneficiary-name",
      name: "beneficiaryName",
      label: "Beneficiary Name",
      type: FieldType.TEXT,
      readOnly: true,
      required: false,
      section: "beneficiary-information",
      order: 3,
      width: "half",
      dependencies: [
        {
          type: "value",
          sourceField: "beneficiaryId",
          condition: "!!value",
          action: "fetchBeneficiaryName(value)",
        },
      ],
    },
    {
      id: "assessment-date",
      name: "assessmentDate",
      label: "Assessment Date",
      type: FieldType.DATE,
      required: true,
      section: "beneficiary-information",
      order: 4,
      width: "half",
      defaultValue: new Date().toISOString().split("T")[0],
      validation: [
        {
          type: ValidationRuleType.CUSTOM,
          value: (value: string) => {
            const assessDate = new Date(value);
            const today = new Date();
            return assessDate <= today;
          },
          message: "Assessment date cannot be in the future",
        },
      ],
    },
    {
      id: "household-size",
      name: "householdSize",
      label: "Number of People in Household",
      type: FieldType.NUMBER,
      required: true,
      section: "household-composition",
      order: 1,
      width: "half",
      defaultValue: 1,
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 1,
          message: "Household size must be at least 1",
        },
      ],
    },
    {
      id: "living-arrangement",
      name: "livingArrangement",
      label: "Living Arrangement",
      type: FieldType.SELECT,
      required: true,
      section: "household-composition",
      order: 2,
      width: "half",
      options: [
        { value: "Lives Alone", label: "Lives Alone" },
        { value: "With Spouse", label: "With Spouse" },
        { value: "With Children", label: "With Children" },
        { value: "With Extended Family", label: "With Extended Family" },
        { value: "With Caregiver", label: "With Caregiver" },
        { value: "Other", label: "Other" },
      ],
    },
    {
      id: "household-members",
      name: "householdMembers",
      label: "Household Members",
      type: FieldType.REPEATER,
      required: true,
      section: "household-composition",
      order: 3,
      width: "full",
      fields: [
        {
          id: "member-name",
          name: "memberName",
          label: "Name",
          type: FieldType.TEXT,
          required: true,
          width: "third",
        },
        {
          id: "member-relationship",
          name: "memberRelationship",
          label: "Relationship",
          type: FieldType.SELECT,
          required: true,
          width: "third",
          options: [
            { value: "Spouse", label: "Spouse" },
            { value: "Child", label: "Child" },
            { value: "Sibling", label: "Sibling" },
            { value: "Parent", label: "Parent" },
            { value: "Grandchild", label: "Grandchild" },
            { value: "Other Relative", label: "Other Relative" },
            { value: "Caregiver", label: "Caregiver" },
            { value: "Friend", label: "Friend" },
            { value: "Other", label: "Other" },
          ],
        },
        {
          id: "member-age",
          name: "memberAge",
          label: "Age",
          type: FieldType.NUMBER,
          required: true,
          width: "third",
        },
      ],
      dependencies: [
        {
          type: "requirement",
          sourceField: "householdSize",
          condition: "value > 1",
          action: "required = true",
        },
        {
          type: "visibility",
          sourceField: "householdSize",
          condition: "value > 1",
          action: "visible = true",
        },
      ],
    },
    {
      id: "primary-caregiver",
      name: "primaryCaregiver",
      label: "Primary Caregiver",
      type: FieldType.TEXT,
      placeholder: "Enter name of primary caregiver",
      required: false,
      section: "social-support-network",
      order: 1,
      width: "half",
    },
    {
      id: "caregiver-relationship",
      name: "caregiverRelationship",
      label: "Caregiver Relationship",
      type: FieldType.SELECT,
      required: false,
      section: "social-support-network",
      order: 2,
      width: "half",
      options: [
        { value: "Spouse", label: "Spouse" },
        { value: "Child", label: "Child" },
        { value: "Sibling", label: "Sibling" },
        { value: "Other Relative", label: "Other Relative" },
        { value: "Friend", label: "Friend" },
        { value: "Paid Caregiver", label: "Paid Caregiver" },
        { value: "Other", label: "Other" },
      ],
      dependencies: [
        {
          type: "requirement",
          sourceField: "primaryCaregiver",
          condition: "!!value",
          action: "required = true",
        },
      ],
    },
    {
      id: "caregiver-availability",
      name: "caregiverAvailability",
      label: "Caregiver Availability",
      type: FieldType.SELECT,
      required: false,
      section: "social-support-network",
      order: 3,
      width: "half",
      options: [
        { value: "Full-time", label: "Full-time" },
        { value: "Part-time", label: "Part-time" },
        { value: "As Needed", label: "As Needed" },
        { value: "Limited", label: "Limited" },
        { value: "Unavailable", label: "Unavailable" },
      ],
      dependencies: [
        {
          type: "requirement",
          sourceField: "primaryCaregiver",
          condition: "!!value",
          action: "required = true",
        },
      ],
    },
    {
      id: "caregiver-capability",
      name: "caregiverCapability",
      label: "Caregiver Capability",
      type: FieldType.SELECT,
      required: false,
      section: "social-support-network",
      order: 4,
      width: "half",
      options: [
        { value: "Very Capable", label: "Very Capable" },
        { value: "Capable", label: "Capable" },
        { value: "Somewhat Capable", label: "Somewhat Capable" },
        { value: "Limited Capability", label: "Limited Capability" },
        { value: "Not Capable", label: "Not Capable" },
      ],
      dependencies: [
        {
          type: "requirement",
          sourceField: "primaryCaregiver",
          condition: "!!value",
          action: "required = true",
        },
      ],
    },
    {
      id: "family-support",
      name: "familySupport",
      label: "Family Support Level",
      type: FieldType.SELECT,
      required: true,
      section: "social-support-network",
      order: 5,
      width: "half",
      options: [
        { value: "Strong", label: "Strong" },
        { value: "Moderate", label: "Moderate" },
        { value: "Limited", label: "Limited" },
        { value: "None", label: "None" },
      ],
    },
    {
      id: "friend-support",
      name: "friendSupport",
      label: "Friend Support Level",
      type: FieldType.SELECT,
      required: true,
      section: "social-support-network",
      order: 6,
      width: "half",
      options: [
        { value: "Strong", label: "Strong" },
        { value: "Moderate", label: "Moderate" },
        { value: "Limited", label: "Limited" },
        { value: "None", label: "None" },
      ],
    },
    {
      id: "emergency-contacts",
      name: "emergencyContacts",
      label: "Emergency Contacts",
      type: FieldType.REPEATER,
      required: true,
      section: "social-support-network",
      order: 7,
      width: "full",
      fields: [
        {
          id: "contact-name",
          name: "contactName",
          label: "Name",
          type: FieldType.TEXT,
          required: true,
          width: "third",
        },
        {
          id: "contact-relationship",
          name: "contactRelationship",
          label: "Relationship",
          type: FieldType.SELECT,
          required: true,
          width: "third",
          options: [
            { value: "Spouse", label: "Spouse" },
            { value: "Child", label: "Child" },
            { value: "Sibling", label: "Sibling" },
            { value: "Other Relative", label: "Other Relative" },
            { value: "Friend", label: "Friend" },
            { value: "Caregiver", label: "Caregiver" },
            { value: "Other", label: "Other" },
          ],
        },
        {
          id: "contact-phone",
          name: "contactPhone",
          label: "Phone Number",
          type: FieldType.PHONE,
          required: true,
          width: "third",
        },
      ],
      validation: [
        {
          type: ValidationRuleType.CUSTOM,
          value: (value: any[]) => value && value.length >= 1,
          message: "At least one emergency contact must be provided",
        },
      ],
    },
    {
      id: "social-isolation-risk",
      name: "socialIsolationRisk",
      label: "Social Isolation Risk",
      type: FieldType.SELECT,
      required: true,
      section: "social-support-network",
      order: 8,
      width: "full",
      options: [
        { value: "High Risk", label: "High Risk" },
        { value: "Moderate Risk", label: "Moderate Risk" },
        { value: "Low Risk", label: "Low Risk" },
        { value: "No Risk", label: "No Risk" },
      ],
    },
    {
      id: "social-network-notes",
      name: "socialNetworkNotes",
      label: "Social Network Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about social support network",
      required: false,
      section: "social-support-network",
      order: 9,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 500,
          message: "Notes cannot exceed 500 characters",
        },
      ],
    },
    {
      id: "community-services-used",
      name: "communityServicesUsed",
      label: "Community Services Currently Used",
      type: FieldType.MULTISELECT,
      required: true,
      section: "community-engagement",
      order: 1,
      width: "full",
      options: [
        { value: "Senior Center", label: "Senior Center" },
        { value: "Religious Organization", label: "Religious Organization" },
        { value: "Meal Delivery", label: "Meal Delivery" },
        { value: "Transportation Services", label: "Transportation Services" },
        { value: "Home Health Care", label: "Home Health Care" },
        { value: "Housekeeping Services", label: "Housekeeping Services" },
        { value: "Volunteer Visitors", label: "Volunteer Visitors" },
        { value: "Support Groups", label: "Support Groups" },
        { value: "None", label: "None" },
        { value: "Other", label: "Other" },
      ],
    },
    {
      id: "service-frequency",
      name: "serviceFrequency",
      label: "Frequency of Service Use",
      type: FieldType.SELECT,
      required: true,
      section: "community-engagement",
      order: 2,
      width: "half",
      options: [
        { value: "Daily", label: "Daily" },
        { value: "Several Times a Week", label: "Several Times a Week" },
        { value: "Weekly", label: "Weekly" },
        { value: "Monthly", label: "Monthly" },
        { value: "Rarely", label: "Rarely" },
        { value: "Never", label: "Never" },
      ],
      dependencies: [
        {
          type: "visibility",
          sourceField: "communityServicesUsed",
          condition: "value && value.length > 0 && !value.includes('None')",
          action: "visible = true",
        },
      ],
    },
    {
      id: "community-participation",
      name: "communityParticipation",
      label: "Level of Community Participation",
      type: FieldType.SELECT,
      required: true,
      section: "community-engagement",
      order: 3,
      width: "half",
      options: [
        { value: "Very Active", label: "Very Active" },
        { value: "Active", label: "Active" },
        { value: "Somewhat Active", label: "Somewhat Active" },
        { value: "Limited", label: "Limited" },
        { value: "None", label: "None" },
      ],
    },
    {
      id: "transportation-access",
      name: "transportationAccess",
      label: "Access to Transportation",
      type: FieldType.SELECT,
      required: true,
      section: "community-engagement",
      order: 4,
      width: "half",
      options: [
        { value: "Independent Driver", label: "Independent Driver" },
        {
          value: "Family/Friend Transportation",
          label: "Family/Friend Transportation",
        },
        { value: "Public Transportation", label: "Public Transportation" },
        {
          value: "Special Transportation Services",
          label: "Special Transportation Services",
        },
        { value: "Limited Access", label: "Limited Access" },
        { value: "No Access", label: "No Access" },
      ],
    },
    {
      id: "transportation-barriers",
      name: "transportationBarriers",
      label: "Transportation Barriers",
      type: FieldType.MULTISELECT,
      required: false,
      section: "community-engagement",
      order: 5,
      width: "half",
      options: [
        { value: "Physical Limitations", label: "Physical Limitations" },
        { value: "Cost", label: "Cost" },
        { value: "Distance", label: "Distance" },
        { value: "Availability", label: "Availability" },
        { value: "Safety Concerns", label: "Safety Concerns" },
        { value: "None", label: "None" },
      ],
      dependencies: [
        {
          type: "visibility",
          sourceField: "transportationAccess",
          condition: "['Limited Access', 'No Access'].includes(value)",
          action: "visible = true",
        },
      ],
    },
    {
      id: "community-engagement-notes",
      name: "communityEngagementNotes",
      label: "Community Engagement Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about community engagement",
      required: false,
      section: "community-engagement",
      order: 6,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 500,
          message: "Notes cannot exceed 500 characters",
        },
      ],
    },
    {
      id: "social-needs-identified",
      name: "socialNeedsIdentified",
      label: "Social Needs Identified",
      type: FieldType.MULTISELECT,
      required: true,
      section: "social-needs",
      order: 1,
      width: "full",
      options: [
        { value: "Caregiver Support", label: "Caregiver Support" },
        {
          value: "Social Isolation Intervention",
          label: "Social Isolation Intervention",
        },
        {
          value: "Transportation Assistance",
          label: "Transportation Assistance",
        },
        { value: "Meal Services", label: "Meal Services" },
        { value: "Home Care Services", label: "Home Care Services" },
        {
          value: "Community Program Connection",
          label: "Community Program Connection",
        },
        { value: "Financial Assistance", label: "Financial Assistance" },
        { value: "Mental Health Support", label: "Mental Health Support" },
        { value: "None", label: "None" },
        { value: "Other", label: "Other" },
      ],
    },
    {
      id: "social-needs-priority",
      name: "socialNeedsPriority",
      label: "Social Needs Priority",
      type: FieldType.SELECT,
      required: true,
      section: "social-needs",
      order: 2,
      width: "half",
      options: [
        { value: "Critical", label: "Critical" },
        { value: "High", label: "High" },
        { value: "Medium", label: "Medium" },
        { value: "Low", label: "Low" },
      ],
      dependencies: [
        {
          type: "visibility",
          sourceField: "socialNeedsIdentified",
          condition: "value && value.length > 0 && !value.includes('None')",
          action: "visible = true",
        },
      ],
    },
    {
      id: "recommended-services",
      name: "recommendedServices",
      label: "Recommended Services",
      type: FieldType.MULTISELECT,
      required: true,
      section: "social-needs",
      order: 3,
      width: "full",
      options: [
        { value: "Caregiver Training", label: "Caregiver Training" },
        { value: "Caregiver Respite", label: "Caregiver Respite" },
        { value: "Senior Center Programs", label: "Senior Center Programs" },
        {
          value: "Friendly Visitor Program",
          label: "Friendly Visitor Program",
        },
        { value: "Transportation Services", label: "Transportation Services" },
        { value: "Meal Delivery", label: "Meal Delivery" },
        { value: "Home Care Services", label: "Home Care Services" },
        { value: "Support Groups", label: "Support Groups" },
        {
          value: "Financial Assistance Programs",
          label: "Financial Assistance Programs",
        },
        {
          value: "Mental Health Counseling",
          label: "Mental Health Counseling",
        },
        { value: "None", label: "None" },
        { value: "Other", label: "Other" },
      ],
      dependencies: [
        {
          type: "visibility",
          sourceField: "socialNeedsIdentified",
          condition: "value && value.length > 0 && !value.includes('None')",
          action: "visible = true",
        },
      ],
    },
    {
      id: "referrals-made",
      name: "referralsMade",
      label: "Referrals Made",
      type: FieldType.REPEATER,
      required: false,
      section: "social-needs",
      order: 4,
      width: "full",
      fields: [
        {
          id: "referral-service",
          name: "referralService",
          label: "Service",
          type: FieldType.TEXT,
          required: true,
          width: "third",
        },
        {
          id: "referral-organization",
          name: "referralOrganization",
          label: "Organization",
          type: FieldType.TEXT,
          required: true,
          width: "third",
        },
        {
          id: "referral-date",
          name: "referralDate",
          label: "Date",
          type: FieldType.DATE,
          required: true,
          width: "third",
        },
      ],
      dependencies: [
        {
          type: "visibility",
          sourceField: "socialNeedsIdentified",
          condition: "value && value.length > 0 && !value.includes('None')",
          action: "visible = true",
        },
      ],
    },
    {
      id: "follow-up-plan",
      name: "followUpPlan",
      label: "Follow-up Plan",
      type: FieldType.TEXTAREA,
      placeholder: "Enter follow-up plan details",
      required: true,
      section: "social-needs",
      order: 5,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 1000,
          message: "Follow-up plan cannot exceed 1000 characters",
        },
      ],
    },
    {
      id: "social-assessment-summary",
      name: "socialAssessmentSummary",
      label: "Social Assessment Summary",
      type: FieldType.TEXTAREA,
      placeholder: "Enter summary of social assessment findings",
      required: true,
      section: "social-needs",
      order: 6,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 1000,
          message: "Summary cannot exceed 1000 characters",
        },
      ],
    },
    {
      id: "assessor-name",
      name: "assessorName",
      label: "Assessor Name",
      type: FieldType.TEXT,
      required: true,
      section: "assessor-information",
      order: 1,
      width: "half",
      defaultValue: "", // Will be populated with current user name
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Assessor name is required",
        },
        {
          type: ValidationRuleType.MIN_LENGTH,
          value: 3,
          message: "Assessor name must be at least 3 characters",
        },
      ],
    },
    {
      id: "assessor-position",
      name: "assessorPosition",
      label: "Assessor Position",
      type: FieldType.TEXT,
      required: true,
      section: "assessor-information",
      order: 2,
      width: "half",
      defaultValue: "", // Will be populated with current user position
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Assessor position is required",
        },
        {
          type: ValidationRuleType.MIN_LENGTH,
          value: 3,
          message: "Assessor position must be at least 3 characters",
        },
      ],
    },
    {
      id: "assessor-id",
      name: "assessorId",
      label: "Assessor ID",
      type: FieldType.HIDDEN,
      required: true,
      section: "assessor-information",
      order: 3,
      width: "full",
      defaultValue: "", // Will be populated with current user ID
    },
    {
      id: "assessment-completion-date",
      name: "assessmentCompletionDate",
      label: "Assessment Completion Date",
      type: FieldType.DATE,
      required: true,
      section: "assessor-information",
      order: 4,
      width: "full",
      defaultValue: new Date().toISOString().split("T")[0],
      validation: [
        {
          type: ValidationRuleType.CUSTOM,
          value: (value: string) => {
            const completionDate = new Date(value);
            const today = new Date();
            return completionDate <= today;
          },
          message: "Completion date cannot be in the future",
        },
      ],
    },
  ],
  dependencies: [
    {
      formId: "beneficiary-assessment-eligibility-form",
      description:
        "Social assessment must be linked to an eligible beneficiary",
      type: "prerequisite",
      required: true,
    },
  ],
  createdAt: new Date(),
  updatedAt: new Date(),
  isActive: true,
};

// Register form with the form registry
formRegistry.registerForm(
  {
    id: socialAssessmentForm.id,
    title: socialAssessmentForm.title,
    description: socialAssessmentForm.description,
    module: FormModule.ASSESSMENT,
    clientTypes: socialAssessmentForm.clientTypes,
    permissions: socialAssessmentForm.permissions,
    dependencies: socialAssessmentForm.dependencies,
    version: socialAssessmentForm.version,
    path: "/assessment/social",
    icon: "users",
    isActive: true,
  },
  socialAssessmentForm,
);
