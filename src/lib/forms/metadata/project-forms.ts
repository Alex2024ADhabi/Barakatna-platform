import {
  ClientType,
  FieldType,
  FormDependency,
  FormField,
  FormMetadata,
  FormModule,
  FormPermission,
  FormSection,
  ValidationRuleType,
} from "../types";
import { formRegistry } from "../registry";

/**
 * Project Creation Form Metadata
 *
 * This form is used to create a new project based on approved assessments.
 */
export const projectCreationFormMetadata: FormMetadata = {
  id: "project-creation-form",
  title: "Project Creation",
  description:
    "Create a new home modification project based on approved assessments",
  module: FormModule.PROJECT,
  version: "1.0.0",
  permissions: {
    [FormPermission.VIEW]: ["project-manager", "supervisor", "admin"],
    [FormPermission.CREATE]: ["project-manager", "admin"],
    [FormPermission.EDIT]: ["project-manager", "admin"],
    [FormPermission.DELETE]: ["admin"],
    [FormPermission.APPROVE]: ["supervisor", "admin"],
    [FormPermission.REJECT]: ["supervisor", "admin"],
    [FormPermission.SUBMIT]: ["project-manager", "admin"],
    [FormPermission.PRINT]: ["project-manager", "supervisor", "admin"],
    [FormPermission.EXPORT]: ["supervisor", "admin"],
  },
  clientTypes: [ClientType.FDF, ClientType.ADHA, ClientType.CASH],
  sections: [
    {
      id: "project-info",
      title: "Project Information",
      description: "Basic information about the project",
      order: 1,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "assessment-link",
      title: "Assessment Reference",
      description: "Link to the approved assessment",
      order: 2,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "timeline",
      title: "Project Timeline",
      description: "Timeline and milestones for the project",
      order: 3,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "budget",
      title: "Budget Information",
      description: "Budget allocation and cost estimates",
      order: 4,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "resources",
      title: "Resource Allocation",
      description: "Personnel and equipment allocation",
      order: 5,
      collapsible: true,
      collapsed: false,
    },
    {
      id: "fdf-specific-project",
      title: "FDF Project Requirements",
      description: "FDF-specific project requirements",
      order: 6,
      collapsible: true,
      collapsed: false,
      clientTypes: [ClientType.FDF],
      conditional: {
        field: "clientType",
        operator: "equals",
        value: ClientType.FDF,
      },
    },
    {
      id: "adha-specific-project",
      title: "ADHA Project Requirements",
      description: "ADHA-specific project requirements",
      order: 7,
      collapsible: true,
      collapsed: false,
      clientTypes: [ClientType.ADHA],
      conditional: {
        field: "clientType",
        operator: "equals",
        value: ClientType.ADHA,
      },
    },
  ],
  fields: [
    // Project Information Section
    {
      id: "clientType",
      name: "clientType",
      label: "Client Type",
      type: FieldType.SELECT,
      section: "project-info",
      required: true,
      options: [
        { value: ClientType.FDF, label: "FDF" },
        { value: ClientType.ADHA, label: "ADHA" },
        { value: ClientType.CASH, label: "Cash Client" },
      ],
      order: 1,
      width: "half",
    },
    {
      id: "projectName",
      name: "projectName",
      label: "Project Name",
      type: FieldType.TEXT,
      section: "project-info",
      required: true,
      order: 2,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Project name is required",
        },
        {
          type: ValidationRuleType.MIN_LENGTH,
          value: 5,
          message: "Project name must be at least 5 characters",
        },
      ],
    },
    {
      id: "projectDescription",
      name: "projectDescription",
      label: "Project Description",
      type: FieldType.TEXTAREA,
      section: "project-info",
      required: true,
      order: 3,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Project description is required",
        },
      ],
    },
    {
      id: "projectManager",
      name: "projectManager",
      label: "Project Manager",
      type: FieldType.SELECT,
      section: "project-info",
      required: true,
      order: 4,
      width: "half",
      dataSource: {
        type: "api",
        source: "/api/users/project-managers",
        valueField: "id",
        labelField: "fullName",
        filters: { active: true },
      },
    },
    {
      id: "projectPriority",
      name: "projectPriority",
      label: "Project Priority",
      type: FieldType.SELECT,
      section: "project-info",
      required: true,
      options: [
        { value: "critical", label: "Critical" },
        { value: "high", label: "High" },
        { value: "medium", label: "Medium" },
        { value: "low", label: "Low" },
      ],
      order: 5,
      width: "half",
    },

    // Assessment Link Section
    {
      id: "initialAssessmentId",
      name: "initialAssessmentId",
      label: "Initial Assessment Reference",
      type: FieldType.REFERENCE,
      section: "assessment-link",
      required: true,
      order: 1,
      width: "full",
      dataSource: {
        type: "api",
        source: "/api/assessments/initial/list",
        valueField: "id",
        labelField: "title",
        filters: { status: "approved" },
        dependsOn: ["clientType"],
      },
    },
    {
      id: "roomAssessmentIds",
      name: "roomAssessmentIds",
      label: "Room Assessments",
      type: FieldType.MULTISELECT,
      section: "assessment-link",
      required: true,
      order: 2,
      width: "full",
      dataSource: {
        type: "api",
        source: "/api/assessments/room/list",
        valueField: "id",
        labelField: "title",
        filters: { status: "approved" },
        dependsOn: ["initialAssessmentId"],
      },
      dependencies: [
        {
          type: "visibility",
          sourceField: "initialAssessmentId",
          condition: "!!value",
          action: "visible = true",
        },
      ],
    },

    // Timeline Section
    {
      id: "startDate",
      name: "startDate",
      label: "Start Date",
      type: FieldType.DATE,
      section: "timeline",
      required: true,
      order: 1,
      width: "half",
    },
    {
      id: "estimatedEndDate",
      name: "estimatedEndDate",
      label: "Estimated End Date",
      type: FieldType.DATE,
      section: "timeline",
      required: true,
      order: 2,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.CUSTOM,
          value: "value > startDate",
          message: "End date must be after start date",
        },
      ],
      dependencies: [
        {
          type: "validation",
          sourceField: "startDate",
          condition: "!!value",
          action:
            "validation.push({ type: 'custom', value: 'value > startDate', message: 'End date must be after start date' })",
        },
      ],
    },
    {
      id: "milestones",
      name: "milestones",
      label: "Project Milestones",
      type: FieldType.REPEATER,
      section: "timeline",
      required: true,
      order: 3,
      width: "full",
      fields: [
        {
          id: "milestoneName",
          name: "milestoneName",
          label: "Milestone Name",
          type: FieldType.TEXT,
          required: true,
          width: "half",
        },
        {
          id: "milestoneDate",
          name: "milestoneDate",
          label: "Target Date",
          type: FieldType.DATE,
          required: true,
          width: "half",
        },
        {
          id: "milestoneDescription",
          name: "milestoneDescription",
          label: "Description",
          type: FieldType.TEXTAREA,
          required: false,
          width: "full",
        },
      ],
    },

    // Budget Section
    {
      id: "totalBudget",
      name: "totalBudget",
      label: "Total Budget (SAR)",
      type: FieldType.NUMBER,
      section: "budget",
      required: true,
      order: 1,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 0,
          message: "Budget cannot be negative",
        },
      ],
    },
    {
      id: "budgetSource",
      name: "budgetSource",
      label: "Budget Source",
      type: FieldType.SELECT,
      section: "budget",
      required: true,
      options: [
        { value: "fdf", label: "FDF Funding" },
        { value: "adha", label: "ADHA Funding" },
        { value: "private", label: "Private Payment" },
        { value: "mixed", label: "Mixed Sources" },
      ],
      order: 2,
      width: "half",
      dependencies: [
        {
          type: "options",
          sourceField: "clientType",
          condition: "value === 'FDF'",
          action:
            "options = options.filter(o => ['fdf', 'mixed'].includes(o.value))",
        },
        {
          type: "options",
          sourceField: "clientType",
          condition: "value === 'ADHA'",
          action:
            "options = options.filter(o => ['adha', 'mixed'].includes(o.value))",
        },
        {
          type: "options",
          sourceField: "clientType",
          condition: "value === 'CASH'",
          action:
            "options = options.filter(o => ['private'].includes(o.value))",
        },
      ],
    },
    {
      id: "costBreakdown",
      name: "costBreakdown",
      label: "Cost Breakdown",
      type: FieldType.REPEATER,
      section: "budget",
      required: true,
      order: 3,
      width: "full",
      fields: [
        {
          id: "costCategory",
          name: "costCategory",
          label: "Category",
          type: FieldType.SELECT,
          required: true,
          width: "third",
          options: [
            { value: "materials", label: "Materials" },
            { value: "labor", label: "Labor" },
            { value: "equipment", label: "Equipment" },
            { value: "permits", label: "Permits & Approvals" },
            { value: "other", label: "Other" },
          ],
        },
        {
          id: "costDescription",
          name: "costDescription",
          label: "Description",
          type: FieldType.TEXT,
          required: true,
          width: "third",
        },
        {
          id: "costAmount",
          name: "costAmount",
          label: "Amount (SAR)",
          type: FieldType.NUMBER,
          required: true,
          width: "third",
        },
      ],
      calculationFormula:
        "return items.reduce((sum, item) => sum + (Number(item.costAmount) || 0), 0);",
    },
    {
      id: "calculatedTotal",
      name: "calculatedTotal",
      label: "Calculated Total (SAR)",
      type: FieldType.CALCULATED,
      section: "budget",
      required: false,
      order: 4,
      width: "half",
      calculationFormula:
        "return values.costBreakdown ? values.costBreakdown.reduce((sum, item) => sum + (Number(item.costAmount) || 0), 0) : 0;",
      readOnly: true,
    },

    // Resource Allocation Section
    {
      id: "teamMembers",
      name: "teamMembers",
      label: "Team Members",
      type: FieldType.REPEATER,
      section: "resources",
      required: true,
      order: 1,
      width: "full",
      fields: [
        {
          id: "memberId",
          name: "memberId",
          label: "Team Member",
          type: FieldType.SELECT,
          required: true,
          width: "third",
          dataSource: {
            type: "api",
            source: "/api/users/team-members",
            valueField: "id",
            labelField: "fullName",
            filters: { active: true },
          },
        },
        {
          id: "memberRole",
          name: "memberRole",
          label: "Role",
          type: FieldType.SELECT,
          required: true,
          width: "third",
          options: [
            { value: "supervisor", label: "Supervisor" },
            { value: "contractor", label: "Contractor" },
            { value: "inspector", label: "Inspector" },
            { value: "specialist", label: "Specialist" },
          ],
        },
        {
          id: "allocationPercentage",
          name: "allocationPercentage",
          label: "Allocation %",
          type: FieldType.NUMBER,
          required: true,
          width: "third",
          validation: [
            {
              type: ValidationRuleType.MIN_VALUE,
              value: 1,
              message: "Allocation must be at least 1%",
            },
            {
              type: ValidationRuleType.MAX_VALUE,
              value: 100,
              message: "Allocation cannot exceed 100%",
            },
          ],
        },
      ],
    },
    {
      id: "equipmentNeeded",
      name: "equipmentNeeded",
      label: "Equipment Needed",
      type: FieldType.MULTISELECT,
      section: "resources",
      required: false,
      order: 2,
      width: "full",
      dataSource: {
        type: "api",
        source: "/api/equipment/available",
        valueField: "id",
        labelField: "name",
      },
    },

    // FDF-specific Section
    {
      id: "fdfProjectCode",
      name: "fdfProjectCode",
      label: "FDF Project Code",
      type: FieldType.TEXT,
      section: "fdf-specific-project",
      required: true,
      order: 1,
      width: "half",
      clientTypes: [ClientType.FDF],
      validation: [
        {
          type: ValidationRuleType.PATTERN,
          value: "^FDF-PRJ-\\d{6}$",
          message: "FDF Project Code must be in format FDF-PRJ-XXXXXX",
          clientTypes: [ClientType.FDF],
        },
      ],
    },
    {
      id: "fdfApprovalDocument",
      name: "fdfApprovalDocument",
      label: "FDF Approval Document",
      type: FieldType.FILE,
      section: "fdf-specific-project",
      required: true,
      order: 2,
      width: "half",
      clientTypes: [ClientType.FDF],
    },

    // ADHA-specific Section
    {
      id: "adhaProjectReference",
      name: "adhaProjectReference",
      label: "ADHA Project Reference",
      type: FieldType.TEXT,
      section: "adha-specific-project",
      required: true,
      order: 1,
      width: "half",
      clientTypes: [ClientType.ADHA],
      validation: [
        {
          type: ValidationRuleType.PATTERN,
          value: "^ADHA-PRJ-\\d{8}$",
          message: "ADHA Project Reference must be in format ADHA-PRJ-XXXXXXXX",
          clientTypes: [ClientType.ADHA],
        },
      ],
    },
    {
      id: "adhaApprovalDate",
      name: "adhaApprovalDate",
      label: "ADHA Approval Date",
      type: FieldType.DATE,
      section: "adha-specific-project",
      required: true,
      order: 2,
      width: "half",
      clientTypes: [ClientType.ADHA],
    },
  ],
  dependencies: [
    {
      formId: "initial-assessment-form",
      description: "Project creation requires an approved initial assessment",
      type: "prerequisite",
      required: true,
    },
    {
      formId: "room-assessment-form",
      description:
        "Project creation requires at least one approved room assessment",
      type: "prerequisite",
      required: true,
    },
  ],
  submitEndpoint: "/api/projects",
  fetchDataEndpoint: "/api/projects/{id}",
  clientTypeOverrides: {
    [ClientType.FDF]: {
      title: "FDF Project Creation",
      submitEndpoint: "/api/projects/fdf",
    },
    [ClientType.ADHA]: {
      title: "ADHA Project Creation",
      submitEndpoint: "/api/projects/adha",
    },
    [ClientType.CASH]: {
      title: "Cash Client Project Creation",
      submitEndpoint: "/api/projects/cash",
    },
  },
  createdAt: new Date(),
  updatedAt: new Date(),
  isActive: true,
};

// Register the form
formRegistry.registerForm(
  {
    id: projectCreationFormMetadata.id,
    title: projectCreationFormMetadata.title,
    description: projectCreationFormMetadata.description,
    module: projectCreationFormMetadata.module,
    clientTypes: projectCreationFormMetadata.clientTypes,
    permissions: projectCreationFormMetadata.permissions,
    dependencies: projectCreationFormMetadata.dependencies,
    version: projectCreationFormMetadata.version,
    path: "/projects/create",
    icon: "clipboard-list",
    isActive: projectCreationFormMetadata.isActive,
  },
  projectCreationFormMetadata,
);
