import {
  ClientType,
  FieldType,
  FormMetadata,
  FormModule,
  FormPermission,
  ValidationRuleType,
} from "../types";
import { formRegistry } from "../registry";

/**
 * Home Safety Assessment Form (F03.2)
 * Used to evaluate home safety conditions and identify potential hazards
 */
export const homeSafetyAssessmentForm: FormMetadata = {
  id: "home-safety-assessment-form",
  title: "Home Safety Assessment",
  description: "Evaluate home safety conditions and identify potential hazards",
  module: FormModule.ASSESSMENT,
  version: "1.0.0",
  permissions: {
    [FormPermission.VIEW]: [
      "admin",
      "manager",
      "assessment-specialist",
      "case-manager",
    ],
    [FormPermission.CREATE]: ["admin", "manager", "assessment-specialist"],
    [FormPermission.EDIT]: ["admin", "manager", "assessment-specialist"],
    [FormPermission.DELETE]: ["admin"],
    [FormPermission.APPROVE]: ["admin", "manager"],
    [FormPermission.REJECT]: ["admin", "manager"],
    [FormPermission.SUBMIT]: ["admin", "manager", "assessment-specialist"],
    [FormPermission.PRINT]: [
      "admin",
      "manager",
      "assessment-specialist",
      "case-manager",
    ],
    [FormPermission.EXPORT]: ["admin", "manager"],
  },
  clientTypes: [
    ClientType.FDF,
    ClientType.ADHA,
    ClientType.CASH,
    ClientType.OTHER,
  ],
  sections: [
    {
      id: "beneficiary-information",
      title: "Beneficiary Information",
      description: "Basic information about the beneficiary",
      order: 1,
      collapsible: false,
    },
    {
      id: "exterior-assessment",
      title: "Exterior Assessment",
      description: "Assessment of exterior areas and entrances",
      order: 2,
      collapsible: false,
    },
    {
      id: "interior-general-assessment",
      title: "Interior General Assessment",
      description: "Assessment of general interior safety conditions",
      order: 3,
      collapsible: false,
    },
    {
      id: "bathroom-assessment",
      title: "Bathroom Assessment",
      description: "Assessment of bathroom safety",
      order: 4,
      collapsible: true,
    },
    {
      id: "kitchen-assessment",
      title: "Kitchen Assessment",
      description: "Assessment of kitchen safety",
      order: 5,
      collapsible: true,
    },
    {
      id: "bedroom-assessment",
      title: "Bedroom Assessment",
      description: "Assessment of bedroom safety",
      order: 6,
      collapsible: true,
    },
    {
      id: "emergency-preparedness",
      title: "Emergency Preparedness",
      description: "Assessment of emergency preparedness measures",
      order: 7,
      collapsible: true,
    },
    {
      id: "recommendations",
      title: "Recommendations",
      description: "Safety recommendations and interventions",
      order: 8,
      collapsible: false,
    },
    {
      id: "assessment-details",
      title: "Assessment Details",
      description: "Details about the assessment process",
      order: 9,
      collapsible: true,
    },
  ],
  fields: [
    {
      id: "assessment-id",
      name: "assessmentId",
      label: "Assessment ID",
      type: FieldType.TEXT,
      readOnly: true,
      required: false,
      section: "beneficiary-information",
      order: 1,
      width: "full",
      helpText: "Auto-generated unique identifier (Format: HSA-YYYY-NNNNN)",
      defaultValue: "",
    },
    {
      id: "beneficiary-id",
      name: "beneficiaryId",
      label: "Beneficiary",
      type: FieldType.LOOKUP,
      required: true,
      section: "beneficiary-information",
      order: 2,
      width: "full",
      dataSource: {
        type: "api",
        source: "/api/v1/beneficiaries",
        valueField: "id",
        labelField: "fullName",
        filters: { status: "active" },
      },
    },
    {
      id: "beneficiary-name",
      name: "beneficiaryName",
      label: "Beneficiary Name",
      type: FieldType.TEXT,
      readOnly: true,
      required: false,
      section: "beneficiary-information",
      order: 3,
      width: "half",
      dependencies: [
        {
          type: "value",
          sourceField: "beneficiaryId",
          condition: "!!value",
          action: "fetchBeneficiaryName(value)",
        },
      ],
    },
    {
      id: "assessment-date",
      name: "assessmentDate",
      label: "Assessment Date",
      type: FieldType.DATE,
      required: true,
      section: "beneficiary-information",
      order: 4,
      width: "half",
      defaultValue: new Date().toISOString().split("T")[0],
      validation: [
        {
          type: ValidationRuleType.CUSTOM,
          value: (value: string) => {
            const assessDate = new Date(value);
            const today = new Date();
            return assessDate <= today;
          },
          message: "Assessment date cannot be in the future",
        },
      ],
    },
    {
      id: "case-id",
      name: "caseId",
      label: "Case Reference",
      type: FieldType.TEXT,
      readOnly: true,
      required: false,
      section: "beneficiary-information",
      order: 5,
      width: "half",
      dependencies: [
        {
          type: "value",
          sourceField: "beneficiaryId",
          condition: "!!value",
          action: "fetchCaseId(value)",
        },
      ],
    },
    {
      id: "assessment-type",
      name: "assessmentType",
      label: "Assessment Type",
      type: FieldType.SELECT,
      required: true,
      section: "beneficiary-information",
      order: 6,
      width: "half",
      options: [
        { value: "Initial", label: "Initial" },
        { value: "Follow-up", label: "Follow-up" },
        { value: "Post-Modification", label: "Post-Modification" },
      ],
      defaultValue: "Initial",
    },
    {
      id: "exterior-walkways-condition",
      name: "exteriorWalkwaysCondition",
      label: "Exterior Walkways Condition",
      type: FieldType.SELECT,
      required: true,
      section: "exterior-assessment",
      order: 1,
      width: "half",
      options: [
        { value: "Safe", label: "Safe" },
        { value: "Minor Hazards", label: "Minor Hazards" },
        { value: "Major Hazards", label: "Major Hazards" },
        { value: "Not Applicable", label: "Not Applicable" },
      ],
    },
    {
      id: "exterior-walkways-notes",
      name: "exteriorWalkwaysNotes",
      label: "Exterior Walkways Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about exterior walkways",
      required: false,
      section: "exterior-assessment",
      order: 2,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 300,
          message: "Notes cannot exceed 300 characters",
        },
      ],
    },
    {
      id: "entrance-safety",
      name: "entranceSafety",
      label: "Entrance Safety",
      type: FieldType.SELECT,
      required: true,
      section: "exterior-assessment",
      order: 3,
      width: "half",
      options: [
        { value: "Safe", label: "Safe" },
        { value: "Minor Hazards", label: "Minor Hazards" },
        { value: "Major Hazards", label: "Major Hazards" },
        { value: "Not Applicable", label: "Not Applicable" },
      ],
    },
    {
      id: "entrance-safety-notes",
      name: "entranceSafetyNotes",
      label: "Entrance Safety Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about entrance safety",
      required: false,
      section: "exterior-assessment",
      order: 4,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 300,
          message: "Notes cannot exceed 300 characters",
        },
      ],
    },
    {
      id: "exterior-lighting",
      name: "exteriorLighting",
      label: "Exterior Lighting",
      type: FieldType.SELECT,
      required: true,
      section: "exterior-assessment",
      order: 5,
      width: "half",
      options: [
        { value: "Adequate", label: "Adequate" },
        { value: "Inadequate", label: "Inadequate" },
        { value: "Not Applicable", label: "Not Applicable" },
      ],
    },
    {
      id: "exterior-lighting-notes",
      name: "exteriorLightingNotes",
      label: "Exterior Lighting Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about exterior lighting",
      required: false,
      section: "exterior-assessment",
      order: 6,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 300,
          message: "Notes cannot exceed 300 characters",
        },
      ],
    },
    {
      id: "flooring-condition",
      name: "flooringCondition",
      label: "Flooring Condition",
      type: FieldType.SELECT,
      required: true,
      section: "interior-general-assessment",
      order: 1,
      width: "half",
      options: [
        { value: "Safe", label: "Safe" },
        { value: "Minor Hazards", label: "Minor Hazards" },
        { value: "Major Hazards", label: "Major Hazards" },
      ],
    },
    {
      id: "flooring-condition-notes",
      name: "flooringConditionNotes",
      label: "Flooring Condition Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about flooring condition",
      required: false,
      section: "interior-general-assessment",
      order: 2,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 300,
          message: "Notes cannot exceed 300 characters",
        },
      ],
    },
    {
      id: "stairway-condition",
      name: "stairwayCondition",
      label: "Stairway Condition",
      type: FieldType.SELECT,
      required: true,
      section: "interior-general-assessment",
      order: 3,
      width: "half",
      options: [
        { value: "Safe", label: "Safe" },
        { value: "Minor Hazards", label: "Minor Hazards" },
        { value: "Major Hazards", label: "Major Hazards" },
        { value: "Not Applicable", label: "Not Applicable" },
      ],
    },
    {
      id: "stairway-condition-notes",
      name: "stairwayConditionNotes",
      label: "Stairway Condition Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about stairway condition",
      required: false,
      section: "interior-general-assessment",
      order: 4,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 300,
          message: "Notes cannot exceed 300 characters",
        },
      ],
    },
    {
      id: "interior-lighting",
      name: "interiorLighting",
      label: "Interior Lighting",
      type: FieldType.SELECT,
      required: true,
      section: "interior-general-assessment",
      order: 5,
      width: "half",
      options: [
        { value: "Adequate", label: "Adequate" },
        { value: "Inadequate", label: "Inadequate" },
      ],
    },
    {
      id: "interior-lighting-notes",
      name: "interiorLightingNotes",
      label: "Interior Lighting Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about interior lighting",
      required: false,
      section: "interior-general-assessment",
      order: 6,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 300,
          message: "Notes cannot exceed 300 characters",
        },
      ],
    },
    {
      id: "electrical-safety",
      name: "electricalSafety",
      label: "Electrical Safety",
      type: FieldType.SELECT,
      required: true,
      section: "interior-general-assessment",
      order: 7,
      width: "half",
      options: [
        { value: "Safe", label: "Safe" },
        { value: "Minor Hazards", label: "Minor Hazards" },
        { value: "Major Hazards", label: "Major Hazards" },
      ],
    },
    {
      id: "electrical-safety-notes",
      name: "electricalSafetyNotes",
      label: "Electrical Safety Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about electrical safety",
      required: false,
      section: "interior-general-assessment",
      order: 8,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 300,
          message: "Notes cannot exceed 300 characters",
        },
      ],
    },
    {
      id: "bathroom-floor-safety",
      name: "bathroomFloorSafety",
      label: "Bathroom Floor Safety",
      type: FieldType.SELECT,
      required: true,
      section: "bathroom-assessment",
      order: 1,
      width: "half",
      options: [
        { value: "Safe", label: "Safe" },
        { value: "Minor Hazards", label: "Minor Hazards" },
        { value: "Major Hazards", label: "Major Hazards" },
      ],
    },
    {
      id: "bathroom-floor-safety-notes",
      name: "bathroomFloorSafetyNotes",
      label: "Bathroom Floor Safety Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about bathroom floor safety",
      required: false,
      section: "bathroom-assessment",
      order: 2,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 300,
          message: "Notes cannot exceed 300 characters",
        },
      ],
    },
    {
      id: "grab-bars-present",
      name: "grabBarsPresent",
      label: "Grab Bars Present",
      type: FieldType.SELECT,
      required: true,
      section: "bathroom-assessment",
      order: 3,
      width: "half",
      options: [
        { value: "Adequate", label: "Adequate" },
        { value: "Inadequate", label: "Inadequate" },
        { value: "Not Present", label: "Not Present" },
      ],
    },
    {
      id: "grab-bars-notes",
      name: "grabBarsNotes",
      label: "Grab Bars Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about grab bars",
      required: false,
      section: "bathroom-assessment",
      order: 4,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 300,
          message: "Notes cannot exceed 300 characters",
        },
      ],
    },
    {
      id: "shower-tub-safety",
      name: "showerTubSafety",
      label: "Shower/Tub Safety",
      type: FieldType.SELECT,
      required: true,
      section: "bathroom-assessment",
      order: 5,
      width: "half",
      options: [
        { value: "Safe", label: "Safe" },
        { value: "Minor Hazards", label: "Minor Hazards" },
        { value: "Major Hazards", label: "Major Hazards" },
      ],
    },
    {
      id: "shower-tub-safety-notes",
      name: "showerTubSafetyNotes",
      label: "Shower/Tub Safety Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about shower/tub safety",
      required: false,
      section: "bathroom-assessment",
      order: 6,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 300,
          message: "Notes cannot exceed 300 characters",
        },
      ],
    },
    {
      id: "toilet-safety",
      name: "toiletSafety",
      label: "Toilet Safety",
      type: FieldType.SELECT,
      required: true,
      section: "bathroom-assessment",
      order: 7,
      width: "half",
      options: [
        { value: "Safe", label: "Safe" },
        { value: "Minor Hazards", label: "Minor Hazards" },
        { value: "Major Hazards", label: "Major Hazards" },
      ],
    },
    {
      id: "toilet-safety-notes",
      name: "toiletSafetyNotes",
      label: "Toilet Safety Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about toilet safety",
      required: false,
      section: "bathroom-assessment",
      order: 8,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 300,
          message: "Notes cannot exceed 300 characters",
        },
      ],
    },
    {
      id: "kitchen-floor-safety",
      name: "kitchenFloorSafety",
      label: "Kitchen Floor Safety",
      type: FieldType.SELECT,
      required: true,
      section: "kitchen-assessment",
      order: 1,
      width: "half",
      options: [
        { value: "Safe", label: "Safe" },
        { value: "Minor Hazards", label: "Minor Hazards" },
        { value: "Major Hazards", label: "Major Hazards" },
      ],
    },
    {
      id: "kitchen-floor-safety-notes",
      name: "kitchenFloorSafetyNotes",
      label: "Kitchen Floor Safety Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about kitchen floor safety",
      required: false,
      section: "kitchen-assessment",
      order: 2,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 300,
          message: "Notes cannot exceed 300 characters",
        },
      ],
    },
    {
      id: "cabinet-accessibility",
      name: "cabinetAccessibility",
      label: "Cabinet Accessibility",
      type: FieldType.SELECT,
      required: true,
      section: "kitchen-assessment",
      order: 3,
      width: "half",
      options: [
        { value: "Accessible", label: "Accessible" },
        { value: "Partially Accessible", label: "Partially Accessible" },
        { value: "Not Accessible", label: "Not Accessible" },
      ],
    },
    {
      id: "cabinet-accessibility-notes",
      name: "cabinetAccessibilityNotes",
      label: "Cabinet Accessibility Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about cabinet accessibility",
      required: false,
      section: "kitchen-assessment",
      order: 4,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 300,
          message: "Notes cannot exceed 300 characters",
        },
      ],
    },
    {
      id: "appliance-safety",
      name: "applianceSafety",
      label: "Appliance Safety",
      type: FieldType.SELECT,
      required: true,
      section: "kitchen-assessment",
      order: 5,
      width: "half",
      options: [
        { value: "Safe", label: "Safe" },
        { value: "Minor Hazards", label: "Minor Hazards" },
        { value: "Major Hazards", label: "Major Hazards" },
      ],
    },
    {
      id: "appliance-safety-notes",
      name: "applianceSafetyNotes",
      label: "Appliance Safety Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about appliance safety",
      required: false,
      section: "kitchen-assessment",
      order: 6,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 300,
          message: "Notes cannot exceed 300 characters",
        },
      ],
    },
    {
      id: "bedroom-floor-safety",
      name: "bedroomFloorSafety",
      label: "Bedroom Floor Safety",
      type: FieldType.SELECT,
      required: true,
      section: "bedroom-assessment",
      order: 1,
      width: "half",
      options: [
        { value: "Safe", label: "Safe" },
        { value: "Minor Hazards", label: "Minor Hazards" },
        { value: "Major Hazards", label: "Major Hazards" },
      ],
    },
    {
      id: "bedroom-floor-safety-notes",
      name: "bedroomFloorSafetyNotes",
      label: "Bedroom Floor Safety Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about bedroom floor safety",
      required: false,
      section: "bedroom-assessment",
      order: 2,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 300,
          message: "Notes cannot exceed 300 characters",
        },
      ],
    },
    {
      id: "bed-safety",
      name: "bedSafety",
      label: "Bed Safety",
      type: FieldType.SELECT,
      required: true,
      section: "bedroom-assessment",
      order: 3,
      width: "half",
      options: [
        { value: "Safe", label: "Safe" },
        { value: "Minor Hazards", label: "Minor Hazards" },
        { value: "Major Hazards", label: "Major Hazards" },
      ],
    },
    {
      id: "bed-safety-notes",
      name: "bedSafetyNotes",
      label: "Bed Safety Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about bed safety",
      required: false,
      section: "bedroom-assessment",
      order: 4,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 300,
          message: "Notes cannot exceed 300 characters",
        },
      ],
    },
    {
      id: "bedroom-lighting",
      name: "bedroomLighting",
      label: "Bedroom Lighting",
      type: FieldType.SELECT,
      required: true,
      section: "bedroom-assessment",
      order: 5,
      width: "half",
      options: [
        { value: "Adequate", label: "Adequate" },
        { value: "Inadequate", label: "Inadequate" },
      ],
    },
    {
      id: "bedroom-lighting-notes",
      name: "bedroomLightingNotes",
      label: "Bedroom Lighting Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about bedroom lighting",
      required: false,
      section: "bedroom-assessment",
      order: 6,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 300,
          message: "Notes cannot exceed 300 characters",
        },
      ],
    },
    {
      id: "smoke-detectors",
      name: "smokeDetectors",
      label: "Smoke Detectors",
      type: FieldType.SELECT,
      required: true,
      section: "emergency-preparedness",
      order: 1,
      width: "half",
      options: [
        { value: "Present and Functional", label: "Present and Functional" },
        {
          value: "Present but Not Functional",
          label: "Present but Not Functional",
        },
        { value: "Not Present", label: "Not Present" },
      ],
    },
    {
      id: "smoke-detectors-notes",
      name: "smokeDetectorsNotes",
      label: "Smoke Detectors Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about smoke detectors",
      required: false,
      section: "emergency-preparedness",
      order: 2,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 300,
          message: "Notes cannot exceed 300 characters",
        },
      ],
    },
    {
      id: "carbon-monoxide-detectors",
      name: "carbonMonoxideDetectors",
      label: "Carbon Monoxide Detectors",
      type: FieldType.SELECT,
      required: true,
      section: "emergency-preparedness",
      order: 3,
      width: "half",
      options: [
        { value: "Present and Functional", label: "Present and Functional" },
        {
          value: "Present but Not Functional",
          label: "Present but Not Functional",
        },
        { value: "Not Present", label: "Not Present" },
        { value: "Not Applicable", label: "Not Applicable" },
      ],
    },
    {
      id: "carbon-monoxide-detectors-notes",
      name: "carbonMonoxideDetectorsNotes",
      label: "Carbon Monoxide Detectors Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about carbon monoxide detectors",
      required: false,
      section: "emergency-preparedness",
      order: 4,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 300,
          message: "Notes cannot exceed 300 characters",
        },
      ],
    },
    {
      id: "emergency-exits",
      name: "emergencyExits",
      label: "Emergency Exits",
      type: FieldType.SELECT,
      required: true,
      section: "emergency-preparedness",
      order: 5,
      width: "half",
      options: [
        { value: "Accessible", label: "Accessible" },
        { value: "Partially Accessible", label: "Partially Accessible" },
        { value: "Not Accessible", label: "Not Accessible" },
      ],
    },
    {
      id: "emergency-exits-notes",
      name: "emergencyExitsNotes",
      label: "Emergency Exits Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter notes about emergency exits",
      required: false,
      section: "emergency-preparedness",
      order: 6,
      width: "half",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 300,
          message: "Notes cannot exceed 300 characters",
        },
      ],
    },
    {
      id: "emergency-contacts-available",
      name: "emergencyContactsAvailable",
      label: "Emergency Contacts Available",
      type: FieldType.CHECKBOX,
      required: true,
      section: "emergency-preparedness",
      order: 7,
      width: "full",
      defaultValue: false,
    },
    {
      id: "priority-safety-concerns",
      name: "prioritySafetyConcerns",
      label: "Priority Safety Concerns",
      type: FieldType.MULTISELECT,
      required: true,
      section: "recommendations",
      order: 1,
      width: "full",
      options: [
        { value: "Fall Hazards", label: "Fall Hazards" },
        { value: "Fire Hazards", label: "Fire Hazards" },
        { value: "Electrical Hazards", label: "Electrical Hazards" },
        { value: "Bathroom Safety", label: "Bathroom Safety" },
        { value: "Kitchen Safety", label: "Kitchen Safety" },
        { value: "Bedroom Safety", label: "Bedroom Safety" },
        { value: "Stairway Safety", label: "Stairway Safety" },
        { value: "Emergency Preparedness", label: "Emergency Preparedness" },
        { value: "Entrance/Exit Safety", label: "Entrance/Exit Safety" },
        { value: "Other", label: "Other" },
      ],
    },
    {
      id: "safety-intervention-urgency",
      name: "safetyInterventionUrgency",
      label: "Safety Intervention Urgency",
      type: FieldType.SELECT,
      required: true,
      section: "recommendations",
      order: 2,
      width: "half",
      options: [
        { value: "Immediate", label: "Immediate" },
        { value: "High", label: "High" },
        { value: "Medium", label: "Medium" },
        { value: "Low", label: "Low" },
      ],
    },
    {
      id: "overall-safety-rating",
      name: "overallSafetyRating",
      label: "Overall Safety Rating",
      type: FieldType.SELECT,
      required: true,
      section: "recommendations",
      order: 3,
      width: "half",
      options: [
        { value: "Safe", label: "Safe" },
        { value: "Moderately Safe", label: "Moderately Safe" },
        { value: "Unsafe", label: "Unsafe" },
        { value: "Extremely Unsafe", label: "Extremely Unsafe" },
      ],
    },
    {
      id: "recommended-safety-modifications",
      name: "recommendedSafetyModifications",
      label: "Recommended Safety Modifications",
      type: FieldType.TEXTAREA,
      placeholder: "Enter detailed recommendations for safety modifications",
      required: true,
      section: "recommendations",
      order: 4,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Recommended safety modifications are required",
        },
        {
          type: ValidationRuleType.MIN_LENGTH,
          value: 50,
          message: "Recommendations must be at least 50 characters",
        },
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 1000,
          message: "Recommendations cannot exceed 1000 characters",
        },
      ],
    },
    {
      id: "assessor-name",
      name: "assessorName",
      label: "Assessor Name",
      type: FieldType.TEXT,
      required: true,
      section: "assessment-details",
      order: 1,
      width: "half",
      defaultValue: "", // Will be populated with current user name
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Assessor name is required",
        },
        {
          type: ValidationRuleType.MIN_LENGTH,
          value: 3,
          message: "Assessor name must be at least 3 characters",
        },
      ],
    },
    {
      id: "assessor-position",
      name: "assessorPosition",
      label: "Assessor Position",
      type: FieldType.TEXT,
      required: true,
      section: "assessment-details",
      order: 2,
      width: "half",
      defaultValue: "", // Will be populated with current user position
      validation: [
        {
          type: ValidationRuleType.REQUIRED,
          message: "Assessor position is required",
        },
        {
          type: ValidationRuleType.MIN_LENGTH,
          value: 3,
          message: "Assessor position must be at least 3 characters",
        },
      ],
    },
    {
      id: "assessment-duration",
      name: "assessmentDuration",
      label: "Assessment Duration (minutes)",
      type: FieldType.NUMBER,
      required: true,
      section: "assessment-details",
      order: 3,
      width: "half",
      defaultValue: 60,
      validation: [
        {
          type: ValidationRuleType.MIN_VALUE,
          value: 1,
          message: "Assessment duration must be at least 1 minute",
        },
      ],
    },
    {
      id: "assessment-photos",
      name: "assessmentPhotos",
      label: "Assessment Photos",
      type: FieldType.IMAGE,
      required: false,
      section: "assessment-details",
      order: 4,
      width: "half",
      multiple: true,
      helpText: "Upload photos of safety hazards (max 10MB each)",
    },
    {
      id: "follow-up-required",
      name: "followUpRequired",
      label: "Follow-up Required",
      type: FieldType.CHECKBOX,
      required: true,
      section: "assessment-details",
      order: 5,
      width: "half",
      defaultValue: false,
    },
    {
      id: "follow-up-date",
      name: "followUpDate",
      label: "Follow-up Date",
      type: FieldType.DATE,
      required: false,
      section: "assessment-details",
      order: 6,
      width: "half",
      dependencies: [
        {
          type: "requirement",
          sourceField: "followUpRequired",
          condition: "value === true",
          action: "required = true",
        },
        {
          type: "visibility",
          sourceField: "followUpRequired",
          condition: "value === true",
          action: "visible = true",
        },
      ],
      validation: [
        {
          type: ValidationRuleType.CUSTOM,
          value: (value: string) => {
            if (!value) return true;
            const followUpDate = new Date(value);
            const today = new Date();
            return followUpDate > today;
          },
          message: "Follow-up date must be in the future",
        },
      ],
    },
    {
      id: "additional-notes",
      name: "additionalNotes",
      label: "Additional Notes",
      type: FieldType.TEXTAREA,
      placeholder: "Enter any additional notes about the assessment",
      required: false,
      section: "assessment-details",
      order: 7,
      width: "full",
      validation: [
        {
          type: ValidationRuleType.MAX_LENGTH,
          value: 1000,
          message: "Additional notes cannot exceed 1000 characters",
        },
      ],
    },
  ],
  dependencies: [
    {
      formId: "beneficiary-assessment-eligibility-form",
      description:
        "Home safety assessment must be linked to an eligible beneficiary",
      type: "prerequisite",
      required: true,
    },
  ],
  createdAt: new Date(),
  updatedAt: new Date(),
  isActive: true,
};

// Register form with the form registry
formRegistry.registerForm(
  {
    id: homeSafetyAssessmentForm.id,
    title: homeSafetyAssessmentForm.title,
    description: homeSafetyAssessmentForm.description,
    module: FormModule.ASSESSMENT,
    clientTypes: homeSafetyAssessmentForm.clientTypes,
    permissions: homeSafetyAssessmentForm.permissions,
    dependencies: homeSafetyAssessmentForm.dependencies,
    version: homeSafetyAssessmentForm.version,
    path: "/assessment/home-safety",
    icon: "shield-check",
    isActive: true,
  },
  homeSafetyAssessmentForm,
);
